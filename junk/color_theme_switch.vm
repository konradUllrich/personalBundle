#set($theme = 'default_default')
#if ($Request.containsKey("theme") )
#set($theme = $Request.get("theme"))
#end

<style>
    :root
    {
        --background-color: #fff;
        --foreground-color: #090b09;
        --foreground-light-color: var(--foreground-color);
        --primary-color: hsl(225deg 76% 56%);
        --primary-color-medium: color-mix(in srgb,var(--primary-color) 40%,white);
        --primary-color-light: color-mix(in srgb,var(--primary-color) 20%,white);
        --success-color: #4fff6d;
        --error-color: #f84e4e;
        --warn-color: #ffee61;
        --disabled-color: color-mix(in srgb,var(--foreground-color) 10%,white);
        
        --border-radius: 20px;
        
       
        --outline-width: 2px;
        --outline-offset: 2px;
        --outline: 2px solid var(--primary-color);
        
        --shadow: 0;
        --popup-shadow: 9px 17px 58px 7px rgba(0,0,0,0.33);
        
        --animation-time: 0.2s;

        --container-border: color-mix(in srgb,var(--foreground-color) 10%,white) solid 1px;
        --font-family: Arial,SansSerif;
        --font-weight-fat: 600;
        --font-size-m: 1rem;
        --font-size-l: 1rem;
        --font-size-xl: 1rem;
        --icon-font: normal normal 400 14px / 1 icon54-solid;
        --input-height: 2rem;
        
    }

    [data-theme$="default"]{
        --primary-color-medium: hsl(from var(--primary-color) h s 75%);
        --primary-color-light: hsl(from var(--primary-color) h s 97%);
        --outline: 2px solid var(--primary-color);
    }
    
    [data-theme$="dark"]{
        --background-color: #2e2e2e;
        --foreground-color: #eeeaea;
        --primary-color-medium: hsl(from var(--primary-color) h 44% 35%);
        --primary-color-light: hsl(from var(--primary-color) h 44% 20%);
        --container-border: color-mix(in srgb,var(--background-color) 80%,white) solid 1px;
        --disabled-color: color-mix(in srgb,var(--background-color) 90%,white);
        --success-color: #007e16;
        --error-color: #b23030;
        --warn-color: #a29108;

        --outline: 2px solid var(--primary-color);
    }
    
    [data-theme="default_dark"]
    {
        --primary-color: hsl(220, 47%, 64%);  
    }
    
    [data-theme="green_default"]
    {
        --primary-color: hsl(155, 39%, 34%);
       
    }
    
    [data-theme="green_dark"]
    {
        --primary-color: hsl(151, 32%, 55%);
    }
      [data-theme="red_default"]
    {
        --primary-color: hsl(352, 97%, 45%);
    }
    
    [data-theme="red_dark"]
    {
        --primary-color: hsl(352, 97%, 45%);
    }

     [data-theme^="uk"]
    {
        --primary-color: hsl(282.2deg 97% 45%);
        --background-color: #f8ecff;
        --foreground-color: #4d0062;
        --border-radius: 4px;
        --outline: 3px solid red;
        --shadow: 0 0 2px 0 rgba(0,0,0,0.33);
    }
    [data-theme="uk_dark"]
    {
        --background-color: #25012e;
        --foreground-color: #f8ecff;
        --primary-color: #dd8dff;
    }
    
    .colorThemeSwitch {
      display:flex;
      justify-content:center;
      align-items:center;
      height:var(--input-height);
      gap:6px; 
    }

    .colorThemeSwitch select {
       width:50px;
       height:50px;
    }
    .modeSwitch {
      background-color:var(--background-color);
      border-width:0;
      color:var(--primary-color);
      position:relative;
      display:flex;
      padding:0;
     
    }
    .modeSwitch i {
      font-size:19px;  
    }
    .modeSwitch select {
      position:absolute;
      top:0;
      left:0;
      buttom:0;
      right:0;
      opacity:0;
    }
    .colorThemeSwitch select {
      max-width:20px;
      max-height:20px;
      border-width:0;
      padding:0;
      color:var(--primary-color)
    }
  
    </style>
    
    
    <div class='colorThemeSwitch' > 
      <button class='modeSwitch' id='modeSwitch'>
         <i class="icon54-l_Weather-Moon3"></i>
        <select>
          <option value="system">System</option>
          <option value="default" >Hell</option>
          <option value="dark">Dunkel</option>
        </select>
      </button>
      <select id='themeNameSwitch'>
        <option value="default">Standard</option>
        <option value="green">Gr√ºn</option>
        <option value="red">Rot</option>
        <option value="uk">UK</option>
      </select>
    </div>
    
    <script>
    const theme = "$theme"
    const _mode = theme ? theme.split('_')[1]?? 'default' :'default'
    const themeName = theme ? theme.split('_')[0]?? 'default' :'default'
    
    const themator = {
        preferesDark:window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,
        mode: _mode,
        themeName: themeName,
        modeSwitch:document.querySelector('#modeSwitch select'),
        modeSwitchIcon:document.querySelector('#modeSwitch i'),
        themeNameSwitch:document.querySelector('#themeNameSwitch'),
        addEventlistener(){
          this.modeSwitch.onchange= (e)=>{
            this.setMode(e.target.value)
          }
          this.themeNameSwitch.onchange= (e)=>{
            this.setThemeName(e.target.value)
          }
        },
        setOptionState(){
          document.querySelector('#modeSwitch option[value=' + this.mode +']').selected=true
          document.querySelector('#themeNameSwitch option[value=' + this.themeName +']').selected=true
        },
        init(){
          this.setThemeSettings()
          this.setOptionState()
          this.addEventlistener()
        },
        getThemeSettings(){
           let _mode =this.mode
            if(this.mode === 'system'){
              _mode =this.preferesDark?'dark':'default'
            }
          return {
          themeSetting: `${this.themeName}_${this.mode}`,
          bodyData:`${this.themeName}_${_mode}`
          }
        },
        setMode(mode){
           this.mode = mode 
           this.setThemeSettings()
        },
        setModeIcon(){
          this.mode === 'default'?
              this.modeSwitchIcon.classList.replace('icon54-l_BasicIcons-Sun','icon54-l_Weather-Moon3'):
              this.modeSwitchIcon.classList.replace('icon54-l_Weather-Moon3','icon54-l_BasicIcons-Sun')
        },
        toggleMode(){
          this.mode = this.mode === 'default'?'dark':'default'
          this.setThemeSettings()
        },
        setThemeName(themeName){
          this.themeName = themeName
          this.setThemeSettings()
        },
        setThemeSettings(){
          document.body.dataset.theme = this.getThemeSettings().bodyData
          this.setModeIcon()
          this.setCookie()
          console.log(this)
        },
        setCookie(){
          var expires = "";
          document.cookie = 'theme' + "=" + (this.getThemeSettings().themeSetting || "")  + expires + "; path=/";
        }
    
    }
      themator.init()
    </script>
    