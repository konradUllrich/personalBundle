/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@localhost/ixportal -t abp_kat_freigabestatus -t abp_kat_kategorie -t abp_kat_planungsstatus -t abp_kat_zustimmungsstatus -t abp_t_abp -t abp_t_abp_ma -t abp_t_abp_ma_details -t abp_t_abp_status -t abp_t_abp_zstatus -t abw_kat_abwesenheitsart -t abw_kat_antragsstatus -t abw_kat_planungsprozess -t abw_t_antrag -t abw_t_antrag_abwesenheit -t benv_t_u_apps -t benv_t_u_gruppen -t benv_t_u_zusatzdaten -t bixv_kat_matching -t bixv_kat_matching_metadat -t bixv_kat_settings -t bixv_kat_status -t bixv_kat_vismetadaten -t bixv_t_archiv -t bixv_t_archiv2 -t bixv_t_inbox -t bixv_t_inbox_md -t bixv_t_journal -t bixv_t_log -t bixv_t_suchtrefferakten -t cal_kat_bestuhlung -t cal_kat_kategorien -t cal_kat_status -t cal_kat_veranstaltungsart -t cal_kat_zusatzleistungen -t cal_set_personal -t cal_t_externe_verwalter -t cal_t_ressource_standard -t cal_t_ressourcen -t cal_t_ressourcen_bestuhl -t cal_t_ressourcen_equipment -t cal_t_termine -t cal_t_termine_journal -t cal_t_termine_nachrichten -t cal_t_termine_reservierer -t chat -t chat_document -t chat_message -t chat_recipient -t chat_reffiles -t chat_usersettings -t dsattribute -t dsattributetitle -t dsclass -t dsclasstitle -t dscontainer -t dscountry -t dsdistlist -t dsgroup -t dslocality -t dsmember -t dsobject -t dsorganization -t dsorgunit -t dspasswordhistory -t dsrole -t dsset -t dsstatus -t dstenant -t dsuser -t ft_t_feiertage -t ft_t_gedenktage -t h_t_a_hilfetexte -t h_t_anwendung -t inv_kat_bereich -t inv_kat_kategorie -t inv_kat_unterkategorie -t inv_t_inventar -t is_ad_settings -t is_advertising -t is_advertising_department -t is_advertising_file -t is_advertising_interest -t is_advertising_language -t is_advertising_skill -t is_categories -t is_comment -t is_comment_file -t is_comment_like -t is_contact -t is_event -t is_event_img -t is_event_participant -t is_feed -t is_feed_recipient -t is_feed_setting -t is_feedpk -t is_file_shelf -t is_file_shelf_file -t is_file_shelf_folder -t is_file_shelf_folderperm -t is_group -t is_group_bid -t is_group_img -t is_group_member -t is_interest -t is_mailsetting -t is_message -t is_message_member -t is_modules -t is_photo -t is_photo_file -t is_photoalbum -t is_photoalbum_preview_img -t is_photoalbum_recipient -t is_poke -t is_post -t is_post_file -t is_post_img -t is_profile -t is_profile_img -t is_profile_mailsetting -t is_profile_nav -t is_profile_pushsetting -t is_profile_setting -t is_pushnotificationsetting -t is_systemmessage -t is_systemmessage_rcpt -t is_systemmessage_reference -t is_userplugin -t ix_basic_datagroup -t ix_doc_category -t ix_doc_document -t katalog_bezirke -t katalog_schulen -t katalog_standorte -t kb_kat_boardstatus -t kb_t_b_besitzer -t kb_t_b_favoriten -t kb_t_b_k_beobachten -t kb_t_b_k_c_mitglieder -t kb_t_b_k_checkliste -t kb_t_b_k_connections -t kb_t_b_k_journal -t kb_t_b_k_k_journal -t kb_t_b_k_kommentare -t kb_t_b_k_labels -t kb_t_b_k_m_mitglieder -t kb_t_b_k_mitglieder -t kb_t_b_k_nachrichten -t kb_t_b_karte -t kb_t_b_kategorie -t kb_t_b_labels -t kb_t_b_mitglieder -t kb_t_b_personal_settings -t kb_t_b_prioritaet -t kb_t_b_spalte -t kb_t_b_status -t kb_t_backup -t kb_t_board -t kb_t_boardgruppe -t kb_t_bu_besitzer -t kb_t_emailtemplates -t kb_t_personal_settings -t kb_t_serientermine -t lcapikey -t lcapikeyrole -t lcapiperm -t lcapirole -t lcapp -t lcappaction -t lcappchildcontrol -t lcappchildcontroltitle -t lcappcontrol -t lcappcontroldr -t lcappcontroldrtitle -t lcappcontroltitle -t lcappdatapick -t lcappdatapickchild -t lcappdg -t lcappdgtitle -t lcappfield -t lcappfieldtitle -t lcappfilter -t lcappform -t lcappfup -t lcappfupdg -t lcappfuptitle -t lcappindex -t lcappindexcolumn -t lcapplink -t lcappmail -t lcappmailrcp -t lcappmenuitem -t lcappprops -t lcappref -t lcapprefparam -t lcappreftitle -t lcappsearchconfig -t lcapptempl -t lcapptitle -t lccalrecu -t lccategory -t lccategorytitle -t lcexport -t lcfwconn -t lclinkedelement -t lclinkedrecords -t lclinkedrecordspk -t lcmainportal -t lcmapapp -t lcmenu -t lcmenucloud -t lcmenuprop -t lcmenutitle -t lcmessages -t lcpermclass -t lcpolicy -t lcprofile -t lcprtclass -t lcprtgrid -t lcprtgridportlet -t lcprtinstance -t lcprtmetadata -t lcprtprop -t lcprtref -t lcprtset -t lcrdf -t lcrdfpredicate -t lcrdfuser -t lcrecipients -t lcschedhistory -t lcschedstatistics -t lcsearchalternative -t lctaggingposts -t lctaggingtags -t per_kat_art -t per_kat_ausstattung -t per_kat_ausstattung_kat -t per_kat_buerol_ebene1 -t per_kat_bueroleitung -t per_kat_funktion -t per_kat_standorte -t per_kat_zusatzfunktion -t per_t_import_az -t per_t_orga0 -t per_t_orga1 -t per_t_orga2 -t per_t_orga3 -t per_t_orga4 -t per_t_pers_azk -t per_t_pers_journal -t per_t_pers_profil -t per_t_pers_uk -t per_t_personal -t per_t_personal_import -t planner_event -t planner_member -t planner_owners -t planner_times -t qu_categories -t qu_comment -t qu_comment_files -t qu_persons -t qu_question_answers -t qu_question_cat -t qu_question_tags -t qu_questions -t qu_questions_files -t qu_tags -t qu_votes -t scbau_imp_eckdaten -t scbau_imp_eckdaten_daten -t scbau_kat_aufgabentraeger -t scbau_kat_bautyp -t scbau_kat_bedarfstraeger -t scbau_kat_massnahmeart -t scbau_kat_mittelherkunft -t scbau_kat_phasen -t scbau_kat_prioritaet -t scbau_kat_schultraegertyp -t scbau_kat_schultyp -t scbau_kat_standardanpass -t scbau_kat_verzoegerungen -t scbau_kat_vorlage -t scbau_t_berichte -t scbau_t_berichtswesen -t scbau_t_import -t scbau_t_m_abfragen -t scbau_t_massnahmen_drittm -t scbau_t_massnahmen_finanz -t scbau_t_massnahmen_kapa -t scbau_t_massnahmen_mittela -t scbau_t_massnahmen_phase -t scbau_t_massnahmen_vermerk -t scbau_t_massnamen -t scbau_t_schulstatistik -t sf_t_schulferien -t t_bilder -t t_smapp -t t_smapp_absatz -t t_smapp_asp -t t_smapp_dokumente -t t_smapp_seite -t t_smapp_seite_kapitel -t tsk_categories -t tsk_history -t tsk_projectmember -t tsk_task -t val_kat_standorte -t vbluser -t vdscontainer -t vdscountry -t vdsdistlist -t vdsgroup -t vdslocality -t vdsobject -t vdsorganization -t vdsorgunit -t vdsrole -t vdsset -t vdstenant -t vdsuser -t xcalendarrule -t xcalpersonal -t xcalpersonal_categoryddb -t xcalrule12 -t xdatagroup72f3902c -t xdatagroup931228fd -t xdatagroup97e2428e -t xdatagroup9c4ca29b -t xdatagroup9d1d5e1a -t xfiledatagroup -t xfiledatagroup1 -t xfiledatagroup10 -t xfiledatagroup11 -t xfiledatagroup111 -t xfiledatagroup12 -t xfiledatagroup123 -t xfiledatagroup1234 -t xfiledatagroup12345 -t xfiledatagroup13 -t xfiledatagroup14 -t xfiledatagroup15 -t xfiledatagroup151 -t xfiledatagroup1512 -t xfiledatagroup161 -t xfiledatagroup18 -t xfiledatagroup191 -t xfiledatagroup2 -t xfiledatagroup21 -t xfiledatagroup221 -t xfiledatagroup2212 -t xfiledatagroup231 -t xfiledatagroup232 -t xfiledatagroup241 -t xfiledatagroup244b4cdd -t xfiledatagroup25 -t xfiledatagroup26 -t xfiledatagroup27 -t xfiledatagroup272 -t xfiledatagroup292 -t xfiledatagroup3 -t xfiledatagroup30 -t xfiledatagroup31 -t xfiledatagroup3123 -t xfiledatagroup33 -t xfiledatagroup331 -t xfiledatagroup341 -t xfiledatagroup38 -t xfiledatagroup39 -t xfiledatagroup4 -t xfiledatagroup40 -t xfiledatagroup421 -t xfiledatagroup43 -t xfiledatagroup5 -t xfiledatagroup54e9853f -t xfiledatagroup6 -t xfiledatagroup61 -t xfiledatagroup7 -t xfiledatagroup7111 -t xfiledatagroup79a09da0 -t xfiledatagroup8 -t xfiledatagroup81 -t xfiledatagroup9 -t xfiledatagroup_ch1 -t xpoll353cde18 -t xpoll_categorycac0fc67 -t xpoll_distributor -t xpoll_option94d01acc -t xpoll_vote00bb5bc6 -t ze_kat_buchungsart -t ze_kat_einstellungen -t ze_kat_erfassungsstatus -t ze_kat_freigabestatus -t ze_kat_kostenstellen -t ze_kat_pausen -t ze_kat_saldenkontrolle -t ze_kat_zeittyp -t ze_t_m_d_zeiten -t ze_t_m_datum -t ze_t_m_journal -t ze_t_m_massnahmen -t ze_t_monat -t ze_t_perssettings -t ze_t_perssettings_art -t ze_t_quartalsbericht -s public
 *
 */


export type Json = unknown;

// Table abp_kat_freigabestatus
export interface AbpKatFreigabestatus {
  strid: string;
  dtinsert: string | null;
  str_freigabestatus: string | null;
  dtedit: string | null;
  luserid: number | null;
  str_id: string | null;
  luseridinsert: number | null;
  str_sortierung: string | null;
}
export interface AbpKatFreigabestatusInput {
  strid: string;
  dtinsert?: string | null;
  str_freigabestatus?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_id?: string | null;
  luseridinsert?: number | null;
  str_sortierung?: string | null;
}
const abp_kat_freigabestatus = {
  tableName: 'abp_kat_freigabestatus',
  columns: ['strid', 'dtinsert', 'str_freigabestatus', 'dtedit', 'luserid', 'str_id', 'luseridinsert', 'str_sortierung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbpKatFreigabestatus,
  $input: null as unknown as AbpKatFreigabestatusInput
} as const;

// Table abp_kat_kategorie
export interface AbpKatKategorie {
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  str_hintergrundfarbe: string | null;
  dtinsert: string | null;
  str_sortierung: string | null;
  str_kategorie: string | null;
  str_schriftfarbe: string | null;
  strid: string;
}
export interface AbpKatKategorieInput {
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_hintergrundfarbe?: string | null;
  dtinsert?: string | null;
  str_sortierung?: string | null;
  str_kategorie?: string | null;
  str_schriftfarbe?: string | null;
  strid: string;
}
const abp_kat_kategorie = {
  tableName: 'abp_kat_kategorie',
  columns: ['luseridinsert', 'dtedit', 'luserid', 'str_hintergrundfarbe', 'dtinsert', 'str_sortierung', 'str_kategorie', 'str_schriftfarbe', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbpKatKategorie,
  $input: null as unknown as AbpKatKategorieInput
} as const;

// Table abp_kat_planungsstatus
export interface AbpKatPlanungsstatus {
  strid: string;
  str_planungsstatus: string | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  str_sortierung: string | null;
  luseridinsert: number | null;
  str_id: string | null;
}
export interface AbpKatPlanungsstatusInput {
  strid: string;
  str_planungsstatus?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_sortierung?: string | null;
  luseridinsert?: number | null;
  str_id?: string | null;
}
const abp_kat_planungsstatus = {
  tableName: 'abp_kat_planungsstatus',
  columns: ['strid', 'str_planungsstatus', 'luserid', 'dtinsert', 'dtedit', 'str_sortierung', 'luseridinsert', 'str_id'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbpKatPlanungsstatus,
  $input: null as unknown as AbpKatPlanungsstatusInput
} as const;

// Table abp_kat_zustimmungsstatus
export interface AbpKatZustimmungsstatus {
  str_sortierung: string | null;
  luserid: number | null;
  dtedit: string | null;
  str_zustimmungsstatus: string | null;
  dtinsert: string | null;
  str_id: string | null;
  strid: string;
  luseridinsert: number | null;
}
export interface AbpKatZustimmungsstatusInput {
  str_sortierung?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  str_zustimmungsstatus?: string | null;
  dtinsert?: string | null;
  str_id?: string | null;
  strid: string;
  luseridinsert?: number | null;
}
const abp_kat_zustimmungsstatus = {
  tableName: 'abp_kat_zustimmungsstatus',
  columns: ['str_sortierung', 'luserid', 'dtedit', 'str_zustimmungsstatus', 'dtinsert', 'str_id', 'strid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbpKatZustimmungsstatus,
  $input: null as unknown as AbpKatZustimmungsstatusInput
} as const;

// Table abp_t_abp
export interface AbpTAbp {
  dtedit: string | null;
  l_jahr: number | null;
  ref_planungsprozess: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  luserid: number | null;
  strid: string;
  ref_bl: string | null;
  ref_bueroleitung: number | null;
}
export interface AbpTAbpInput {
  dtedit?: string | null;
  l_jahr?: number | null;
  ref_planungsprozess?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  strid: string;
  ref_bl?: string | null;
  ref_bueroleitung?: number | null;
}
const abp_t_abp = {
  tableName: 'abp_t_abp',
  columns: ['dtedit', 'l_jahr', 'ref_planungsprozess', 'luseridinsert', 'dtinsert', 'luserid', 'strid', 'ref_bl', 'ref_bueroleitung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_planungsprozess: { table: 'abw_kat_planungsprozess', column: 'strid', $type: null as unknown as AbwKatPlanungsprozess },
    ref_bl: { table: 'per_kat_bueroleitung', column: 'strid', $type: null as unknown as PerKatBueroleitung },
  },
  $type: null as unknown as AbpTAbp,
  $input: null as unknown as AbpTAbpInput
} as const;

// Table abp_t_abp_ma
export interface AbpTAbpMa {
  l_anzahltagedez: number | null;
  fkstrid: string | null;
  l_anzahltagemrz: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strid: string;
  l_anzahltageapr: number | null;
  ref_planungsstatus: string | null;
  l_anzahltagejun: number | null;
  ref_personal: string | null;
  l_anzahltagejul: number | null;
  luserid: number | null;
  l_anzahltagegesamt: number | null;
  l_anzahltageokt: number | null;
  l_anzahltagesep: number | null;
  l_anzahltagenov: number | null;
  l_anzahltageaug: number | null;
  ref_benutzer: number | null;
  dtedit: string | null;
  l_anzahltagefeb: number | null;
  l_anzahltagejan: number | null;
  l_anzahltagemai: number | null;
}
export interface AbpTAbpMaInput {
  l_anzahltagedez?: number | null;
  fkstrid?: string | null;
  l_anzahltagemrz?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strid: string;
  l_anzahltageapr?: number | null;
  ref_planungsstatus?: string | null;
  l_anzahltagejun?: number | null;
  ref_personal?: string | null;
  l_anzahltagejul?: number | null;
  luserid?: number | null;
  l_anzahltagegesamt?: number | null;
  l_anzahltageokt?: number | null;
  l_anzahltagesep?: number | null;
  l_anzahltagenov?: number | null;
  l_anzahltageaug?: number | null;
  ref_benutzer?: number | null;
  dtedit?: string | null;
  l_anzahltagefeb?: number | null;
  l_anzahltagejan?: number | null;
  l_anzahltagemai?: number | null;
}
const abp_t_abp_ma = {
  tableName: 'abp_t_abp_ma',
  columns: ['l_anzahltagedez', 'fkstrid', 'l_anzahltagemrz', 'luseridinsert', 'dtinsert', 'strid', 'l_anzahltageapr', 'ref_planungsstatus', 'l_anzahltagejun', 'ref_personal', 'l_anzahltagejul', 'luserid', 'l_anzahltagegesamt', 'l_anzahltageokt', 'l_anzahltagesep', 'l_anzahltagenov', 'l_anzahltageaug', 'ref_benutzer', 'dtedit', 'l_anzahltagefeb', 'l_anzahltagejan', 'l_anzahltagemai'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'abp_t_abp', column: 'strid', $type: null as unknown as AbpTAbp },
    ref_planungsstatus: { table: 'abp_kat_planungsstatus', column: 'strid', $type: null as unknown as AbpKatPlanungsstatus },
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
  },
  $type: null as unknown as AbpTAbpMa,
  $input: null as unknown as AbpTAbpMaInput
} as const;

// Table abp_t_abp_ma_details
export interface AbpTAbpMaDetails {
  ref_stv2: number | null;
  fkstrid: string | null;
  txt_bemerkungen: string | null;
  ref_kategorie: string | null;
  dt_von: string | null;
  str_stellvertretung2: string | null;
  luseridinsert: number | null;
  str_stellvertretung: string | null;
  l_anzahltage: number | null;
  ref_stv: number | null;
  b_keinestellvertretung: boolean | null;
  dt_bis2: string | null;
  ref_personal: string | null;
  luserid: number | null;
  l_idstellvertretung2: number | null;
  str_begruendungkeinestellvertr: string | null;
  b_stellvertretungwirduebernomm: boolean | null;
  strid: string;
  dtedit: string | null;
  dt_bis: string | null;
  dtinsert: string | null;
}
export interface AbpTAbpMaDetailsInput {
  ref_stv2?: number | null;
  fkstrid?: string | null;
  txt_bemerkungen?: string | null;
  ref_kategorie?: string | null;
  dt_von?: string | null;
  str_stellvertretung2?: string | null;
  luseridinsert?: number | null;
  str_stellvertretung?: string | null;
  l_anzahltage?: number | null;
  ref_stv?: number | null;
  b_keinestellvertretung?: boolean | null;
  dt_bis2?: string | null;
  ref_personal?: string | null;
  luserid?: number | null;
  l_idstellvertretung2?: number | null;
  str_begruendungkeinestellvertr?: string | null;
  b_stellvertretungwirduebernomm?: boolean | null;
  strid: string;
  dtedit?: string | null;
  dt_bis?: string | null;
  dtinsert?: string | null;
}
const abp_t_abp_ma_details = {
  tableName: 'abp_t_abp_ma_details',
  columns: ['ref_stv2', 'fkstrid', 'txt_bemerkungen', 'ref_kategorie', 'dt_von', 'str_stellvertretung2', 'luseridinsert', 'str_stellvertretung', 'l_anzahltage', 'ref_stv', 'b_keinestellvertretung', 'dt_bis2', 'ref_personal', 'luserid', 'l_idstellvertretung2', 'str_begruendungkeinestellvertr', 'b_stellvertretungwirduebernomm', 'strid', 'dtedit', 'dt_bis', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'abp_t_abp_ma', column: 'strid', $type: null as unknown as AbpTAbpMa },
    ref_kategorie: { table: 'abp_kat_kategorie', column: 'strid', $type: null as unknown as AbpKatKategorie },
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
  },
  $type: null as unknown as AbpTAbpMaDetails,
  $input: null as unknown as AbpTAbpMaDetailsInput
} as const;

// Table abp_t_abp_status
export interface AbpTAbpStatus {
  fkstrid: string | null;
  ref_personal: string | null;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  ref_freigabestatus: string | null;
  luseridinsert: number | null;
  strid: string;
}
export interface AbpTAbpStatusInput {
  fkstrid?: string | null;
  ref_personal?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  ref_freigabestatus?: string | null;
  luseridinsert?: number | null;
  strid: string;
}
const abp_t_abp_status = {
  tableName: 'abp_t_abp_status',
  columns: ['fkstrid', 'ref_personal', 'luserid', 'dtedit', 'dtinsert', 'ref_freigabestatus', 'luseridinsert', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'abp_t_abp', column: 'strid', $type: null as unknown as AbpTAbp },
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_freigabestatus: { table: 'abp_kat_freigabestatus', column: 'strid', $type: null as unknown as AbpKatFreigabestatus },
  },
  $type: null as unknown as AbpTAbpStatus,
  $input: null as unknown as AbpTAbpStatusInput
} as const;

// Table abp_t_abp_zstatus
export interface AbpTAbpZstatus {
  dtinsert: string | null;
  ref_zustimmungsstatus: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  txt_kommentar: string | null;
  strid: string;
  fkstrid: string | null;
  luserid: number | null;
}
export interface AbpTAbpZstatusInput {
  dtinsert?: string | null;
  ref_zustimmungsstatus?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  txt_kommentar?: string | null;
  strid: string;
  fkstrid?: string | null;
  luserid?: number | null;
}
const abp_t_abp_zstatus = {
  tableName: 'abp_t_abp_zstatus',
  columns: ['dtinsert', 'ref_zustimmungsstatus', 'dtedit', 'luseridinsert', 'txt_kommentar', 'strid', 'fkstrid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_zustimmungsstatus: { table: 'abp_kat_zustimmungsstatus', column: 'strid', $type: null as unknown as AbpKatZustimmungsstatus },
    fkstrid: { table: 'abp_t_abp', column: 'strid', $type: null as unknown as AbpTAbp },
  },
  $type: null as unknown as AbpTAbpZstatus,
  $input: null as unknown as AbpTAbpZstatusInput
} as const;

// Table abw_kat_abwesenheitsart
export interface AbwKatAbwesenheitsart {
  str_schriftfarbe: string | null;
  str_kuerzel: string | null;
  b_begruendungpflicht: boolean | null;
  dtedit: string | null;
  str_abwesenheitsart: string | null;
  txt_hinweistext: string | null;
  b_stundenweisebuchung: boolean | null;
  luserid: number | null;
  txt_artderbeschaeftigung: string | null;
  b_0tageberechnung: boolean | null;
  b_berechnungsrelevant: boolean | null;
  luseridinsert: number | null;
  str_sortierung: string | null;
  dtinsert: string | null;
  strid: string;
  l_fileinformation: number | null;
  str_hintergrundfarbe: string | null;
  b_antragsrelevant: boolean | null;
}
export interface AbwKatAbwesenheitsartInput {
  str_schriftfarbe?: string | null;
  str_kuerzel?: string | null;
  b_begruendungpflicht?: boolean | null;
  dtedit?: string | null;
  str_abwesenheitsart?: string | null;
  txt_hinweistext?: string | null;
  b_stundenweisebuchung?: boolean | null;
  luserid?: number | null;
  txt_artderbeschaeftigung?: string | null;
  b_0tageberechnung?: boolean | null;
  b_berechnungsrelevant?: boolean | null;
  luseridinsert?: number | null;
  str_sortierung?: string | null;
  dtinsert?: string | null;
  strid: string;
  l_fileinformation?: number | null;
  str_hintergrundfarbe?: string | null;
  b_antragsrelevant?: boolean | null;
}
const abw_kat_abwesenheitsart = {
  tableName: 'abw_kat_abwesenheitsart',
  columns: ['str_schriftfarbe', 'str_kuerzel', 'b_begruendungpflicht', 'dtedit', 'str_abwesenheitsart', 'txt_hinweistext', 'b_stundenweisebuchung', 'luserid', 'txt_artderbeschaeftigung', 'b_0tageberechnung', 'b_berechnungsrelevant', 'luseridinsert', 'str_sortierung', 'dtinsert', 'strid', 'l_fileinformation', 'str_hintergrundfarbe', 'b_antragsrelevant'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbwKatAbwesenheitsart,
  $input: null as unknown as AbwKatAbwesenheitsartInput
} as const;

// Table abw_kat_antragsstatus
export interface AbwKatAntragsstatus {
  str_antragsstatus: string | null;
  str_schriftfarbe: string | null;
  l_fileinformation: number | null;
  str_sortierung: string | null;
  dtedit: string | null;
  b_statusstellvertretung: boolean | null;
  luserid: number | null;
  strid: string;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_hintergrundfarbe: string | null;
  str_id: string | null;
  b_statusfachvorgesetzter: boolean | null;
}
export interface AbwKatAntragsstatusInput {
  str_antragsstatus?: string | null;
  str_schriftfarbe?: string | null;
  l_fileinformation?: number | null;
  str_sortierung?: string | null;
  dtedit?: string | null;
  b_statusstellvertretung?: boolean | null;
  luserid?: number | null;
  strid: string;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_hintergrundfarbe?: string | null;
  str_id?: string | null;
  b_statusfachvorgesetzter?: boolean | null;
}
const abw_kat_antragsstatus = {
  tableName: 'abw_kat_antragsstatus',
  columns: ['str_antragsstatus', 'str_schriftfarbe', 'l_fileinformation', 'str_sortierung', 'dtedit', 'b_statusstellvertretung', 'luserid', 'strid', 'luseridinsert', 'dtinsert', 'str_hintergrundfarbe', 'str_id', 'b_statusfachvorgesetzter'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbwKatAntragsstatus,
  $input: null as unknown as AbwKatAntragsstatusInput
} as const;

// Table abw_kat_planungsprozess
export interface AbwKatPlanungsprozess {
  dtedit: string | null;
  luseridinsert: number | null;
  str_id: string | null;
  luserid: number | null;
  l_fileinformation: number | null;
  strid: string;
  dtinsert: string | null;
  str_sortierung: string | null;
  str_planungsprozess: string | null;
}
export interface AbwKatPlanungsprozessInput {
  dtedit?: string | null;
  luseridinsert?: number | null;
  str_id?: string | null;
  luserid?: number | null;
  l_fileinformation?: number | null;
  strid: string;
  dtinsert?: string | null;
  str_sortierung?: string | null;
  str_planungsprozess?: string | null;
}
const abw_kat_planungsprozess = {
  tableName: 'abw_kat_planungsprozess',
  columns: ['dtedit', 'luseridinsert', 'str_id', 'luserid', 'l_fileinformation', 'strid', 'dtinsert', 'str_sortierung', 'str_planungsprozess'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as AbwKatPlanungsprozess,
  $input: null as unknown as AbwKatPlanungsprozessInput
} as const;

// Table abw_t_antrag
export interface AbwTAntrag {
  txt_begruendung: string | null;
  dtinsert: string | null;
  dt_antragsdatum: string | null;
  txt_bemerkungstellvertretung: string | null;
  dt_bis: string | null;
  str_antragstellerin: string | null;
  b_ipv: boolean | null;
  strid: string;
  str_begruendungkeinestellvertr: string | null;
  b_keinefachvorgesetzter: boolean | null;
  ref_fk_benutzer: number | null;
  str_begruendungkeinefachvorges: string | null;
  ref_antragsstatus: string | null;
  ref_bl: string | null;
  ref_stellvertreterin: number | null;
  ref_personal: string | null;
  str_stellvertreterin: string | null;
  dtedit: string | null;
  b_keinestellvertreterin: boolean | null;
  luseridinsert: number | null;
  flt_anzahltage: number | null;
  ref_fk_personal: string | null;
  ref_fachvorgesetzte: number | null;
  str_begruendungstorno: string | null;
  ref_status_sv: string | null;
  ref_status_fv: string | null;
  str_version: string | null;
  b_version: boolean | null;
  ref_abwesenheitsart: string | null;
  l_fileinformation: number | null;
  str_fachvorgesetzter: string | null;
  dt_von: string | null;
  luserid: number | null;
  ref_antragstellerin: number | null;
  txt_bemerkungfachvorgesetzter: string | null;
  l_version: number | null;
  txt_begruendungfuerkorrektur: string | null;
  l_antragstellerin: number | null;
  l_fileinformation_1: number | null;
  l_fileinformation_2: number | null;
  dt_bis2: string | null;
}
export interface AbwTAntragInput {
  txt_begruendung?: string | null;
  dtinsert?: string | null;
  dt_antragsdatum?: string | null;
  txt_bemerkungstellvertretung?: string | null;
  dt_bis?: string | null;
  str_antragstellerin?: string | null;
  b_ipv?: boolean | null;
  strid: string;
  str_begruendungkeinestellvertr?: string | null;
  b_keinefachvorgesetzter?: boolean | null;
  ref_fk_benutzer?: number | null;
  str_begruendungkeinefachvorges?: string | null;
  ref_antragsstatus?: string | null;
  ref_bl?: string | null;
  ref_stellvertreterin?: number | null;
  ref_personal?: string | null;
  str_stellvertreterin?: string | null;
  dtedit?: string | null;
  b_keinestellvertreterin?: boolean | null;
  luseridinsert?: number | null;
  flt_anzahltage?: number | null;
  ref_fk_personal?: string | null;
  ref_fachvorgesetzte?: number | null;
  str_begruendungstorno?: string | null;
  ref_status_sv?: string | null;
  ref_status_fv?: string | null;
  str_version?: string | null;
  b_version?: boolean | null;
  ref_abwesenheitsart?: string | null;
  l_fileinformation?: number | null;
  str_fachvorgesetzter?: string | null;
  dt_von?: string | null;
  luserid?: number | null;
  ref_antragstellerin?: number | null;
  txt_bemerkungfachvorgesetzter?: string | null;
  l_version?: number | null;
  txt_begruendungfuerkorrektur?: string | null;
  l_antragstellerin?: number | null;
  l_fileinformation_1?: number | null;
  l_fileinformation_2?: number | null;
  dt_bis2?: string | null;
}
const abw_t_antrag = {
  tableName: 'abw_t_antrag',
  columns: ['txt_begruendung', 'dtinsert', 'dt_antragsdatum', 'txt_bemerkungstellvertretung', 'dt_bis', 'str_antragstellerin', 'b_ipv', 'strid', 'str_begruendungkeinestellvertr', 'b_keinefachvorgesetzter', 'ref_fk_benutzer', 'str_begruendungkeinefachvorges', 'ref_antragsstatus', 'ref_bl', 'ref_stellvertreterin', 'ref_personal', 'str_stellvertreterin', 'dtedit', 'b_keinestellvertreterin', 'luseridinsert', 'flt_anzahltage', 'ref_fk_personal', 'ref_fachvorgesetzte', 'str_begruendungstorno', 'ref_status_sv', 'ref_status_fv', 'str_version', 'b_version', 'ref_abwesenheitsart', 'l_fileinformation', 'str_fachvorgesetzter', 'dt_von', 'luserid', 'ref_antragstellerin', 'txt_bemerkungfachvorgesetzter', 'l_version', 'txt_begruendungfuerkorrektur', 'l_antragstellerin', 'l_fileinformation_1', 'l_fileinformation_2', 'dt_bis2'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_antragsstatus: { table: 'abw_kat_antragsstatus', column: 'strid', $type: null as unknown as AbwKatAntragsstatus },
    ref_bl: { table: 'per_kat_bueroleitung', column: 'strid', $type: null as unknown as PerKatBueroleitung },
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_fk_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_status_sv: { table: 'abw_kat_antragsstatus', column: 'strid', $type: null as unknown as AbwKatAntragsstatus },
    ref_status_fv: { table: 'abw_kat_antragsstatus', column: 'strid', $type: null as unknown as AbwKatAntragsstatus },
    ref_abwesenheitsart: { table: 'abw_kat_abwesenheitsart', column: 'strid', $type: null as unknown as AbwKatAbwesenheitsart },
  },
  $type: null as unknown as AbwTAntrag,
  $input: null as unknown as AbwTAntragInput
} as const;

// Table abw_t_antrag_abwesenheit
export interface AbwTAntragAbwesenheit {
  luseridinsert: number | null;
  ref_abwesenheitsart: string | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  txt_bemerkung: string | null;
  dt_von: string | null;
  dt_bis: string | null;
  dtinsert: string | null;
  flt_anzahltage: number | null;
  fkstrid: string | null;
}
export interface AbwTAntragAbwesenheitInput {
  luseridinsert?: number | null;
  ref_abwesenheitsart?: string | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  txt_bemerkung?: string | null;
  dt_von?: string | null;
  dt_bis?: string | null;
  dtinsert?: string | null;
  flt_anzahltage?: number | null;
  fkstrid?: string | null;
}
const abw_t_antrag_abwesenheit = {
  tableName: 'abw_t_antrag_abwesenheit',
  columns: ['luseridinsert', 'ref_abwesenheitsart', 'strid', 'luserid', 'dtedit', 'txt_bemerkung', 'dt_von', 'dt_bis', 'dtinsert', 'flt_anzahltage', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_abwesenheitsart: { table: 'abw_kat_abwesenheitsart', column: 'strid', $type: null as unknown as AbwKatAbwesenheitsart },
    fkstrid: { table: 'abw_t_antrag', column: 'strid', $type: null as unknown as AbwTAntrag },
  },
  $type: null as unknown as AbwTAntragAbwesenheit,
  $input: null as unknown as AbwTAntragAbwesenheitInput
} as const;

// Table benv_t_u_apps
export interface BenvTUApps {
  luserid: number | null;
  dtedit: string | null;
  str_guid: string | null;
  dtinsert: string | null;
  str_name: string | null;
  luseridinsert: number | null;
  fklid: number | null;
  strid: string;
}
export interface BenvTUAppsInput {
  luserid?: number | null;
  dtedit?: string | null;
  str_guid?: string | null;
  dtinsert?: string | null;
  str_name?: string | null;
  luseridinsert?: number | null;
  fklid?: number | null;
  strid: string;
}
const benv_t_u_apps = {
  tableName: 'benv_t_u_apps',
  columns: ['luserid', 'dtedit', 'str_guid', 'dtinsert', 'str_name', 'luseridinsert', 'fklid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BenvTUApps,
  $input: null as unknown as BenvTUAppsInput
} as const;

// Table benv_t_u_gruppen
export interface BenvTUGruppen {
  l_objectid: number | null;
  dtinsert: string | null;
  str_name: string | null;
  fklid: number | null;
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  l_parentobjectid: number | null;
  luserid: number | null;
}
export interface BenvTUGruppenInput {
  l_objectid?: number | null;
  dtinsert?: string | null;
  str_name?: string | null;
  fklid?: number | null;
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  l_parentobjectid?: number | null;
  luserid?: number | null;
}
const benv_t_u_gruppen = {
  tableName: 'benv_t_u_gruppen',
  columns: ['l_objectid', 'dtinsert', 'str_name', 'fklid', 'strid', 'luseridinsert', 'dtedit', 'l_parentobjectid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BenvTUGruppen,
  $input: null as unknown as BenvTUGruppenInput
} as const;

// Table benv_t_u_zusatzdaten
export interface BenvTUZusatzdaten {
  l_fileinformation: number | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  str_meineinitialen: string | null;
  str_schriftfarbe: string | null;
  fklid: number | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  str_hintergrundfarbe: string | null;
  str_anzeige: string | null;
}
export interface BenvTUZusatzdatenInput {
  l_fileinformation?: number | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  str_meineinitialen?: string | null;
  str_schriftfarbe?: string | null;
  fklid?: number | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  str_hintergrundfarbe?: string | null;
  str_anzeige?: string | null;
}
const benv_t_u_zusatzdaten = {
  tableName: 'benv_t_u_zusatzdaten',
  columns: ['l_fileinformation', 'dtinsert', 'luseridinsert', 'str_meineinitialen', 'str_schriftfarbe', 'fklid', 'strid', 'luserid', 'dtedit', 'str_hintergrundfarbe', 'str_anzeige'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BenvTUZusatzdaten,
  $input: null as unknown as BenvTUZusatzdatenInput
} as const;

// Table bixv_kat_matching
export interface BixvKatMatching {
  str_antragsartbezeichnunginbda: string | null;
  lid: number;
  luseridinsert: number | null;
  str_vorgangstypid: string | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  str_vorgangstypbezeichnung: string | null;
  str_objektidinvis: string | null;
  b_neueakteerstellen: boolean | null;
  txt_geschaeftsgangverfuegung: string | null;
  b_geschaeftsganganlegen: boolean | null;
  str_emailadressefuerbenachrich: string | null;
  str_aktentyp: string | null;
  b_pruefung: boolean | null;
  str_aktenplanschluessel: string | null;
  str_aktentypid: string | null;
  str_bdatransaktionsnr: string | null;
  ref_3356e3b9: string | null;
  ref_41e213d9: string | null;
}
export interface BixvKatMatchingInput {
  str_antragsartbezeichnunginbda?: string | null;
  lid: number;
  luseridinsert?: number | null;
  str_vorgangstypid?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_vorgangstypbezeichnung?: string | null;
  str_objektidinvis?: string | null;
  b_neueakteerstellen?: boolean | null;
  txt_geschaeftsgangverfuegung?: string | null;
  b_geschaeftsganganlegen?: boolean | null;
  str_emailadressefuerbenachrich?: string | null;
  str_aktentyp?: string | null;
  b_pruefung?: boolean | null;
  str_aktenplanschluessel?: string | null;
  str_aktentypid?: string | null;
  str_bdatransaktionsnr?: string | null;
  ref_3356e3b9?: string | null;
  ref_41e213d9?: string | null;
}
const bixv_kat_matching = {
  tableName: 'bixv_kat_matching',
  columns: ['str_antragsartbezeichnunginbda', 'lid', 'luseridinsert', 'str_vorgangstypid', 'luserid', 'dtinsert', 'dtedit', 'str_vorgangstypbezeichnung', 'str_objektidinvis', 'b_neueakteerstellen', 'txt_geschaeftsgangverfuegung', 'b_geschaeftsganganlegen', 'str_emailadressefuerbenachrich', 'str_aktentyp', 'b_pruefung', 'str_aktenplanschluessel', 'str_aktentypid', 'str_bdatransaktionsnr', 'ref_3356e3b9', 'ref_41e213d9'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_3356e3b9: { table: 'bixv_kat_vismetadaten', column: 'strid', $type: null as unknown as BixvKatVismetadaten },
    ref_41e213d9: { table: 'bixv_kat_vismetadaten', column: 'strid', $type: null as unknown as BixvKatVismetadaten },
  },
  $type: null as unknown as BixvKatMatching,
  $input: null as unknown as BixvKatMatchingInput
} as const;

// Table bixv_kat_matching_metadat
export interface BixvKatMatchingMetadat {
  luserid: number | null;
  dtedit: string | null;
  strid: string;
  fklid: number | null;
  ref_2f300655: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_bezeichnungantrag: string | null;
  b_aktenebene: boolean | null;
}
export interface BixvKatMatchingMetadatInput {
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
  fklid?: number | null;
  ref_2f300655?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_bezeichnungantrag?: string | null;
  b_aktenebene?: boolean | null;
}
const bixv_kat_matching_metadat = {
  tableName: 'bixv_kat_matching_metadat',
  columns: ['luserid', 'dtedit', 'strid', 'fklid', 'ref_2f300655', 'luseridinsert', 'dtinsert', 'str_bezeichnungantrag', 'b_aktenebene'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fklid: { table: 'bixv_kat_matching', column: 'lid', $type: null as unknown as BixvKatMatching },
    ref_2f300655: { table: 'bixv_kat_vismetadaten', column: 'strid', $type: null as unknown as BixvKatVismetadaten },
  },
  $type: null as unknown as BixvKatMatchingMetadat,
  $input: null as unknown as BixvKatMatchingMetadatInput
} as const;

// Table bixv_kat_settings
export interface BixvKatSettings {
  str_name: string | null;
  b_aktiv: boolean | null;
  l_fileinformation_1: number | null;
  l_fileinformation: number | null;
  str_visobjekturl: string | null;
  dtinsert: string | null;
  str_konto: string | null;
  strid: string;
  luserid: number | null;
  str_privatekeypassword: string | null;
  str_uri: string | null;
  txt_emailadressenbeifehler: string | null;
  dtedit: string | null;
  str_mandantenidvis: string | null;
  str_vispasswort: string | null;
  l_tageloeschdatum: number | null;
  str_visurl: string | null;
  str_visuser: string | null;
  luseridinsert: number | null;
}
export interface BixvKatSettingsInput {
  str_name?: string | null;
  b_aktiv?: boolean | null;
  l_fileinformation_1?: number | null;
  l_fileinformation?: number | null;
  str_visobjekturl?: string | null;
  dtinsert?: string | null;
  str_konto?: string | null;
  strid: string;
  luserid?: number | null;
  str_privatekeypassword?: string | null;
  str_uri?: string | null;
  txt_emailadressenbeifehler?: string | null;
  dtedit?: string | null;
  str_mandantenidvis?: string | null;
  str_vispasswort?: string | null;
  l_tageloeschdatum?: number | null;
  str_visurl?: string | null;
  str_visuser?: string | null;
  luseridinsert?: number | null;
}
const bixv_kat_settings = {
  tableName: 'bixv_kat_settings',
  columns: ['str_name', 'b_aktiv', 'l_fileinformation_1', 'l_fileinformation', 'str_visobjekturl', 'dtinsert', 'str_konto', 'strid', 'luserid', 'str_privatekeypassword', 'str_uri', 'txt_emailadressenbeifehler', 'dtedit', 'str_mandantenidvis', 'str_vispasswort', 'l_tageloeschdatum', 'str_visurl', 'str_visuser', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvKatSettings,
  $input: null as unknown as BixvKatSettingsInput
} as const;

// Table bixv_kat_status
export interface BixvKatStatus {
  luseridinsert: number | null;
  strid: string;
  dtedit: string | null;
  str_sortierung: string | null;
  str_id: string | null;
  luserid: number | null;
  dtinsert: string | null;
  str_status: string | null;
}
export interface BixvKatStatusInput {
  luseridinsert?: number | null;
  strid: string;
  dtedit?: string | null;
  str_sortierung?: string | null;
  str_id?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  str_status?: string | null;
}
const bixv_kat_status = {
  tableName: 'bixv_kat_status',
  columns: ['luseridinsert', 'strid', 'dtedit', 'str_sortierung', 'str_id', 'luserid', 'dtinsert', 'str_status'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvKatStatus,
  $input: null as unknown as BixvKatStatusInput
} as const;

// Table bixv_kat_vismetadaten
export interface BixvKatVismetadaten {
  str_beschreibung: string | null;
  strid: string;
  dtedit: string | null;
  dtinsert: string | null;
  str_information: string | null;
  str_werttyp: string | null;
  luseridinsert: number | null;
  luserid: number | null;
}
export interface BixvKatVismetadatenInput {
  str_beschreibung?: string | null;
  strid: string;
  dtedit?: string | null;
  dtinsert?: string | null;
  str_information?: string | null;
  str_werttyp?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
}
const bixv_kat_vismetadaten = {
  tableName: 'bixv_kat_vismetadaten',
  columns: ['str_beschreibung', 'strid', 'dtedit', 'dtinsert', 'str_information', 'str_werttyp', 'luseridinsert', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvKatVismetadaten,
  $input: null as unknown as BixvKatVismetadatenInput
} as const;

// Table bixv_t_archiv
export interface BixvTArchiv {
  luseridinsert: number | null;
  txt_vorgang: string | null;
  str_antragsid: string | null;
  luserid: number | null;
  dtedit: string | null;
  txt_response: string | null;
  dtinsert: string | null;
  l_fileinformation: number | null;
  strid: string;
  txt_dokumentenmappe: string | null;
}
export interface BixvTArchivInput {
  luseridinsert?: number | null;
  txt_vorgang?: string | null;
  str_antragsid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  txt_response?: string | null;
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  strid: string;
  txt_dokumentenmappe?: string | null;
}
const bixv_t_archiv = {
  tableName: 'bixv_t_archiv',
  columns: ['luseridinsert', 'txt_vorgang', 'str_antragsid', 'luserid', 'dtedit', 'txt_response', 'dtinsert', 'l_fileinformation', 'strid', 'txt_dokumentenmappe'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvTArchiv,
  $input: null as unknown as BixvTArchivInput
} as const;

// Table bixv_t_archiv2
export interface BixvTArchiv2 {
  str_antragsid: string | null;
  luseridinsert: number | null;
  l_fileinformation: number | null;
  luserid: number | null;
  lid: number;
  dtedit: string | null;
  txt_vorgang: string | null;
  txt_repsonse: string | null;
  dtinsert: string | null;
  txt_dokumentenmappe: string | null;
}
export interface BixvTArchiv2Input {
  str_antragsid?: string | null;
  luseridinsert?: number | null;
  l_fileinformation?: number | null;
  luserid?: number | null;
  lid: number;
  dtedit?: string | null;
  txt_vorgang?: string | null;
  txt_repsonse?: string | null;
  dtinsert?: string | null;
  txt_dokumentenmappe?: string | null;
}
const bixv_t_archiv2 = {
  tableName: 'bixv_t_archiv2',
  columns: ['str_antragsid', 'luseridinsert', 'l_fileinformation', 'luserid', 'lid', 'dtedit', 'txt_vorgang', 'txt_repsonse', 'dtinsert', 'txt_dokumentenmappe'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as BixvTArchiv2,
  $input: null as unknown as BixvTArchiv2Input
} as const;

// Table bixv_t_inbox
export interface BixvTInbox {
  txt_dokumentenmappe: string | null;
  txt_vorgang_backup: string | null;
  dtedit: string | null;
  l_fileinformation: number | null;
  dt_loeschdatum: string | null;
  str_antragsart: string | null;
  str_antragsid: string | null;
  str_akteid: string | null;
  luserid: number | null;
  l_fileinformation_1: number | null;
  str_titel: string | null;
  l_vorgangid: number | null;
  dtinsert: string | null;
  strid: string;
  ref_status: string | null;
  txt_vorgang: string | null;
  luseridinsert: number | null;
  l_fileinformation_2: number | null;
  str_msgid: string | null;
  str_verbindung: string | null;
  str_kurzbezeichnung: string | null;
  b_valid: boolean | null;
  txt_email: string | null;
  ref_matching: number | null;
  b_manuellebearbeitung: boolean | null;
  b_archiv: boolean | null;
  str_version: string | null;
  l_fileinformation_3: number | null;
  txt_export: string | null;
  b_loeschmarkierung: boolean | null;
  l_uebertragungsversuche: number | null;
}
export interface BixvTInboxInput {
  txt_dokumentenmappe?: string | null;
  txt_vorgang_backup?: string | null;
  dtedit?: string | null;
  l_fileinformation?: number | null;
  dt_loeschdatum?: string | null;
  str_antragsart?: string | null;
  str_antragsid?: string | null;
  str_akteid?: string | null;
  luserid?: number | null;
  l_fileinformation_1?: number | null;
  str_titel?: string | null;
  l_vorgangid?: number | null;
  dtinsert?: string | null;
  strid: string;
  ref_status?: string | null;
  txt_vorgang?: string | null;
  luseridinsert?: number | null;
  l_fileinformation_2?: number | null;
  str_msgid?: string | null;
  str_verbindung?: string | null;
  str_kurzbezeichnung?: string | null;
  b_valid?: boolean | null;
  txt_email?: string | null;
  ref_matching?: number | null;
  b_manuellebearbeitung?: boolean | null;
  b_archiv?: boolean | null;
  str_version?: string | null;
  l_fileinformation_3?: number | null;
  txt_export?: string | null;
  b_loeschmarkierung?: boolean | null;
  l_uebertragungsversuche?: number | null;
}
const bixv_t_inbox = {
  tableName: 'bixv_t_inbox',
  columns: ['txt_dokumentenmappe', 'txt_vorgang_backup', 'dtedit', 'l_fileinformation', 'dt_loeschdatum', 'str_antragsart', 'str_antragsid', 'str_akteid', 'luserid', 'l_fileinformation_1', 'str_titel', 'l_vorgangid', 'dtinsert', 'strid', 'ref_status', 'txt_vorgang', 'luseridinsert', 'l_fileinformation_2', 'str_msgid', 'str_verbindung', 'str_kurzbezeichnung', 'b_valid', 'txt_email', 'ref_matching', 'b_manuellebearbeitung', 'b_archiv', 'str_version', 'l_fileinformation_3', 'txt_export', 'b_loeschmarkierung', 'l_uebertragungsversuche'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_status: { table: 'bixv_kat_status', column: 'strid', $type: null as unknown as BixvKatStatus },
    ref_matching: { table: 'bixv_kat_matching', column: 'lid', $type: null as unknown as BixvKatMatching },
  },
  $type: null as unknown as BixvTInbox,
  $input: null as unknown as BixvTInboxInput
} as const;

// Table bixv_t_inbox_md
export interface BixvTInboxMd {
  dtedit: string | null;
  luserid: number | null;
  str_value: string | null;
  l_order: number | null;
  txt_text: string | null;
  strid: string;
  luseridinsert: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  str_field: string | null;
}
export interface BixvTInboxMdInput {
  dtedit?: string | null;
  luserid?: number | null;
  str_value?: string | null;
  l_order?: number | null;
  txt_text?: string | null;
  strid: string;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  str_field?: string | null;
}
const bixv_t_inbox_md = {
  tableName: 'bixv_t_inbox_md',
  columns: ['dtedit', 'luserid', 'str_value', 'l_order', 'txt_text', 'strid', 'luseridinsert', 'fkstrid', 'dtinsert', 'str_field'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as BixvTInboxMd,
  $input: null as unknown as BixvTInboxMdInput
} as const;

// Table bixv_t_journal
export interface BixvTJournal {
  l_anzahlantraege: number | null;
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dtedit: string | null;
}
export interface BixvTJournalInput {
  l_anzahlantraege?: number | null;
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
}
const bixv_t_journal = {
  tableName: 'bixv_t_journal',
  columns: ['l_anzahlantraege', 'strid', 'luserid', 'luseridinsert', 'dtinsert', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvTJournal,
  $input: null as unknown as BixvTJournalInput
} as const;

// Table bixv_t_log
export interface BixvTLog {
  strid: string;
  dtinsert: string | null;
  luserid: number | null;
  txt_response: string | null;
  str_action: string | null;
  str_url: string | null;
  str_antragsart: string | null;
  str_applicationid: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  str_lastmsgreceived: string | null;
  txt_request: string | null;
  str_status: string | null;
  str_prozessguid: string | null;
}
export interface BixvTLogInput {
  strid: string;
  dtinsert?: string | null;
  luserid?: number | null;
  txt_response?: string | null;
  str_action?: string | null;
  str_url?: string | null;
  str_antragsart?: string | null;
  str_applicationid?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  str_lastmsgreceived?: string | null;
  txt_request?: string | null;
  str_status?: string | null;
  str_prozessguid?: string | null;
}
const bixv_t_log = {
  tableName: 'bixv_t_log',
  columns: ['strid', 'dtinsert', 'luserid', 'txt_response', 'str_action', 'str_url', 'str_antragsart', 'str_applicationid', 'dtedit', 'luseridinsert', 'str_lastmsgreceived', 'txt_request', 'str_status', 'str_prozessguid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as BixvTLog,
  $input: null as unknown as BixvTLogInput
} as const;

// Table bixv_t_suchtrefferakten
export interface BixvTSuchtrefferakten {
  dtedit: string | null;
  b_zuordnung: boolean | null;
  str_url: string | null;
  str_titel: string | null;
  strid: string;
  dtinsert: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  str_aktenid: string | null;
}
export interface BixvTSuchtrefferaktenInput {
  dtedit?: string | null;
  b_zuordnung?: boolean | null;
  str_url?: string | null;
  str_titel?: string | null;
  strid: string;
  dtinsert?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  str_aktenid?: string | null;
}
const bixv_t_suchtrefferakten = {
  tableName: 'bixv_t_suchtrefferakten',
  columns: ['dtedit', 'b_zuordnung', 'str_url', 'str_titel', 'strid', 'dtinsert', 'luserid', 'luseridinsert', 'fkstrid', 'str_aktenid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as BixvTSuchtrefferakten,
  $input: null as unknown as BixvTSuchtrefferaktenInput
} as const;

// Table cal_kat_bestuhlung
export interface CalKatBestuhlung {
  strid: string;
  b_standardbestuhlung: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  str_titel: string | null;
  dtinsert: string | null;
  l_fileinformation: number | null;
  luserid: number | null;
}
export interface CalKatBestuhlungInput {
  strid: string;
  b_standardbestuhlung?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  str_titel?: string | null;
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  luserid?: number | null;
}
const cal_kat_bestuhlung = {
  tableName: 'cal_kat_bestuhlung',
  columns: ['strid', 'b_standardbestuhlung', 'luseridinsert', 'dtedit', 'str_titel', 'dtinsert', 'l_fileinformation', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalKatBestuhlung,
  $input: null as unknown as CalKatBestuhlungInput
} as const;

// Table cal_kat_kategorien
export interface CalKatKategorien {
  b_bilder: boolean | null;
  str_reihenfolge: string | null;
  b_standardausstattungkonfiguri: boolean | null;
  dtedit: string | null;
  b_bestuhlung: boolean | null;
  luserid: number | null;
  b_standort: boolean | null;
  l_fileinformation: number | null;
  b_sortierung: boolean | null;
  l_fileinformation_1: number | null;
  txt_zugriffsberechtigung: string | null;
  b_raum: boolean | null;
  b_equipmentausstattung: boolean | null;
  b_genehmigungerforderlich: boolean | null;
  b_zusaetzlichesequipmentkonfig: boolean | null;
  b_reservierbardurchkonfigurier: boolean | null;
  str_kategorie: string | null;
  luseridinsert: number | null;
  b_etage: boolean | null;
  b_inventarnummer: boolean | null;
  dtinsert: string | null;
  str_targetguid: string | null;
  strid: string;
}
export interface CalKatKategorienInput {
  b_bilder?: boolean | null;
  str_reihenfolge?: string | null;
  b_standardausstattungkonfiguri?: boolean | null;
  dtedit?: string | null;
  b_bestuhlung?: boolean | null;
  luserid?: number | null;
  b_standort?: boolean | null;
  l_fileinformation?: number | null;
  b_sortierung?: boolean | null;
  l_fileinformation_1?: number | null;
  txt_zugriffsberechtigung?: string | null;
  b_raum?: boolean | null;
  b_equipmentausstattung?: boolean | null;
  b_genehmigungerforderlich?: boolean | null;
  b_zusaetzlichesequipmentkonfig?: boolean | null;
  b_reservierbardurchkonfigurier?: boolean | null;
  str_kategorie?: string | null;
  luseridinsert?: number | null;
  b_etage?: boolean | null;
  b_inventarnummer?: boolean | null;
  dtinsert?: string | null;
  str_targetguid?: string | null;
  strid: string;
}
const cal_kat_kategorien = {
  tableName: 'cal_kat_kategorien',
  columns: ['b_bilder', 'str_reihenfolge', 'b_standardausstattungkonfiguri', 'dtedit', 'b_bestuhlung', 'luserid', 'b_standort', 'l_fileinformation', 'b_sortierung', 'l_fileinformation_1', 'txt_zugriffsberechtigung', 'b_raum', 'b_equipmentausstattung', 'b_genehmigungerforderlich', 'b_zusaetzlichesequipmentkonfig', 'b_reservierbardurchkonfigurier', 'str_kategorie', 'luseridinsert', 'b_etage', 'b_inventarnummer', 'dtinsert', 'str_targetguid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalKatKategorien,
  $input: null as unknown as CalKatKategorienInput
} as const;

// Table cal_kat_status
export interface CalKatStatus {
  luseridinsert: number | null;
  dtinsert: string | null;
  str_status: string | null;
  str_schriftfarbe: string | null;
  strid: string;
  luserid: number | null;
  str_sortierung: string | null;
  str_hintergrundfarbe: string | null;
  dtedit: string | null;
  str_id: string | null;
  b_imkalenderanzeigen: boolean | null;
}
export interface CalKatStatusInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_status?: string | null;
  str_schriftfarbe?: string | null;
  strid: string;
  luserid?: number | null;
  str_sortierung?: string | null;
  str_hintergrundfarbe?: string | null;
  dtedit?: string | null;
  str_id?: string | null;
  b_imkalenderanzeigen?: boolean | null;
}
const cal_kat_status = {
  tableName: 'cal_kat_status',
  columns: ['luseridinsert', 'dtinsert', 'str_status', 'str_schriftfarbe', 'strid', 'luserid', 'str_sortierung', 'str_hintergrundfarbe', 'dtedit', 'str_id', 'b_imkalenderanzeigen'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalKatStatus,
  $input: null as unknown as CalKatStatusInput
} as const;

// Table cal_kat_veranstaltungsart
export interface CalKatVeranstaltungsart {
  strid: string;
  str_veranstaltungsart: string | null;
  luseridinsert: number | null;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
}
export interface CalKatVeranstaltungsartInput {
  strid: string;
  str_veranstaltungsart?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
}
const cal_kat_veranstaltungsart = {
  tableName: 'cal_kat_veranstaltungsart',
  columns: ['strid', 'str_veranstaltungsart', 'luseridinsert', 'luserid', 'dtedit', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalKatVeranstaltungsart,
  $input: null as unknown as CalKatVeranstaltungsartInput
} as const;

// Table cal_kat_zusatzleistungen
export interface CalKatZusatzleistungen {
  dtinsert: string | null;
  str_zusatzleistung: string | null;
  strid: string;
  dtedit: string | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface CalKatZusatzleistungenInput {
  dtinsert?: string | null;
  str_zusatzleistung?: string | null;
  strid: string;
  dtedit?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const cal_kat_zusatzleistungen = {
  tableName: 'cal_kat_zusatzleistungen',
  columns: ['dtinsert', 'str_zusatzleistung', 'strid', 'dtedit', 'luserid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalKatZusatzleistungen,
  $input: null as unknown as CalKatZusatzleistungenInput
} as const;

// Table cal_set_personal
export interface CalSetPersonal {
  strid: string;
  dtedit: string | null;
  b_email: boolean | null;
  luserid: number | null;
  dtinsert: string | null;
  b_share: boolean | null;
  luseridinsert: number | null;
}
export interface CalSetPersonalInput {
  strid: string;
  dtedit?: string | null;
  b_email?: boolean | null;
  luserid?: number | null;
  dtinsert?: string | null;
  b_share?: boolean | null;
  luseridinsert?: number | null;
}
const cal_set_personal = {
  tableName: 'cal_set_personal',
  columns: ['strid', 'dtedit', 'b_email', 'luserid', 'dtinsert', 'b_share', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalSetPersonal,
  $input: null as unknown as CalSetPersonalInput
} as const;

// Table cal_t_externe_verwalter
export interface CalTExterneVerwalter {
  luseridinsert: number | null;
  dtinsert: string | null;
  strid: string;
  dtedit: string | null;
  str_email: string | null;
  luserid: number | null;
  str_name: string | null;
}
export interface CalTExterneVerwalterInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strid: string;
  dtedit?: string | null;
  str_email?: string | null;
  luserid?: number | null;
  str_name?: string | null;
}
const cal_t_externe_verwalter = {
  tableName: 'cal_t_externe_verwalter',
  columns: ['luseridinsert', 'dtinsert', 'strid', 'dtedit', 'str_email', 'luserid', 'str_name'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as CalTExterneVerwalter,
  $input: null as unknown as CalTExterneVerwalterInput
} as const;

// Table cal_t_ressource_standard
export interface CalTRessourceStandard {
  fkstrid: string | null;
  dtedit: string | null;
  lid: number;
  id: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  ref_equipment: string | null;
  luserid: number | null;
}
export interface CalTRessourceStandardInput {
  fkstrid?: string | null;
  dtedit?: string | null;
  lid: number;
  id?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  ref_equipment?: string | null;
  luserid?: number | null;
}
const cal_t_ressource_standard = {
  tableName: 'cal_t_ressource_standard',
  columns: ['fkstrid', 'dtedit', 'lid', 'id', 'luseridinsert', 'dtinsert', 'ref_equipment', 'luserid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
    ref_equipment: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
  },
  $type: null as unknown as CalTRessourceStandard,
  $input: null as unknown as CalTRessourceStandardInput
} as const;

// Table cal_t_ressourcen
export interface CalTRessourcen {
  luserid: number | null;
  ref_standort: string | null;
  dtedit: string | null;
  str_etage: string | null;
  str_inventarnummer: string | null;
  txt_beschreibung: string | null;
  b_deaktiviert: boolean | null;
  str_kurzbezeichnung: string | null;
  txt_reservierbaresequipment: string | null;
  b_equipmentzugeordnet: boolean | null;
  str_ressource: string | null;
  b_standardausstattung: boolean | null;
  str_standort: string | null;
  txt_externeverwaltung: string | null;
  b_zusaetzlichesequipmentkonfig: boolean | null;
  ref_kategorie: string | null;
  txt_genehmiger: string | null;
  l_fileinformation: number | null;
  luseridinsert: number | null;
  str_kategorie: string | null;
  dtinsert: string | null;
  dt_gueltigbis: string | null;
  strid: string;
  str_sortierung: string | null;
  str_standardfuerraum: string | null;
  b_standardausstattungkonfiguri: boolean | null;
  ref_c8e4b14f: string | null;
  txt_genehmigungsinfo: string | null;
  b_raum: boolean | null;
  dt_gueltigvon: string | null;
  txt_nachricht: string | null;
  b_equipmentausstattung: boolean | null;
  txt_verwalter: string | null;
  b_bestuhlung: boolean | null;
  txt_reservierbardurch: string | null;
}
export interface CalTRessourcenInput {
  luserid?: number | null;
  ref_standort?: string | null;
  dtedit?: string | null;
  str_etage?: string | null;
  str_inventarnummer?: string | null;
  txt_beschreibung?: string | null;
  b_deaktiviert?: boolean | null;
  str_kurzbezeichnung?: string | null;
  txt_reservierbaresequipment?: string | null;
  b_equipmentzugeordnet?: boolean | null;
  str_ressource?: string | null;
  b_standardausstattung?: boolean | null;
  str_standort?: string | null;
  txt_externeverwaltung?: string | null;
  b_zusaetzlichesequipmentkonfig?: boolean | null;
  ref_kategorie?: string | null;
  txt_genehmiger?: string | null;
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  str_kategorie?: string | null;
  dtinsert?: string | null;
  dt_gueltigbis?: string | null;
  strid: string;
  str_sortierung?: string | null;
  str_standardfuerraum?: string | null;
  b_standardausstattungkonfiguri?: boolean | null;
  ref_c8e4b14f?: string | null;
  txt_genehmigungsinfo?: string | null;
  b_raum?: boolean | null;
  dt_gueltigvon?: string | null;
  txt_nachricht?: string | null;
  b_equipmentausstattung?: boolean | null;
  txt_verwalter?: string | null;
  b_bestuhlung?: boolean | null;
  txt_reservierbardurch?: string | null;
}
const cal_t_ressourcen = {
  tableName: 'cal_t_ressourcen',
  columns: ['luserid', 'ref_standort', 'dtedit', 'str_etage', 'str_inventarnummer', 'txt_beschreibung', 'b_deaktiviert', 'str_kurzbezeichnung', 'txt_reservierbaresequipment', 'b_equipmentzugeordnet', 'str_ressource', 'b_standardausstattung', 'str_standort', 'txt_externeverwaltung', 'b_zusaetzlichesequipmentkonfig', 'ref_kategorie', 'txt_genehmiger', 'l_fileinformation', 'luseridinsert', 'str_kategorie', 'dtinsert', 'dt_gueltigbis', 'strid', 'str_sortierung', 'str_standardfuerraum', 'b_standardausstattungkonfiguri', 'ref_c8e4b14f', 'txt_genehmigungsinfo', 'b_raum', 'dt_gueltigvon', 'txt_nachricht', 'b_equipmentausstattung', 'txt_verwalter', 'b_bestuhlung', 'txt_reservierbardurch'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_standort: { table: 'val_kat_standorte', column: 'strid', $type: null as unknown as ValKatStandorte },
    ref_kategorie: { table: 'cal_kat_kategorien', column: 'strid', $type: null as unknown as CalKatKategorien },
    ref_c8e4b14f: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine },
  },
  $type: null as unknown as CalTRessourcen,
  $input: null as unknown as CalTRessourcenInput
} as const;

// Table cal_t_ressourcen_bestuhl
export interface CalTRessourcenBestuhl {
  l_maximaleanzahlsitzplaetze: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  b_standardbestuhlung: boolean | null;
  ref_bestuhlung: string | null;
  fkstrid: string | null;
  l_ruestzeitinminuten: number | null;
  luserid: number | null;
  strid: string;
}
export interface CalTRessourcenBestuhlInput {
  l_maximaleanzahlsitzplaetze?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  b_standardbestuhlung?: boolean | null;
  ref_bestuhlung?: string | null;
  fkstrid?: string | null;
  l_ruestzeitinminuten?: number | null;
  luserid?: number | null;
  strid: string;
}
const cal_t_ressourcen_bestuhl = {
  tableName: 'cal_t_ressourcen_bestuhl',
  columns: ['l_maximaleanzahlsitzplaetze', 'luseridinsert', 'dtinsert', 'dtedit', 'b_standardbestuhlung', 'ref_bestuhlung', 'fkstrid', 'l_ruestzeitinminuten', 'luserid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_bestuhlung: { table: 'cal_kat_bestuhlung', column: 'strid', $type: null as unknown as CalKatBestuhlung },
    fkstrid: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
  },
  $type: null as unknown as CalTRessourcenBestuhl,
  $input: null as unknown as CalTRessourcenBestuhlInput
} as const;

// Table cal_t_ressourcen_equipment
export interface CalTRessourcenEquipment {
  fkstrid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  ref_equipment: string | null;
  lid: number;
  dtedit: string | null;
  dtinsert: string | null;
}
export interface CalTRessourcenEquipmentInput {
  fkstrid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  ref_equipment?: string | null;
  lid: number;
  dtedit?: string | null;
  dtinsert?: string | null;
}
const cal_t_ressourcen_equipment = {
  tableName: 'cal_t_ressourcen_equipment',
  columns: ['fkstrid', 'luserid', 'luseridinsert', 'ref_equipment', 'lid', 'dtedit', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
    ref_equipment: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
  },
  $type: null as unknown as CalTRessourcenEquipment,
  $input: null as unknown as CalTRessourcenEquipmentInput
} as const;

// Table cal_t_termine
export interface CalTTermine {
  l_bestaetigungerfolgtdurch: number | null;
  luseridinsert: number | null;
  dt_bestaetigungerfolgtam: string | null;
  dt_von: string | null;
  ref_veranstaltungsart: string | null;
  luserid: number | null;
  strid: string;
  str_bestuhlung: string | null;
  type: string | null;
  ref_14f5b578: string | null;
  txt_bemerkungen: string | null;
  dt_bis: string | null;
  dtedit: string | null;
  ref_ressource: string | null;
  dtinsert: string | null;
  str_betreff: string | null;
  txt_begruendung: string | null;
  txt_exportlink: string | null;
  ref_c2688517: string | null;
  b_aktuellertermin: boolean | null;
  ref_reservierer: number | null;
}
export interface CalTTermineInput {
  l_bestaetigungerfolgtdurch?: number | null;
  luseridinsert?: number | null;
  dt_bestaetigungerfolgtam?: string | null;
  dt_von?: string | null;
  ref_veranstaltungsart?: string | null;
  luserid?: number | null;
  strid: string;
  str_bestuhlung?: string | null;
  type?: string | null;
  ref_14f5b578?: string | null;
  txt_bemerkungen?: string | null;
  dt_bis?: string | null;
  dtedit?: string | null;
  ref_ressource?: string | null;
  dtinsert?: string | null;
  str_betreff?: string | null;
  txt_begruendung?: string | null;
  txt_exportlink?: string | null;
  ref_c2688517?: string | null;
  b_aktuellertermin?: boolean | null;
  ref_reservierer?: number | null;
}
const cal_t_termine = {
  tableName: 'cal_t_termine',
  columns: ['l_bestaetigungerfolgtdurch', 'luseridinsert', 'dt_bestaetigungerfolgtam', 'dt_von', 'ref_veranstaltungsart', 'luserid', 'strid', 'str_bestuhlung', 'type', 'ref_14f5b578', 'txt_bemerkungen', 'dt_bis', 'dtedit', 'ref_ressource', 'dtinsert', 'str_betreff', 'txt_begruendung', 'txt_exportlink', 'ref_c2688517', 'b_aktuellertermin', 'ref_reservierer'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_veranstaltungsart: { table: 'cal_kat_veranstaltungsart', column: 'strid', $type: null as unknown as CalKatVeranstaltungsart },
    ref_14f5b578: { table: 'cal_kat_status', column: 'strid', $type: null as unknown as CalKatStatus },
    ref_ressource: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
    ref_c2688517: { table: 'xcalrule12', column: 'strid', $type: null as unknown as Xcalrule12 },
  },
  $type: null as unknown as CalTTermine,
  $input: null as unknown as CalTTermineInput
} as const;

// Table cal_t_termine_journal
export interface CalTTermineJournal {
  str_titel: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strid: string;
}
export interface CalTTermineJournalInput {
  str_titel?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strid: string;
}
const cal_t_termine_journal = {
  tableName: 'cal_t_termine_journal',
  columns: ['str_titel', 'fkstrid', 'luserid', 'dtedit', 'luseridinsert', 'dtinsert', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine }, },
  $type: null as unknown as CalTTermineJournal,
  $input: null as unknown as CalTTermineJournalInput
} as const;

// Table cal_t_termine_nachrichten
export interface CalTTermineNachrichten {
  luseridinsert: number | null;
  str_betreff: string | null;
  ref_empfaenger: number | null;
  strid: string;
  dtinsert: string | null;
  txt_nachricht: string | null;
  b_gelesen: boolean | null;
  fkstrid: string | null;
  luserid: number | null;
  b_neu: boolean | null;
  ref_absender: number | null;
  dtedit: string | null;
}
export interface CalTTermineNachrichtenInput {
  luseridinsert?: number | null;
  str_betreff?: string | null;
  ref_empfaenger?: number | null;
  strid: string;
  dtinsert?: string | null;
  txt_nachricht?: string | null;
  b_gelesen?: boolean | null;
  fkstrid?: string | null;
  luserid?: number | null;
  b_neu?: boolean | null;
  ref_absender?: number | null;
  dtedit?: string | null;
}
const cal_t_termine_nachrichten = {
  tableName: 'cal_t_termine_nachrichten',
  columns: ['luseridinsert', 'str_betreff', 'ref_empfaenger', 'strid', 'dtinsert', 'txt_nachricht', 'b_gelesen', 'fkstrid', 'luserid', 'b_neu', 'ref_absender', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine }, },
  $type: null as unknown as CalTTermineNachrichten,
  $input: null as unknown as CalTTermineNachrichtenInput
} as const;

// Table cal_t_termine_reservierer
export interface CalTTermineReservierer {
  dtedit: string | null;
  ref_f9ac76a8: number | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  strid: string;
  luserid: number | null;
}
export interface CalTTermineReserviererInput {
  dtedit?: string | null;
  ref_f9ac76a8?: number | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  strid: string;
  luserid?: number | null;
}
const cal_t_termine_reservierer = {
  tableName: 'cal_t_termine_reservierer',
  columns: ['dtedit', 'ref_f9ac76a8', 'dtinsert', 'luseridinsert', 'fkstrid', 'strid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine }, },
  $type: null as unknown as CalTTermineReservierer,
  $input: null as unknown as CalTTermineReserviererInput
} as const;

// Table chat
export interface Chat {
  b_group: boolean | null;
  strid: string;
  str_user: string | null;
  l_fileinformation_1: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  b_accessrecipient: boolean | null;
  str_title: string | null;
  txt_media: string | null;
  luseridinsert: number | null;
  txt_nachricht: string | null;
  luserid: number | null;
  str_userguid: string | null;
  str_group: string | null;
}
export interface ChatInput {
  b_group?: boolean | null;
  strid: string;
  str_user?: string | null;
  l_fileinformation_1?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  b_accessrecipient?: boolean | null;
  str_title?: string | null;
  txt_media?: string | null;
  luseridinsert?: number | null;
  txt_nachricht?: string | null;
  luserid?: number | null;
  str_userguid?: string | null;
  str_group?: string | null;
}
const chat = {
  tableName: 'chat',
  columns: ['b_group', 'strid', 'str_user', 'l_fileinformation_1', 'dtinsert', 'dtedit', 'b_accessrecipient', 'str_title', 'txt_media', 'luseridinsert', 'txt_nachricht', 'luserid', 'str_userguid', 'str_group'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Chat,
  $input: null as unknown as ChatInput
} as const;

// Table chat_document
export interface ChatDocument {
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  l_document: number | null;
  ref_message_id: string | null;
  dtinsert: string | null;
  luserid: number | null;
  fkstrid: string | null;
}
export interface ChatDocumentInput {
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  l_document?: number | null;
  ref_message_id?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  fkstrid?: string | null;
}
const chat_document = {
  tableName: 'chat_document',
  columns: ['strid', 'luseridinsert', 'dtedit', 'l_document', 'ref_message_id', 'dtinsert', 'luserid', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_message_id: { table: 'chat_message', column: 'strid', $type: null as unknown as ChatMessage },
    fkstrid: { table: 'chat', column: 'strid', $type: null as unknown as Chat },
  },
  $type: null as unknown as ChatDocument,
  $input: null as unknown as ChatDocumentInput
} as const;

// Table chat_message
export interface ChatMessage {
  str_username: string | null;
  b_status: boolean | null;
  luseridinsert: number | null;
  txt_media: string | null;
  luserid: number | null;
  dtedit: string | null;
  fkstrid: string | null;
  strid: string;
  txt_message: string | null;
  l_fileinformation: number | null;
  dtinsert: string | null;
}
export interface ChatMessageInput {
  str_username?: string | null;
  b_status?: boolean | null;
  luseridinsert?: number | null;
  txt_media?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  strid: string;
  txt_message?: string | null;
  l_fileinformation?: number | null;
  dtinsert?: string | null;
}
const chat_message = {
  tableName: 'chat_message',
  columns: ['str_username', 'b_status', 'luseridinsert', 'txt_media', 'luserid', 'dtedit', 'fkstrid', 'strid', 'txt_message', 'l_fileinformation', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'chat', column: 'strid', $type: null as unknown as Chat }, },
  $type: null as unknown as ChatMessage,
  $input: null as unknown as ChatMessageInput
} as const;

// Table chat_recipient
export interface ChatRecipient {
  str_user: string | null;
  luserid: number | null;
  b_archive: boolean | null;
  str_notification: string | null;
  dt_email: string | null;
  b_notification: boolean | null;
  ref_userid: number | null;
  b_hidechatwindow: boolean | null;
  b_added: boolean | null;
  fkstrid: string | null;
  dtinsert: string | null;
  b_email: boolean | null;
  dt_lastactivity: string | null;
  luseridinsert: number | null;
  b_hideparticipants: boolean | null;
  dtedit: string | null;
  b_sendmail: boolean | null;
  b_read: boolean | null;
  strid: string;
}
export interface ChatRecipientInput {
  str_user?: string | null;
  luserid?: number | null;
  b_archive?: boolean | null;
  str_notification?: string | null;
  dt_email?: string | null;
  b_notification?: boolean | null;
  ref_userid?: number | null;
  b_hidechatwindow?: boolean | null;
  b_added?: boolean | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  b_email?: boolean | null;
  dt_lastactivity?: string | null;
  luseridinsert?: number | null;
  b_hideparticipants?: boolean | null;
  dtedit?: string | null;
  b_sendmail?: boolean | null;
  b_read?: boolean | null;
  strid: string;
}
const chat_recipient = {
  tableName: 'chat_recipient',
  columns: ['str_user', 'luserid', 'b_archive', 'str_notification', 'dt_email', 'b_notification', 'ref_userid', 'b_hidechatwindow', 'b_added', 'fkstrid', 'dtinsert', 'b_email', 'dt_lastactivity', 'luseridinsert', 'b_hideparticipants', 'dtedit', 'b_sendmail', 'b_read', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'chat', column: 'strid', $type: null as unknown as Chat }, },
  $type: null as unknown as ChatRecipient,
  $input: null as unknown as ChatRecipientInput
} as const;

// Table chat_reffiles
export interface ChatReffiles {
  dtlastmodify: string | null;
  strfilename: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  strmeta: string | null;
  luserid: number | null;
  lorder: number | null;
  lid: number;
  dtedit: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strurl: string | null;
}
export interface ChatReffilesInput {
  dtlastmodify?: string | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  strmeta?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  lid: number;
  dtedit?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strurl?: string | null;
}
const chat_reffiles = {
  tableName: 'chat_reffiles',
  columns: ['dtlastmodify', 'strfilename', 'strcontenttype', 'fkstrid', 'strmeta', 'luserid', 'lorder', 'lid', 'dtedit', 'dtinsert', 'luseridinsert', 'strurl'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'chat_document', column: 'strid', $type: null as unknown as ChatDocument }, },
  $type: null as unknown as ChatReffiles,
  $input: null as unknown as ChatReffilesInput
} as const;

// Table chat_usersettings
export interface ChatUsersettings {
  l_count_morepager: number | null;
  str_order: string | null;
  b_hidemembers: boolean | null;
  b_showarchived: boolean | null;
  dtinsert: string | null;
  str_status: string | null;
  strid: string;
  str_user: string | null;
  str_colorscheme: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
}
export interface ChatUsersettingsInput {
  l_count_morepager?: number | null;
  str_order?: string | null;
  b_hidemembers?: boolean | null;
  b_showarchived?: boolean | null;
  dtinsert?: string | null;
  str_status?: string | null;
  strid: string;
  str_user?: string | null;
  str_colorscheme?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
}
const chat_usersettings = {
  tableName: 'chat_usersettings',
  columns: ['l_count_morepager', 'str_order', 'b_hidemembers', 'b_showarchived', 'dtinsert', 'str_status', 'strid', 'str_user', 'str_colorscheme', 'luserid', 'luseridinsert', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ChatUsersettings,
  $input: null as unknown as ChatUsersettingsInput
} as const;

// Table dsattribute
export interface Dsattribute {
  strguid: string;
  lclassid: number;
  strname: string;
  strcolumnname: string | null;
  strdatatype: string;
  lsize: number | null;
  bmandatory: boolean;
  bnullable: boolean;
  bsearchable: boolean;
  barray: boolean;
  strarraytablename: string | null;
  btitle: boolean;
  bdescription: boolean;
  bcontrol: boolean;
  lrefclassid: number | null;
  strrefattributeguid: string | null;
  strrefdispattributeguid: string | null;
  bmultivalueref: boolean | null;
  btenantid: boolean | null;
}
export interface DsattributeInput {
  strguid: string;
  lclassid: number;
  strname: string;
  strcolumnname?: string | null;
  strdatatype: string;
  lsize?: number | null;
  bmandatory: boolean;
  bnullable: boolean;
  bsearchable: boolean;
  barray: boolean;
  strarraytablename?: string | null;
  btitle: boolean;
  bdescription: boolean;
  bcontrol: boolean;
  lrefclassid?: number | null;
  strrefattributeguid?: string | null;
  strrefdispattributeguid?: string | null;
  bmultivalueref?: boolean | null;
  btenantid?: boolean | null;
}
const dsattribute = {
  tableName: 'dsattribute',
  columns: ['strguid', 'lclassid', 'strname', 'strcolumnname', 'strdatatype', 'lsize', 'bmandatory', 'bnullable', 'bsearchable', 'barray', 'strarraytablename', 'btitle', 'bdescription', 'bcontrol', 'lrefclassid', 'strrefattributeguid', 'strrefdispattributeguid', 'bmultivalueref', 'btenantid'],
  requiredForInsert: ['strguid', 'lclassid', 'strname', 'strdatatype', 'bmandatory', 'bnullable', 'bsearchable', 'barray', 'btitle', 'bdescription', 'bcontrol'],
  primaryKey: 'strguid',
  foreignKeys: { lclassid: { table: 'dsclass', column: 'lid', $type: null as unknown as Dsclass }, },
  $type: null as unknown as Dsattribute,
  $input: null as unknown as DsattributeInput
} as const;

// Table dsattributetitle
export interface Dsattributetitle {
  strattributeguid: string;
  strlang: string;
  strname: string | null;
}
export interface DsattributetitleInput {
  strattributeguid: string;
  strlang: string;
  strname?: string | null;
}
const dsattributetitle = {
  tableName: 'dsattributetitle',
  columns: ['strattributeguid', 'strlang', 'strname'],
  requiredForInsert: ['strattributeguid', 'strlang'],
  primaryKey: 'strattributeguid',
  foreignKeys: { strattributeguid: { table: 'dsattribute', column: 'strguid', $type: null as unknown as Dsattribute }, },
  $type: null as unknown as Dsattributetitle,
  $input: null as unknown as DsattributetitleInput
} as const;

// Table dsclass
export interface Dsclass {
  lid: number;
  strguid: string;
  strname: string;
  strtablename: string;
  lbaseclassid: number | null;
  lorder: number;
  bmandatory: boolean;
}
export interface DsclassInput {
  lid: number;
  strguid: string;
  strname: string;
  strtablename: string;
  lbaseclassid?: number | null;
  lorder: number;
  bmandatory: boolean;
}
const dsclass = {
  tableName: 'dsclass',
  columns: ['lid', 'strguid', 'strname', 'strtablename', 'lbaseclassid', 'lorder', 'bmandatory'],
  requiredForInsert: ['lid', 'strguid', 'strname', 'strtablename', 'lorder', 'bmandatory'],
  primaryKey: 'lid',
  foreignKeys: { lbaseclassid: { table: 'dsclass', column: 'lid', $type: null as unknown as Dsclass }, },
  $type: null as unknown as Dsclass,
  $input: null as unknown as DsclassInput
} as const;

// Table dsclasstitle
export interface Dsclasstitle {
  lclassid: number;
  strlang: string;
  strname: string | null;
}
export interface DsclasstitleInput {
  lclassid: number;
  strlang: string;
  strname?: string | null;
}
const dsclasstitle = {
  tableName: 'dsclasstitle',
  columns: ['lclassid', 'strlang', 'strname'],
  requiredForInsert: ['lclassid', 'strlang'],
  primaryKey: 'lclassid',
  foreignKeys: { lclassid: { table: 'dsclass', column: 'lid', $type: null as unknown as Dsclass }, },
  $type: null as unknown as Dsclasstitle,
  $input: null as unknown as DsclasstitleInput
} as const;

// Table dscontainer
export interface Dscontainer {
  lid: number;
}
export interface DscontainerInput {
  lid: number;
}
const dscontainer = {
  tableName: 'dscontainer',
  columns: ['lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject }, },
  $type: null as unknown as Dscontainer,
  $input: null as unknown as DscontainerInput
} as const;

// Table dscountry
export interface Dscountry {
  lid: number;
  strfriendlyname: string | null;
}
export interface DscountryInput {
  lid: number;
  strfriendlyname?: string | null;
}
const dscountry = {
  tableName: 'dscountry',
  columns: ['lid', 'strfriendlyname'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer }, },
  $type: null as unknown as Dscountry,
  $input: null as unknown as DscountryInput
} as const;

// Table dsdistlist
export interface Dsdistlist {
  lid: number;
  strmail: string | null;
}
export interface DsdistlistInput {
  lid: number;
  strmail?: string | null;
}
const dsdistlist = {
  tableName: 'dsdistlist',
  columns: ['lid', 'strmail'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dsset', column: 'lid', $type: null as unknown as Dsset }, },
  $type: null as unknown as Dsdistlist,
  $input: null as unknown as DsdistlistInput
} as const;

// Table dsgroup
export interface Dsgroup {
  lid: number;
  strmail: string | null;
  lextprimgrptkn: number | null;
}
export interface DsgroupInput {
  lid: number;
  strmail?: string | null;
  lextprimgrptkn?: number | null;
}
const dsgroup = {
  tableName: 'dsgroup',
  columns: ['lid', 'strmail', 'lextprimgrptkn'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dsset', column: 'lid', $type: null as unknown as Dsset }, },
  $type: null as unknown as Dsgroup,
  $input: null as unknown as DsgroupInput
} as const;

// Table dslocality
export interface Dslocality {
  lid: number;
  strstate: string | null;
  strstreet: string | null;
}
export interface DslocalityInput {
  lid: number;
  strstate?: string | null;
  strstreet?: string | null;
}
const dslocality = {
  tableName: 'dslocality',
  columns: ['lid', 'strstate', 'strstreet'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer }, },
  $type: null as unknown as Dslocality,
  $input: null as unknown as DslocalityInput
} as const;

// Table dsmember
export interface Dsmember {
  lsetid: number;
  lobjectid: number;
  linternalusn: number | null;
  strrplguid: string | null;
}
export interface DsmemberInput {
  lsetid: number;
  lobjectid: number;
  linternalusn?: number | null;
  strrplguid?: string | null;
}
const dsmember = {
  tableName: 'dsmember',
  columns: ['lsetid', 'lobjectid', 'linternalusn', 'strrplguid'],
  requiredForInsert: ['lsetid', 'lobjectid'],
  primaryKey: 'lsetid',
  foreignKeys: {
    lsetid: { table: 'dsset', column: 'lid', $type: null as unknown as Dsset },
    lobjectid: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject },
  },
  $type: null as unknown as Dsmember,
  $input: null as unknown as DsmemberInput
} as const;

// Table dsobject
export interface Dsobject {
  lid: number;
  lcontainerid: number | null;
  strname: string;
  lclassid: number;
  strguid: string;
  lpriority: number;
  bdeletable: boolean;
  bdeleted: boolean;
  bdisabled: boolean;
  linternalusn: number | null;
  strrplguid: string | null;
  strdn: string | null;
  strdescription: string | null;
  strexternalguid: string | null;
}
export interface DsobjectInput {
  lid: number;
  lcontainerid?: number | null;
  strname: string;
  lclassid: number;
  strguid: string;
  lpriority: number;
  bdeletable: boolean;
  bdeleted: boolean;
  bdisabled: boolean;
  linternalusn?: number | null;
  strrplguid?: string | null;
  strdn?: string | null;
  strdescription?: string | null;
  strexternalguid?: string | null;
}
const dsobject = {
  tableName: 'dsobject',
  columns: ['lid', 'lcontainerid', 'strname', 'lclassid', 'strguid', 'lpriority', 'bdeletable', 'bdeleted', 'bdisabled', 'linternalusn', 'strrplguid', 'strdn', 'strdescription', 'strexternalguid'],
  requiredForInsert: ['lid', 'strname', 'lclassid', 'strguid', 'lpriority', 'bdeletable', 'bdeleted', 'bdisabled'],
  primaryKey: 'lid',
  foreignKeys: {
    lcontainerid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer },
    lclassid: { table: 'dsclass', column: 'lid', $type: null as unknown as Dsclass },
  },
  $type: null as unknown as Dsobject,
  $input: null as unknown as DsobjectInput
} as const;

// Table dsorganization
export interface Dsorganization {
  lid: number;
  strstreet: string | null;
  strpostalcode: string | null;
  strcity: string | null;
  strpobox: string | null;
  strstate: string | null;
  strisocountrycode: string | null;
  strcountry: string | null;
}
export interface DsorganizationInput {
  lid: number;
  strstreet?: string | null;
  strpostalcode?: string | null;
  strcity?: string | null;
  strpobox?: string | null;
  strstate?: string | null;
  strisocountrycode?: string | null;
  strcountry?: string | null;
}
const dsorganization = {
  tableName: 'dsorganization',
  columns: ['lid', 'strstreet', 'strpostalcode', 'strcity', 'strpobox', 'strstate', 'strisocountrycode', 'strcountry'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer }, },
  $type: null as unknown as Dsorganization,
  $input: null as unknown as DsorganizationInput
} as const;

// Table dsorgunit
export interface Dsorgunit {
  lid: number;
  strcity: string | null;
  strisocountrycode: string | null;
  strcountry: string | null;
  strpobox: string | null;
  strpostalcode: string | null;
  strstate: string | null;
  strstreet: string | null;
}
export interface DsorgunitInput {
  lid: number;
  strcity?: string | null;
  strisocountrycode?: string | null;
  strcountry?: string | null;
  strpobox?: string | null;
  strpostalcode?: string | null;
  strstate?: string | null;
  strstreet?: string | null;
}
const dsorgunit = {
  tableName: 'dsorgunit',
  columns: ['lid', 'strcity', 'strisocountrycode', 'strcountry', 'strpobox', 'strpostalcode', 'strstate', 'strstreet'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer }, },
  $type: null as unknown as Dsorgunit,
  $input: null as unknown as DsorgunitInput
} as const;

// Table dspasswordhistory
export interface Dspasswordhistory {
  luserid: number;
  tsinsert: string;
  strhash: string;
  strsalt: string | null;
}
export interface DspasswordhistoryInput {
  luserid: number;
  tsinsert: string;
  strhash: string;
  strsalt?: string | null;
}
const dspasswordhistory = {
  tableName: 'dspasswordhistory',
  columns: ['luserid', 'tsinsert', 'strhash', 'strsalt'],
  requiredForInsert: ['luserid', 'tsinsert', 'strhash'],
  primaryKey: 'luserid',
  foreignKeys: { luserid: { table: 'dsuser', column: 'lid', $type: null as unknown as Dsuser }, },
  $type: null as unknown as Dspasswordhistory,
  $input: null as unknown as DspasswordhistoryInput
} as const;

// Table dsrole
export interface Dsrole {
  lid: number;
}
export interface DsroleInput {
  lid: number;
}
const dsrole = {
  tableName: 'dsrole',
  columns: ['lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dsset', column: 'lid', $type: null as unknown as Dsset }, },
  $type: null as unknown as Dsrole,
  $input: null as unknown as DsroleInput
} as const;

// Table dsset
export interface Dsset {
  lid: number;
}
export interface DssetInput {
  lid: number;
}
const dsset = {
  tableName: 'dsset',
  columns: ['lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject }, },
  $type: null as unknown as Dsset,
  $input: null as unknown as DssetInput
} as const;

// Table dsstatus
export interface Dsstatus {
  llastiusn: number;
}
export interface DsstatusInput {
  llastiusn: number;
}
const dsstatus = {
  tableName: 'dsstatus',
  columns: ['llastiusn'],
  requiredForInsert: ['llastiusn'],
  primaryKey: 'llastiusn',
  foreignKeys: {},
  $type: null as unknown as Dsstatus,
  $input: null as unknown as DsstatusInput
} as const;

// Table dstenant
export interface Dstenant {
  lid: number;
  strisocountrycode: string | null;
  strcountry: string | null;
  strpobox: string | null;
  strstate: string | null;
  strstreet: string | null;
  strpostalcode: string | null;
  strcity: string | null;
}
export interface DstenantInput {
  lid: number;
  strisocountrycode?: string | null;
  strcountry?: string | null;
  strpobox?: string | null;
  strstate?: string | null;
  strstreet?: string | null;
  strpostalcode?: string | null;
  strcity?: string | null;
}
const dstenant = {
  tableName: 'dstenant',
  columns: ['lid', 'strisocountrycode', 'strcountry', 'strpobox', 'strstate', 'strstreet', 'strpostalcode', 'strcity'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { lid: { table: 'dscontainer', column: 'lid', $type: null as unknown as Dscontainer }, },
  $type: null as unknown as Dstenant,
  $input: null as unknown as DstenantInput
} as const;

// Table dsuser
export interface Dsuser {
  lid: number;
  strlogin: string;
  strdomain: string | null;
  strloginlwr: string;
  strdomainlwr: string | null;
  strpwdhash: string | null;
  strsalt: string | null;
  dtpwdchanged: string | null;
  bpwdexpires: boolean;
  bmustchangepass: boolean;
  bmustnotchangepass: boolean;
  lloginattempts: number;
  bislockable: boolean;
  llocked: number;
  bshowuser: boolean;
  strfullname: string | null;
  strfirstname: string | null;
  strmiddlename: string | null;
  strlastname: string | null;
  strtitle: string | null;
  stremployeeno: string | null;
  dtenter: string | null;
  lgender: number | null;
  dtbirth: string | null;
  strstreet: string | null;
  strpostalcode: string | null;
  strpobox: string | null;
  strcity: string | null;
  strstate: string | null;
  strisocountrycode: string | null;
  strcountry: string | null;
  strphonebiz: string | null;
  strphonemobilebiz: string | null;
  strphonehome: string | null;
  strphonemobilehome: string | null;
  strphonefax: string | null;
  strphonepager: string | null;
  strmailbiz: string | null;
  strmailhome: string | null;
  strtimezone: string | null;
  lextprimgrpid: number | null;
  strextlogin1: string | null;
  strextpwd1: string | null;
  strextlogin2: string | null;
  strextpwd2: string | null;
  strextlogin3: string | null;
  strextpwd3: string | null;
  strdefaultlayout: string | null;
  strdefaultlayoutmobile: string | null;
  lboss: number | null;
  lproxyperson: number | null;
  strimg_filename: string | null;
  strimg_url: string | null;
  strimg_contenttype: string | null;
  strdefaultlang: string | null;
  strdefaultlocale: string | null;
  dtimg_lastmodified: string | null;
  strimg_meta: string | null;
  strposcode: string | null;
  strcompany: string | null;
  strofficenr: string | null;
  strinfo: string | null;
  kanbanmandant: string | null;
}
export interface DsuserInput {
  lid: number;
  strlogin: string;
  strdomain?: string | null;
  strloginlwr: string;
  strdomainlwr?: string | null;
  strpwdhash?: string | null;
  strsalt?: string | null;
  dtpwdchanged?: string | null;
  bpwdexpires: boolean;
  bmustchangepass: boolean;
  bmustnotchangepass: boolean;
  lloginattempts: number;
  bislockable: boolean;
  llocked: number;
  bshowuser: boolean;
  strfullname?: string | null;
  strfirstname?: string | null;
  strmiddlename?: string | null;
  strlastname?: string | null;
  strtitle?: string | null;
  stremployeeno?: string | null;
  dtenter?: string | null;
  lgender?: number | null;
  dtbirth?: string | null;
  strstreet?: string | null;
  strpostalcode?: string | null;
  strpobox?: string | null;
  strcity?: string | null;
  strstate?: string | null;
  strisocountrycode?: string | null;
  strcountry?: string | null;
  strphonebiz?: string | null;
  strphonemobilebiz?: string | null;
  strphonehome?: string | null;
  strphonemobilehome?: string | null;
  strphonefax?: string | null;
  strphonepager?: string | null;
  strmailbiz?: string | null;
  strmailhome?: string | null;
  strtimezone?: string | null;
  lextprimgrpid?: number | null;
  strextlogin1?: string | null;
  strextpwd1?: string | null;
  strextlogin2?: string | null;
  strextpwd2?: string | null;
  strextlogin3?: string | null;
  strextpwd3?: string | null;
  strdefaultlayout?: string | null;
  strdefaultlayoutmobile?: string | null;
  lboss?: number | null;
  lproxyperson?: number | null;
  strimg_filename?: string | null;
  strimg_url?: string | null;
  strimg_contenttype?: string | null;
  strdefaultlang?: string | null;
  strdefaultlocale?: string | null;
  dtimg_lastmodified?: string | null;
  strimg_meta?: string | null;
  strposcode?: string | null;
  strcompany?: string | null;
  strofficenr?: string | null;
  strinfo?: string | null;
  kanbanmandant?: string | null;
}
const dsuser = {
  tableName: 'dsuser',
  columns: ['lid', 'strlogin', 'strdomain', 'strloginlwr', 'strdomainlwr', 'strpwdhash', 'strsalt', 'dtpwdchanged', 'bpwdexpires', 'bmustchangepass', 'bmustnotchangepass', 'lloginattempts', 'bislockable', 'llocked', 'bshowuser', 'strfullname', 'strfirstname', 'strmiddlename', 'strlastname', 'strtitle', 'stremployeeno', 'dtenter', 'lgender', 'dtbirth', 'strstreet', 'strpostalcode', 'strpobox', 'strcity', 'strstate', 'strisocountrycode', 'strcountry', 'strphonebiz', 'strphonemobilebiz', 'strphonehome', 'strphonemobilehome', 'strphonefax', 'strphonepager', 'strmailbiz', 'strmailhome', 'strtimezone', 'lextprimgrpid', 'strextlogin1', 'strextpwd1', 'strextlogin2', 'strextpwd2', 'strextlogin3', 'strextpwd3', 'strdefaultlayout', 'strdefaultlayoutmobile', 'lboss', 'lproxyperson', 'strimg_filename', 'strimg_url', 'strimg_contenttype', 'strdefaultlang', 'strdefaultlocale', 'dtimg_lastmodified', 'strimg_meta', 'strposcode', 'strcompany', 'strofficenr', 'strinfo', 'kanbanmandant'],
  requiredForInsert: ['lid', 'strlogin', 'strloginlwr', 'bpwdexpires', 'bmustchangepass', 'bmustnotchangepass', 'lloginattempts', 'bislockable', 'llocked', 'bshowuser'],
  primaryKey: 'lid',
  foreignKeys: {
    lid: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject },
    lboss: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject },
    lproxyperson: { table: 'dsuser', column: 'lid', $type: null as unknown as Dsuser },
  },
  $type: null as unknown as Dsuser,
  $input: null as unknown as DsuserInput
} as const;

// Table ft_t_feiertage
export interface FtTFeiertage {
  strid: string;
  dt_datum: string | null;
  luserid: number | null;
  l_jahr: number | null;
  dtedit: string | null;
  str_feiertag: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
}
export interface FtTFeiertageInput {
  strid: string;
  dt_datum?: string | null;
  luserid?: number | null;
  l_jahr?: number | null;
  dtedit?: string | null;
  str_feiertag?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
}
const ft_t_feiertage = {
  tableName: 'ft_t_feiertage',
  columns: ['strid', 'dt_datum', 'luserid', 'l_jahr', 'dtedit', 'str_feiertag', 'luseridinsert', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as FtTFeiertage,
  $input: null as unknown as FtTFeiertageInput
} as const;

// Table ft_t_gedenktage
export interface FtTGedenktage {
  l_jahr: number | null;
  luserid: number | null;
  dtinsert: string | null;
  str_gedenktag: string | null;
  strid: string;
  dtedit: string | null;
  dt_datum: string | null;
  luseridinsert: number | null;
}
export interface FtTGedenktageInput {
  l_jahr?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  str_gedenktag?: string | null;
  strid: string;
  dtedit?: string | null;
  dt_datum?: string | null;
  luseridinsert?: number | null;
}
const ft_t_gedenktage = {
  tableName: 'ft_t_gedenktage',
  columns: ['l_jahr', 'luserid', 'dtinsert', 'str_gedenktag', 'strid', 'dtedit', 'dt_datum', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as FtTGedenktage,
  $input: null as unknown as FtTGedenktageInput
} as const;

// Table h_t_a_hilfetexte
export interface HTAHilfetexte {
  fkstrid: string | null;
  str_titel: string | null;
  txt_hilfe: string | null;
  dtinsert: string | null;
  l_fileinformation: number | null;
  strid: string;
  dtedit: string | null;
  luserid: number | null;
  l_sortierfeld: number | null;
  luseridinsert: number | null;
}
export interface HTAHilfetexteInput {
  fkstrid?: string | null;
  str_titel?: string | null;
  txt_hilfe?: string | null;
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  strid: string;
  dtedit?: string | null;
  luserid?: number | null;
  l_sortierfeld?: number | null;
  luseridinsert?: number | null;
}
const h_t_a_hilfetexte = {
  tableName: 'h_t_a_hilfetexte',
  columns: ['fkstrid', 'str_titel', 'txt_hilfe', 'dtinsert', 'l_fileinformation', 'strid', 'dtedit', 'luserid', 'l_sortierfeld', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'h_t_anwendung', column: 'strid', $type: null as unknown as HTAnwendung }, },
  $type: null as unknown as HTAHilfetexte,
  $input: null as unknown as HTAHilfetexteInput
} as const;

// Table h_t_anwendung
export interface HTAnwendung {
  ref_8443a443: string | null;
  luserid: number | null;
  ref_adb34327: string | null;
  ref_b4684bac: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strid: string;
  dtedit: string | null;
  l_fileinformation: number | null;
}
export interface HTAnwendungInput {
  ref_8443a443?: string | null;
  luserid?: number | null;
  ref_adb34327?: string | null;
  ref_b4684bac?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strid: string;
  dtedit?: string | null;
  l_fileinformation?: number | null;
}
const h_t_anwendung = {
  tableName: 'h_t_anwendung',
  columns: ['ref_8443a443', 'luserid', 'ref_adb34327', 'ref_b4684bac', 'dtinsert', 'luseridinsert', 'strid', 'dtedit', 'l_fileinformation'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as HTAnwendung,
  $input: null as unknown as HTAnwendungInput
} as const;

// Table inv_kat_bereich
export interface InvKatBereich {
  luseridinsert: number | null;
  dtinsert: string | null;
  luserid: number | null;
  dtedit: string | null;
  str_bereich: string | null;
  strid: string;
}
export interface InvKatBereichInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  str_bereich?: string | null;
  strid: string;
}
const inv_kat_bereich = {
  tableName: 'inv_kat_bereich',
  columns: ['luseridinsert', 'dtinsert', 'luserid', 'dtedit', 'str_bereich', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as InvKatBereich,
  $input: null as unknown as InvKatBereichInput
} as const;

// Table inv_kat_kategorie
export interface InvKatKategorie {
  luserid: number | null;
  dtinsert: string | null;
  ref_bereich: string | null;
  luseridinsert: number | null;
  str_kategorie: string | null;
  dtedit: string | null;
  strid: string;
}
export interface InvKatKategorieInput {
  luserid?: number | null;
  dtinsert?: string | null;
  ref_bereich?: string | null;
  luseridinsert?: number | null;
  str_kategorie?: string | null;
  dtedit?: string | null;
  strid: string;
}
const inv_kat_kategorie = {
  tableName: 'inv_kat_kategorie',
  columns: ['luserid', 'dtinsert', 'ref_bereich', 'luseridinsert', 'str_kategorie', 'dtedit', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_bereich: { table: 'inv_kat_bereich', column: 'strid', $type: null as unknown as InvKatBereich }, },
  $type: null as unknown as InvKatKategorie,
  $input: null as unknown as InvKatKategorieInput
} as const;

// Table inv_kat_unterkategorie
export interface InvKatUnterkategorie {
  strid: string;
  dtinsert: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  luserid: number | null;
  str_unterkategorie: string | null;
  dtedit: string | null;
}
export interface InvKatUnterkategorieInput {
  strid: string;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  str_unterkategorie?: string | null;
  dtedit?: string | null;
}
const inv_kat_unterkategorie = {
  tableName: 'inv_kat_unterkategorie',
  columns: ['strid', 'dtinsert', 'luseridinsert', 'fkstrid', 'luserid', 'str_unterkategorie', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'inv_kat_kategorie', column: 'strid', $type: null as unknown as InvKatKategorie }, },
  $type: null as unknown as InvKatUnterkategorie,
  $input: null as unknown as InvKatUnterkategorieInput
} as const;

// Table inv_t_inventar
export interface InvTInventar {
  str_inventurnummer: string | null;
  txt_beschreibung: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  ref_bereich: string | null;
  dtedit: string | null;
  str_bezeichnung: string | null;
  ref_unterkategorie: string | null;
  dtinsert: string | null;
  strid: string;
  ref_kategorie: string | null;
}
export interface InvTInventarInput {
  str_inventurnummer?: string | null;
  txt_beschreibung?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  ref_bereich?: string | null;
  dtedit?: string | null;
  str_bezeichnung?: string | null;
  ref_unterkategorie?: string | null;
  dtinsert?: string | null;
  strid: string;
  ref_kategorie?: string | null;
}
const inv_t_inventar = {
  tableName: 'inv_t_inventar',
  columns: ['str_inventurnummer', 'txt_beschreibung', 'luserid', 'luseridinsert', 'ref_bereich', 'dtedit', 'str_bezeichnung', 'ref_unterkategorie', 'dtinsert', 'strid', 'ref_kategorie'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_bereich: { table: 'inv_kat_bereich', column: 'strid', $type: null as unknown as InvKatBereich },
    ref_unterkategorie: { table: 'inv_kat_unterkategorie', column: 'strid', $type: null as unknown as InvKatUnterkategorie },
    ref_kategorie: { table: 'inv_kat_kategorie', column: 'strid', $type: null as unknown as InvKatKategorie },
  },
  $type: null as unknown as InvTInventar,
  $input: null as unknown as InvTInventarInput
} as const;

// Table is_ad_settings
export interface IsAdSettings {
  b_hide: boolean | null;
  luseridinsert: number | null;
  str_notification: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  fklid: number | null;
  strid: string;
  str_user_guid: string | null;
  ref_ixuser: number | null;
  luserid: number | null;
  b_notification: boolean | null;
}
export interface IsAdSettingsInput {
  b_hide?: boolean | null;
  luseridinsert?: number | null;
  str_notification?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  fklid?: number | null;
  strid: string;
  str_user_guid?: string | null;
  ref_ixuser?: number | null;
  luserid?: number | null;
  b_notification?: boolean | null;
}
const is_ad_settings = {
  tableName: 'is_ad_settings',
  columns: ['b_hide', 'luseridinsert', 'str_notification', 'dtedit', 'dtinsert', 'fklid', 'strid', 'str_user_guid', 'ref_ixuser', 'luserid', 'b_notification'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdSettings,
  $input: null as unknown as IsAdSettingsInput
} as const;

// Table is_advertising
export interface IsAdvertising {
  txt_distributor: string | null;
  dt_to: string | null;
  str_privacylevel: string | null;
  dtedit: string | null;
  txt_departments: string | null;
  str_title: string | null;
  b_active: boolean | null;
  luserid: number | null;
  b_distributor: boolean | null;
  l_image: number | null;
  dtinsert: string | null;
  str_category: string | null;
  txt_description: string | null;
  b_share: boolean | null;
  str_random_guid: string | null;
  luseridinsert: number | null;
  str_knowledge: string | null;
  l_fileinformation: number | null;
  l_count_clicks: number | null;
  lid: number;
  ref_profile_id: string | null;
  dt_from: string | null;
}
export interface IsAdvertisingInput {
  txt_distributor?: string | null;
  dt_to?: string | null;
  str_privacylevel?: string | null;
  dtedit?: string | null;
  txt_departments?: string | null;
  str_title?: string | null;
  b_active?: boolean | null;
  luserid?: number | null;
  b_distributor?: boolean | null;
  l_image?: number | null;
  dtinsert?: string | null;
  str_category?: string | null;
  txt_description?: string | null;
  b_share?: boolean | null;
  str_random_guid?: string | null;
  luseridinsert?: number | null;
  str_knowledge?: string | null;
  l_fileinformation?: number | null;
  l_count_clicks?: number | null;
  lid: number;
  ref_profile_id?: string | null;
  dt_from?: string | null;
}
const is_advertising = {
  tableName: 'is_advertising',
  columns: ['txt_distributor', 'dt_to', 'str_privacylevel', 'dtedit', 'txt_departments', 'str_title', 'b_active', 'luserid', 'b_distributor', 'l_image', 'dtinsert', 'str_category', 'txt_description', 'b_share', 'str_random_guid', 'luseridinsert', 'str_knowledge', 'l_fileinformation', 'l_count_clicks', 'lid', 'ref_profile_id', 'dt_from'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsAdvertising,
  $input: null as unknown as IsAdvertisingInput
} as const;

// Table is_advertising_department
export interface IsAdvertisingDepartment {
  lid: number;
  dtinsert: string | null;
  dtedit: string | null;
  str_department: string | null;
  fklid: number | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface IsAdvertisingDepartmentInput {
  lid: number;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_department?: string | null;
  fklid?: number | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const is_advertising_department = {
  tableName: 'is_advertising_department',
  columns: ['lid', 'dtinsert', 'dtedit', 'str_department', 'fklid', 'luserid', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdvertisingDepartment,
  $input: null as unknown as IsAdvertisingDepartmentInput
} as const;

// Table is_advertising_file
export interface IsAdvertisingFile {
  strcontenttype: string | null;
  strmeta: string | null;
  dtlastmodify: string | null;
  lid: number;
  fklid: number | null;
  luserid: number | null;
  strfilename: string | null;
  strurl: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  lorder: number | null;
}
export interface IsAdvertisingFileInput {
  strcontenttype?: string | null;
  strmeta?: string | null;
  dtlastmodify?: string | null;
  lid: number;
  fklid?: number | null;
  luserid?: number | null;
  strfilename?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  lorder?: number | null;
}
const is_advertising_file = {
  tableName: 'is_advertising_file',
  columns: ['strcontenttype', 'strmeta', 'dtlastmodify', 'lid', 'fklid', 'luserid', 'strfilename', 'strurl', 'dtedit', 'luseridinsert', 'dtinsert', 'lorder'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdvertisingFile,
  $input: null as unknown as IsAdvertisingFileInput
} as const;

// Table is_advertising_interest
export interface IsAdvertisingInterest {
  lid: number;
  str_interest: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  luserid: number | null;
  fklid: number | null;
  dtedit: string | null;
}
export interface IsAdvertisingInterestInput {
  lid: number;
  str_interest?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  fklid?: number | null;
  dtedit?: string | null;
}
const is_advertising_interest = {
  tableName: 'is_advertising_interest',
  columns: ['lid', 'str_interest', 'dtinsert', 'luseridinsert', 'luserid', 'fklid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdvertisingInterest,
  $input: null as unknown as IsAdvertisingInterestInput
} as const;

// Table is_advertising_language
export interface IsAdvertisingLanguage {
  luserid: number | null;
  dtedit: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_language: string | null;
  fklid: number | null;
  lid: number;
}
export interface IsAdvertisingLanguageInput {
  luserid?: number | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_language?: string | null;
  fklid?: number | null;
  lid: number;
}
const is_advertising_language = {
  tableName: 'is_advertising_language',
  columns: ['luserid', 'dtedit', 'luseridinsert', 'dtinsert', 'str_language', 'fklid', 'lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdvertisingLanguage,
  $input: null as unknown as IsAdvertisingLanguageInput
} as const;

// Table is_advertising_skill
export interface IsAdvertisingSkill {
  dtinsert: string | null;
  lid: number;
  fklid: number | null;
  str_skill: string | null;
  luseridinsert: number | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface IsAdvertisingSkillInput {
  dtinsert?: string | null;
  lid: number;
  fklid?: number | null;
  str_skill?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const is_advertising_skill = {
  tableName: 'is_advertising_skill',
  columns: ['dtinsert', 'lid', 'fklid', 'str_skill', 'luseridinsert', 'luserid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as IsAdvertisingSkill,
  $input: null as unknown as IsAdvertisingSkillInput
} as const;

// Table is_categories
export interface IsCategories {
  strid: string;
  luserid: number | null;
  str_sprache: string | null;
  dtinsert: string | null;
  b_deactivated: boolean | null;
  luseridinsert: number | null;
  str_title: string | null;
  dtedit: string | null;
}
export interface IsCategoriesInput {
  strid: string;
  luserid?: number | null;
  str_sprache?: string | null;
  dtinsert?: string | null;
  b_deactivated?: boolean | null;
  luseridinsert?: number | null;
  str_title?: string | null;
  dtedit?: string | null;
}
const is_categories = {
  tableName: 'is_categories',
  columns: ['strid', 'luserid', 'str_sprache', 'dtinsert', 'b_deactivated', 'luseridinsert', 'str_title', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IsCategories,
  $input: null as unknown as IsCategoriesInput
} as const;

// Table is_comment
export interface IsComment {
  ref_profile_id: string | null;
  luseridinsert: number | null;
  l_fileinformation: number | null;
  lid: number;
  dtinsert: string | null;
  l_parent_lid: number | null;
  luserid: number | null;
  dtedit: string | null;
  l_chart: number | null;
  fklid: number | null;
  txt_comment: string | null;
  txt_mediadata: string | null;
}
export interface IsCommentInput {
  ref_profile_id?: string | null;
  luseridinsert?: number | null;
  l_fileinformation?: number | null;
  lid: number;
  dtinsert?: string | null;
  l_parent_lid?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  l_chart?: number | null;
  fklid?: number | null;
  txt_comment?: string | null;
  txt_mediadata?: string | null;
}
const is_comment = {
  tableName: 'is_comment',
  columns: ['ref_profile_id', 'luseridinsert', 'l_fileinformation', 'lid', 'dtinsert', 'l_parent_lid', 'luserid', 'dtedit', 'l_chart', 'fklid', 'txt_comment', 'txt_mediadata'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    fklid: { table: 'is_feed', column: 'lid', $type: null as unknown as IsFeed },
  },
  $type: null as unknown as IsComment,
  $input: null as unknown as IsCommentInput
} as const;

// Table is_comment_file
export interface IsCommentFile {
  strcontenttype: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  strurl: string | null;
  dtedit: string | null;
  strfilename: string | null;
  luserid: number | null;
  dtinsert: string | null;
  lid: number;
  strmeta: string | null;
  fklid: number | null;
  dtlastmodify: string | null;
}
export interface IsCommentFileInput {
  strcontenttype?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  dtedit?: string | null;
  strfilename?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  lid: number;
  strmeta?: string | null;
  fklid?: number | null;
  dtlastmodify?: string | null;
}
const is_comment_file = {
  tableName: 'is_comment_file',
  columns: ['strcontenttype', 'lorder', 'luseridinsert', 'strurl', 'dtedit', 'strfilename', 'luserid', 'dtinsert', 'lid', 'strmeta', 'fklid', 'dtlastmodify'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_comment', column: 'lid', $type: null as unknown as IsComment }, },
  $type: null as unknown as IsCommentFile,
  $input: null as unknown as IsCommentFileInput
} as const;

// Table is_comment_like
export interface IsCommentLike {
  lid: number;
  b_liked: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  dtinsert: string | null;
  ref_profile_id: string | null;
  fklid: number | null;
}
export interface IsCommentLikeInput {
  lid: number;
  b_liked?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  ref_profile_id?: string | null;
  fklid?: number | null;
}
const is_comment_like = {
  tableName: 'is_comment_like',
  columns: ['lid', 'b_liked', 'luseridinsert', 'dtedit', 'luserid', 'dtinsert', 'ref_profile_id', 'fklid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    fklid: { table: 'is_comment', column: 'lid', $type: null as unknown as IsComment },
  },
  $type: null as unknown as IsCommentLike,
  $input: null as unknown as IsCommentLikeInput
} as const;

// Table is_contact
export interface IsContact {
  str_random_guid: string | null;
  b_confirmed: boolean | null;
  dtinsert: string | null;
  dtedit: string | null;
  ref_contact_b_profile_id: string | null;
  str_request: string | null;
  ref_contact_a_profile_id: string | null;
  lid: number;
  luseridinsert: number | null;
  luserid: number | null;
}
export interface IsContactInput {
  str_random_guid?: string | null;
  b_confirmed?: boolean | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  ref_contact_b_profile_id?: string | null;
  str_request?: string | null;
  ref_contact_a_profile_id?: string | null;
  lid: number;
  luseridinsert?: number | null;
  luserid?: number | null;
}
const is_contact = {
  tableName: 'is_contact',
  columns: ['str_random_guid', 'b_confirmed', 'dtinsert', 'dtedit', 'ref_contact_b_profile_id', 'str_request', 'ref_contact_a_profile_id', 'lid', 'luseridinsert', 'luserid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_contact_b_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_contact_a_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsContact,
  $input: null as unknown as IsContactInput
} as const;

// Table is_event
export interface IsEvent {
  txt_more_infos: string | null;
  dt_deletion: string | null;
  dtinsert: string | null;
  b_create_feed: boolean | null;
  b_deleted: boolean | null;
  b_important: boolean | null;
  dt_to: string | null;
  l_duration_h: number | null;
  str_location: string | null;
  b_urgent: boolean | null;
  str_street: string | null;
  txt_sync: string | null;
  dtedit: string | null;
  txt_deleted: string | null;
  str_title: string | null;
  ref_creator_profile_id: string | null;
  ref_last_change_profile_id: string | null;
  l_duration_min: number | null;
  b_show_guests: boolean | null;
  b_invitations: boolean | null;
  l_image: number | null;
  luserid: number | null;
  str_city: string | null;
  l_chart: number | null;
  str_group_id: string | null;
  strid: string;
  luseridinsert: number | null;
  b_participant_can_create_conn: boolean | null;
  b_fulltime: boolean | null;
  dt_from: string | null;
  dt_last_change: string | null;
  str_status: string | null;
  b_public_event: boolean | null;
}
export interface IsEventInput {
  txt_more_infos?: string | null;
  dt_deletion?: string | null;
  dtinsert?: string | null;
  b_create_feed?: boolean | null;
  b_deleted?: boolean | null;
  b_important?: boolean | null;
  dt_to?: string | null;
  l_duration_h?: number | null;
  str_location?: string | null;
  b_urgent?: boolean | null;
  str_street?: string | null;
  txt_sync?: string | null;
  dtedit?: string | null;
  txt_deleted?: string | null;
  str_title?: string | null;
  ref_creator_profile_id?: string | null;
  ref_last_change_profile_id?: string | null;
  l_duration_min?: number | null;
  b_show_guests?: boolean | null;
  b_invitations?: boolean | null;
  l_image?: number | null;
  luserid?: number | null;
  str_city?: string | null;
  l_chart?: number | null;
  str_group_id?: string | null;
  strid: string;
  luseridinsert?: number | null;
  b_participant_can_create_conn?: boolean | null;
  b_fulltime?: boolean | null;
  dt_from?: string | null;
  dt_last_change?: string | null;
  str_status?: string | null;
  b_public_event?: boolean | null;
}
const is_event = {
  tableName: 'is_event',
  columns: ['txt_more_infos', 'dt_deletion', 'dtinsert', 'b_create_feed', 'b_deleted', 'b_important', 'dt_to', 'l_duration_h', 'str_location', 'b_urgent', 'str_street', 'txt_sync', 'dtedit', 'txt_deleted', 'str_title', 'ref_creator_profile_id', 'ref_last_change_profile_id', 'l_duration_min', 'b_show_guests', 'b_invitations', 'l_image', 'luserid', 'str_city', 'l_chart', 'str_group_id', 'strid', 'luseridinsert', 'b_participant_can_create_conn', 'b_fulltime', 'dt_from', 'dt_last_change', 'str_status', 'b_public_event'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_creator_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_last_change_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsEvent,
  $input: null as unknown as IsEventInput
} as const;

// Table is_event_img
export interface IsEventImg {
  strurl: string | null;
  dtedit: string | null;
  strmeta: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  lid: number;
  luseridinsert: number | null;
  dtlastmodify: string | null;
  luserid: number | null;
  strfilename: string | null;
  lorder: number | null;
  strcontenttype: string | null;
}
export interface IsEventImgInput {
  strurl?: string | null;
  dtedit?: string | null;
  strmeta?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  lid: number;
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  luserid?: number | null;
  strfilename?: string | null;
  lorder?: number | null;
  strcontenttype?: string | null;
}
const is_event_img = {
  tableName: 'is_event_img',
  columns: ['strurl', 'dtedit', 'strmeta', 'fkstrid', 'dtinsert', 'lid', 'luseridinsert', 'dtlastmodify', 'luserid', 'strfilename', 'lorder', 'strcontenttype'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_event', column: 'strid', $type: null as unknown as IsEvent }, },
  $type: null as unknown as IsEventImg,
  $input: null as unknown as IsEventImgInput
} as const;

// Table is_event_participant
export interface IsEventParticipant {
  dtinsert: string | null;
  str_userguid: string | null;
  b_show_feeds_on_news: boolean | null;
  fkstrid: string | null;
  luserid: number | null;
  dt_lastvisit: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  ref_userguid: string | null;
  str_status: string | null;
  lid: number;
}
export interface IsEventParticipantInput {
  dtinsert?: string | null;
  str_userguid?: string | null;
  b_show_feeds_on_news?: boolean | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dt_lastvisit?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  ref_userguid?: string | null;
  str_status?: string | null;
  lid: number;
}
const is_event_participant = {
  tableName: 'is_event_participant',
  columns: ['dtinsert', 'str_userguid', 'b_show_feeds_on_news', 'fkstrid', 'luserid', 'dt_lastvisit', 'luseridinsert', 'dtedit', 'ref_userguid', 'str_status', 'lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'is_event', column: 'strid', $type: null as unknown as IsEvent },
    ref_userguid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsEventParticipant,
  $input: null as unknown as IsEventParticipantInput
} as const;

// Table is_feed
export interface IsFeed {
  luserid: number | null;
  l_conversation_master_id: number | null;
  luseridinsert: number | null;
  dt_last_interaction: string | null;
  txt_empfaenger: string | null;
  dt_archiving: string | null;
  str_object_id: string | null;
  str_class: string | null;
  str_creator_user_guid: string | null;
  dt_maturity: string | null;
  dtinsert: string | null;
  b_suppress: boolean | null;
  b_read_request: boolean | null;
  str_betreff: string | null;
  dt_deletion: string | null;
  b_plugin_deleted: boolean | null;
  l_forwarded_master_id: number | null;
  dt_edit_plugin_record: string | null;
  txt_comment: string | null;
  lid: number;
  dt_feed_position: string | null;
  str_type_of_feed_assignment: string | null;
  str_plugin_guid: string | null;
  l_likes: number | null;
  str_post_status: string | null;
  dtedit: string | null;
  str_plugin_recid: string | null;
  l_genuine_master_id: number | null;
  b_important: boolean | null;
  b_urgent: boolean | null;
  b_deleted: boolean | null;
  l_comments: number | null;
  str_admin_guid: string | null;
  str_privacy_level: string | null;
  l_chart: number | null;
}
export interface IsFeedInput {
  luserid?: number | null;
  l_conversation_master_id?: number | null;
  luseridinsert?: number | null;
  dt_last_interaction?: string | null;
  txt_empfaenger?: string | null;
  dt_archiving?: string | null;
  str_object_id?: string | null;
  str_class?: string | null;
  str_creator_user_guid?: string | null;
  dt_maturity?: string | null;
  dtinsert?: string | null;
  b_suppress?: boolean | null;
  b_read_request?: boolean | null;
  str_betreff?: string | null;
  dt_deletion?: string | null;
  b_plugin_deleted?: boolean | null;
  l_forwarded_master_id?: number | null;
  dt_edit_plugin_record?: string | null;
  txt_comment?: string | null;
  lid: number;
  dt_feed_position?: string | null;
  str_type_of_feed_assignment?: string | null;
  str_plugin_guid?: string | null;
  l_likes?: number | null;
  str_post_status?: string | null;
  dtedit?: string | null;
  str_plugin_recid?: string | null;
  l_genuine_master_id?: number | null;
  b_important?: boolean | null;
  b_urgent?: boolean | null;
  b_deleted?: boolean | null;
  l_comments?: number | null;
  str_admin_guid?: string | null;
  str_privacy_level?: string | null;
  l_chart?: number | null;
}
const is_feed = {
  tableName: 'is_feed',
  columns: ['luserid', 'l_conversation_master_id', 'luseridinsert', 'dt_last_interaction', 'txt_empfaenger', 'dt_archiving', 'str_object_id', 'str_class', 'str_creator_user_guid', 'dt_maturity', 'dtinsert', 'b_suppress', 'b_read_request', 'str_betreff', 'dt_deletion', 'b_plugin_deleted', 'l_forwarded_master_id', 'dt_edit_plugin_record', 'txt_comment', 'lid', 'dt_feed_position', 'str_type_of_feed_assignment', 'str_plugin_guid', 'l_likes', 'str_post_status', 'dtedit', 'str_plugin_recid', 'l_genuine_master_id', 'b_important', 'b_urgent', 'b_deleted', 'l_comments', 'str_admin_guid', 'str_privacy_level', 'l_chart'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as IsFeed,
  $input: null as unknown as IsFeedInput
} as const;

// Table is_feed_recipient
export interface IsFeedRecipient {
  fklid: number | null;
  luseridinsert: number | null;
  str_recipient_user_guid: string | null;
  lid: number;
  dtedit: string | null;
  str_recipient_type: string | null;
  luserid: number | null;
  dtinsert: string | null;
}
export interface IsFeedRecipientInput {
  fklid?: number | null;
  luseridinsert?: number | null;
  str_recipient_user_guid?: string | null;
  lid: number;
  dtedit?: string | null;
  str_recipient_type?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
}
const is_feed_recipient = {
  tableName: 'is_feed_recipient',
  columns: ['fklid', 'luseridinsert', 'str_recipient_user_guid', 'lid', 'dtedit', 'str_recipient_type', 'luserid', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_feed', column: 'lid', $type: null as unknown as IsFeed }, },
  $type: null as unknown as IsFeedRecipient,
  $input: null as unknown as IsFeedRecipientInput
} as const;

// Table is_feed_setting
export interface IsFeedSetting {
  b_blocked_on_news: boolean | null;
  b_read: boolean | null;
  fklid: number | null;
  b_urgent: boolean | null;
  dt_trackback_to: string | null;
  luseridinsert: number | null;
  b_favorite: boolean | null;
  lid: number;
  b_tracking: boolean | null;
  b_give_notice: boolean | null;
  dt_trackback_from: string | null;
  luserid: number | null;
  b_important: boolean | null;
  b_done: boolean | null;
  dtinsert: string | null;
  b_systemmessage: boolean | null;
  ref_profile_id: string | null;
  b_like: boolean | null;
  dtedit: string | null;
  txt_give_notice_reason: string | null;
  b_blocked: boolean | null;
  str_tracking: string | null;
  dt_done: string | null;
}
export interface IsFeedSettingInput {
  b_blocked_on_news?: boolean | null;
  b_read?: boolean | null;
  fklid?: number | null;
  b_urgent?: boolean | null;
  dt_trackback_to?: string | null;
  luseridinsert?: number | null;
  b_favorite?: boolean | null;
  lid: number;
  b_tracking?: boolean | null;
  b_give_notice?: boolean | null;
  dt_trackback_from?: string | null;
  luserid?: number | null;
  b_important?: boolean | null;
  b_done?: boolean | null;
  dtinsert?: string | null;
  b_systemmessage?: boolean | null;
  ref_profile_id?: string | null;
  b_like?: boolean | null;
  dtedit?: string | null;
  txt_give_notice_reason?: string | null;
  b_blocked?: boolean | null;
  str_tracking?: string | null;
  dt_done?: string | null;
}
const is_feed_setting = {
  tableName: 'is_feed_setting',
  columns: ['b_blocked_on_news', 'b_read', 'fklid', 'b_urgent', 'dt_trackback_to', 'luseridinsert', 'b_favorite', 'lid', 'b_tracking', 'b_give_notice', 'dt_trackback_from', 'luserid', 'b_important', 'b_done', 'dtinsert', 'b_systemmessage', 'ref_profile_id', 'b_like', 'dtedit', 'txt_give_notice_reason', 'b_blocked', 'str_tracking', 'dt_done'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fklid: { table: 'is_feed', column: 'lid', $type: null as unknown as IsFeed },
    ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsFeedSetting,
  $input: null as unknown as IsFeedSettingInput
} as const;

// Table is_feedpk
export interface IsFeedpk {
  str_name: string | null;
  str_type: string | null;
  b_value_boolean: boolean | null;
  luseridinsert: number | null;
  dt_value_datetime: string | null;
  l_value_long: number | null;
  l_value_integer: number | null;
  dtedit: string | null;
  fklid: number | null;
  luserid: number | null;
  lid: number;
  dtinsert: string | null;
  str_value_string: string | null;
  flt_value_double: number | null;
}
export interface IsFeedpkInput {
  str_name?: string | null;
  str_type?: string | null;
  b_value_boolean?: boolean | null;
  luseridinsert?: number | null;
  dt_value_datetime?: string | null;
  l_value_long?: number | null;
  l_value_integer?: number | null;
  dtedit?: string | null;
  fklid?: number | null;
  luserid?: number | null;
  lid: number;
  dtinsert?: string | null;
  str_value_string?: string | null;
  flt_value_double?: number | null;
}
const is_feedpk = {
  tableName: 'is_feedpk',
  columns: ['str_name', 'str_type', 'b_value_boolean', 'luseridinsert', 'dt_value_datetime', 'l_value_long', 'l_value_integer', 'dtedit', 'fklid', 'luserid', 'lid', 'dtinsert', 'str_value_string', 'flt_value_double'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_feed', column: 'lid', $type: null as unknown as IsFeed }, },
  $type: null as unknown as IsFeedpk,
  $input: null as unknown as IsFeedpkInput
} as const;

// Table is_file_shelf
export interface IsFileShelf {
  lid: number;
  dtedit: string | null;
  ref_profile_id: string | null;
  luseridinsert: number | null;
  ref_file_shelf_folder_id: number | null;
  luserid: number | null;
  str_title: string | null;
  ref_profile_edt_id: string | null;
  l_files: number | null;
  txt_note: string | null;
  dtinsert: string | null;
}
export interface IsFileShelfInput {
  lid: number;
  dtedit?: string | null;
  ref_profile_id?: string | null;
  luseridinsert?: number | null;
  ref_file_shelf_folder_id?: number | null;
  luserid?: number | null;
  str_title?: string | null;
  ref_profile_edt_id?: string | null;
  l_files?: number | null;
  txt_note?: string | null;
  dtinsert?: string | null;
}
const is_file_shelf = {
  tableName: 'is_file_shelf',
  columns: ['lid', 'dtedit', 'ref_profile_id', 'luseridinsert', 'ref_file_shelf_folder_id', 'luserid', 'str_title', 'ref_profile_edt_id', 'l_files', 'txt_note', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_file_shelf_folder_id: { table: 'is_file_shelf_folder', column: 'lid', $type: null as unknown as IsFileShelfFolder },
    ref_profile_edt_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsFileShelf,
  $input: null as unknown as IsFileShelfInput
} as const;

// Table is_file_shelf_file
export interface IsFileShelfFile {
  luseridinsert: number | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  b_ausgecheckt: boolean | null;
  lid: number;
  strurl: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  dtedit: string | null;
  strfilename: string | null;
  fklid: number | null;
  strmeta: string | null;
}
export interface IsFileShelfFileInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  b_ausgecheckt?: boolean | null;
  lid: number;
  strurl?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  dtedit?: string | null;
  strfilename?: string | null;
  fklid?: number | null;
  strmeta?: string | null;
}
const is_file_shelf_file = {
  tableName: 'is_file_shelf_file',
  columns: ['luseridinsert', 'dtinsert', 'strcontenttype', 'lorder', 'b_ausgecheckt', 'lid', 'strurl', 'luserid', 'dtlastmodify', 'dtedit', 'strfilename', 'fklid', 'strmeta'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_file_shelf', column: 'lid', $type: null as unknown as IsFileShelf }, },
  $type: null as unknown as IsFileShelfFile,
  $input: null as unknown as IsFileShelfFileInput
} as const;

// Table is_file_shelf_folder
export interface IsFileShelfFolder {
  luseridinsert: number | null;
  b_userscanadd: boolean | null;
  ref_profile: string | null;
  b_userscandelete: boolean | null;
  str_group: string | null;
  luserid: number | null;
  dtinsert: string | null;
  l_parent_key: number | null;
  b_userscanedit: boolean | null;
  lid: number;
  dtedit: string | null;
  str_folder_name: string | null;
  l_key: number | null;
  b_users_can_create_connections: boolean | null;
  str_owner_profile: string | null;
  l_sort_order: number | null;
}
export interface IsFileShelfFolderInput {
  luseridinsert?: number | null;
  b_userscanadd?: boolean | null;
  ref_profile?: string | null;
  b_userscandelete?: boolean | null;
  str_group?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  l_parent_key?: number | null;
  b_userscanedit?: boolean | null;
  lid: number;
  dtedit?: string | null;
  str_folder_name?: string | null;
  l_key?: number | null;
  b_users_can_create_connections?: boolean | null;
  str_owner_profile?: string | null;
  l_sort_order?: number | null;
}
const is_file_shelf_folder = {
  tableName: 'is_file_shelf_folder',
  columns: ['luseridinsert', 'b_userscanadd', 'ref_profile', 'b_userscandelete', 'str_group', 'luserid', 'dtinsert', 'l_parent_key', 'b_userscanedit', 'lid', 'dtedit', 'str_folder_name', 'l_key', 'b_users_can_create_connections', 'str_owner_profile', 'l_sort_order'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_profile: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsFileShelfFolder,
  $input: null as unknown as IsFileShelfFolderInput
} as const;

// Table is_file_shelf_folderperm
export interface IsFileShelfFolderperm {
  dtedit: string | null;
  luseridinsert: number | null;
  str_object_type: string | null;
  fklid: number | null;
  dtinsert: string | null;
  luserid: number | null;
  lid: number;
  str_profile_id: string | null;
}
export interface IsFileShelfFolderpermInput {
  dtedit?: string | null;
  luseridinsert?: number | null;
  str_object_type?: string | null;
  fklid?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  lid: number;
  str_profile_id?: string | null;
}
const is_file_shelf_folderperm = {
  tableName: 'is_file_shelf_folderperm',
  columns: ['dtedit', 'luseridinsert', 'str_object_type', 'fklid', 'dtinsert', 'luserid', 'lid', 'str_profile_id'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_file_shelf_folder', column: 'lid', $type: null as unknown as IsFileShelfFolder }, },
  $type: null as unknown as IsFileShelfFolderperm,
  $input: null as unknown as IsFileShelfFolderpermInput
} as const;

// Table is_group
export interface IsGroup {
  l_members: number | null;
  b_generate_feed: boolean | null;
  str_parent_guid: string | null;
  ref_last_change_profile_id: string | null;
  dtinsert: string | null;
  b_deleted: boolean | null;
  luserid: number | null;
  dt_last_change: string | null;
  b_readonly: boolean | null;
  b_members_can_create_connect: boolean | null;
  txt_synchonization: string | null;
  str_title: string | null;
  l_sortierung: number | null;
  b_important: boolean | null;
  b_sync_groups: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  l_chart: number | null;
  ref_moderator_profile_id: string | null;
  b_recommendation_enabled: boolean | null;
  b_urgent: boolean | null;
  l_image: number | null;
  l_post_count: number | null;
  txt_deleted_members: string | null;
  str_status: string | null;
  b_activate_applications: boolean | null;
  txt_description: string | null;
  strid: string;
  dt_deletion: string | null;
  str_privacy_level: string | null;
  ref_inv_mod_profile_id: string | null;
}
export interface IsGroupInput {
  l_members?: number | null;
  b_generate_feed?: boolean | null;
  str_parent_guid?: string | null;
  ref_last_change_profile_id?: string | null;
  dtinsert?: string | null;
  b_deleted?: boolean | null;
  luserid?: number | null;
  dt_last_change?: string | null;
  b_readonly?: boolean | null;
  b_members_can_create_connect?: boolean | null;
  txt_synchonization?: string | null;
  str_title?: string | null;
  l_sortierung?: number | null;
  b_important?: boolean | null;
  b_sync_groups?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  l_chart?: number | null;
  ref_moderator_profile_id?: string | null;
  b_recommendation_enabled?: boolean | null;
  b_urgent?: boolean | null;
  l_image?: number | null;
  l_post_count?: number | null;
  txt_deleted_members?: string | null;
  str_status?: string | null;
  b_activate_applications?: boolean | null;
  txt_description?: string | null;
  strid: string;
  dt_deletion?: string | null;
  str_privacy_level?: string | null;
  ref_inv_mod_profile_id?: string | null;
}
const is_group = {
  tableName: 'is_group',
  columns: ['l_members', 'b_generate_feed', 'str_parent_guid', 'ref_last_change_profile_id', 'dtinsert', 'b_deleted', 'luserid', 'dt_last_change', 'b_readonly', 'b_members_can_create_connect', 'txt_synchonization', 'str_title', 'l_sortierung', 'b_important', 'b_sync_groups', 'luseridinsert', 'dtedit', 'l_chart', 'ref_moderator_profile_id', 'b_recommendation_enabled', 'b_urgent', 'l_image', 'l_post_count', 'txt_deleted_members', 'str_status', 'b_activate_applications', 'txt_description', 'strid', 'dt_deletion', 'str_privacy_level', 'ref_inv_mod_profile_id'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_last_change_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_moderator_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_inv_mod_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsGroup,
  $input: null as unknown as IsGroupInput
} as const;

// Table is_group_bid
export interface IsGroupBid {
  ref_candidate_profile_id: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  dtedit: string | null;
  txt_message: string | null;
  luseridinsert: number | null;
  lid: number;
  luserid: number | null;
}
export interface IsGroupBidInput {
  ref_candidate_profile_id?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  txt_message?: string | null;
  luseridinsert?: number | null;
  lid: number;
  luserid?: number | null;
}
const is_group_bid = {
  tableName: 'is_group_bid',
  columns: ['ref_candidate_profile_id', 'fkstrid', 'dtinsert', 'dtedit', 'txt_message', 'luseridinsert', 'lid', 'luserid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_candidate_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    fkstrid: { table: 'is_group', column: 'strid', $type: null as unknown as IsGroup },
  },
  $type: null as unknown as IsGroupBid,
  $input: null as unknown as IsGroupBidInput
} as const;

// Table is_group_img
export interface IsGroupImg {
  lid: number;
  luseridinsert: number | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  dtedit: string | null;
  strurl: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  dtinsert: string | null;
  lorder: number | null;
  luserid: number | null;
  strfilename: string | null;
}
export interface IsGroupImgInput {
  lid: number;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  strurl?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  strfilename?: string | null;
}
const is_group_img = {
  tableName: 'is_group_img',
  columns: ['lid', 'luseridinsert', 'strcontenttype', 'fkstrid', 'dtedit', 'strurl', 'dtlastmodify', 'strmeta', 'dtinsert', 'lorder', 'luserid', 'strfilename'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_group', column: 'strid', $type: null as unknown as IsGroup }, },
  $type: null as unknown as IsGroupImg,
  $input: null as unknown as IsGroupImgInput
} as const;

// Table is_group_member
export interface IsGroupMember {
  b_favorite: boolean | null;
  lid: number;
  luserid: number | null;
  fkstrid: string | null;
  str_status: string | null;
  luseridinsert: number | null;
  str_userguid: string | null;
  dtedit: string | null;
  b_hide_systemmessages: boolean | null;
  dtinsert: string | null;
  b_show_feeds_on_news: boolean | null;
  ref_userguid: string | null;
  dt_lastvisit: string | null;
}
export interface IsGroupMemberInput {
  b_favorite?: boolean | null;
  lid: number;
  luserid?: number | null;
  fkstrid?: string | null;
  str_status?: string | null;
  luseridinsert?: number | null;
  str_userguid?: string | null;
  dtedit?: string | null;
  b_hide_systemmessages?: boolean | null;
  dtinsert?: string | null;
  b_show_feeds_on_news?: boolean | null;
  ref_userguid?: string | null;
  dt_lastvisit?: string | null;
}
const is_group_member = {
  tableName: 'is_group_member',
  columns: ['b_favorite', 'lid', 'luserid', 'fkstrid', 'str_status', 'luseridinsert', 'str_userguid', 'dtedit', 'b_hide_systemmessages', 'dtinsert', 'b_show_feeds_on_news', 'ref_userguid', 'dt_lastvisit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'is_group', column: 'strid', $type: null as unknown as IsGroup },
    ref_userguid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsGroupMember,
  $input: null as unknown as IsGroupMemberInput
} as const;

// Table is_interest
export interface IsInterest {
  ref_profile_id: string | null;
  luseridinsert: number | null;
  str_type: string | null;
  str_lang: string | null;
  dtedit: string | null;
  l_rating: number | null;
  lid: number;
  dtinsert: string | null;
  luserid: number | null;
  str_title: string | null;
}
export interface IsInterestInput {
  ref_profile_id?: string | null;
  luseridinsert?: number | null;
  str_type?: string | null;
  str_lang?: string | null;
  dtedit?: string | null;
  l_rating?: number | null;
  lid: number;
  dtinsert?: string | null;
  luserid?: number | null;
  str_title?: string | null;
}
const is_interest = {
  tableName: 'is_interest',
  columns: ['ref_profile_id', 'luseridinsert', 'str_type', 'str_lang', 'dtedit', 'l_rating', 'lid', 'dtinsert', 'luserid', 'str_title'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsInterest,
  $input: null as unknown as IsInterestInput
} as const;

// Table is_mailsetting
export interface IsMailsetting {
  dtinsert: string | null;
  b_userdefinable: boolean | null;
  dtedit: string | null;
  str_key: string | null;
  luseridinsert: number | null;
  strid: string;
  luserid: number | null;
  str_value: string | null;
}
export interface IsMailsettingInput {
  dtinsert?: string | null;
  b_userdefinable?: boolean | null;
  dtedit?: string | null;
  str_key?: string | null;
  luseridinsert?: number | null;
  strid: string;
  luserid?: number | null;
  str_value?: string | null;
}
const is_mailsetting = {
  tableName: 'is_mailsetting',
  columns: ['dtinsert', 'b_userdefinable', 'dtedit', 'str_key', 'luseridinsert', 'strid', 'luserid', 'str_value'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IsMailsetting,
  $input: null as unknown as IsMailsettingInput
} as const;

// Table is_message
export interface IsMessage {
  strid: string;
  dtedit: string | null;
  luseridinsert: number | null;
  dt_last_change: string | null;
  str_title: string | null;
  luserid: number | null;
  str_status: string | null;
  ref_creator_profile_id: string | null;
  l_fileinformation: number | null;
  dtinsert: string | null;
  ref_last_change_profile_id: string | null;
}
export interface IsMessageInput {
  strid: string;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dt_last_change?: string | null;
  str_title?: string | null;
  luserid?: number | null;
  str_status?: string | null;
  ref_creator_profile_id?: string | null;
  l_fileinformation?: number | null;
  dtinsert?: string | null;
  ref_last_change_profile_id?: string | null;
}
const is_message = {
  tableName: 'is_message',
  columns: ['strid', 'dtedit', 'luseridinsert', 'dt_last_change', 'str_title', 'luserid', 'str_status', 'ref_creator_profile_id', 'l_fileinformation', 'dtinsert', 'ref_last_change_profile_id'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_creator_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_last_change_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsMessage,
  $input: null as unknown as IsMessageInput
} as const;

// Table is_message_member
export interface IsMessageMember {
  luseridinsert: number | null;
  dtedit: string | null;
  fkstrid: string | null;
  luserid: number | null;
  b_show_feeds_on_news: boolean | null;
  str_recipient: string | null;
  lid: number;
  dtinsert: string | null;
  b_archived: boolean | null;
}
export interface IsMessageMemberInput {
  luseridinsert?: number | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  b_show_feeds_on_news?: boolean | null;
  str_recipient?: string | null;
  lid: number;
  dtinsert?: string | null;
  b_archived?: boolean | null;
}
const is_message_member = {
  tableName: 'is_message_member',
  columns: ['luseridinsert', 'dtedit', 'fkstrid', 'luserid', 'b_show_feeds_on_news', 'str_recipient', 'lid', 'dtinsert', 'b_archived'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_message', column: 'strid', $type: null as unknown as IsMessage }, },
  $type: null as unknown as IsMessageMember,
  $input: null as unknown as IsMessageMemberInput
} as const;

// Table is_modules
export interface IsModules {
  b_mandatory: boolean | null;
  str_css_class: string | null;
  str_page_guid: string | null;
  luseridinsert: number | null;
  strid: string;
  dtedit: string | null;
  str_lang: string | null;
  dtinsert: string | null;
  str_application_guid: string | null;
  b_hide: boolean | null;
  l_order: number | null;
  str_name: string | null;
  luserid: number | null;
  str_key: string | null;
}
export interface IsModulesInput {
  b_mandatory?: boolean | null;
  str_css_class?: string | null;
  str_page_guid?: string | null;
  luseridinsert?: number | null;
  strid: string;
  dtedit?: string | null;
  str_lang?: string | null;
  dtinsert?: string | null;
  str_application_guid?: string | null;
  b_hide?: boolean | null;
  l_order?: number | null;
  str_name?: string | null;
  luserid?: number | null;
  str_key?: string | null;
}
const is_modules = {
  tableName: 'is_modules',
  columns: ['b_mandatory', 'str_css_class', 'str_page_guid', 'luseridinsert', 'strid', 'dtedit', 'str_lang', 'dtinsert', 'str_application_guid', 'b_hide', 'l_order', 'str_name', 'luserid', 'str_key'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IsModules,
  $input: null as unknown as IsModulesInput
} as const;

// Table is_photo
export interface IsPhoto {
  fkstrid: string | null;
  dtinsert: string | null;
  str_title: string | null;
  ref_profile_guid: string | null;
  l_photo: number | null;
  l_order: number | null;
  luserid: number | null;
  txt_subject: string | null;
  lid: number;
  dtedit: string | null;
  luseridinsert: number | null;
}
export interface IsPhotoInput {
  fkstrid?: string | null;
  dtinsert?: string | null;
  str_title?: string | null;
  ref_profile_guid?: string | null;
  l_photo?: number | null;
  l_order?: number | null;
  luserid?: number | null;
  txt_subject?: string | null;
  lid: number;
  dtedit?: string | null;
  luseridinsert?: number | null;
}
const is_photo = {
  tableName: 'is_photo',
  columns: ['fkstrid', 'dtinsert', 'str_title', 'ref_profile_guid', 'l_photo', 'l_order', 'luserid', 'txt_subject', 'lid', 'dtedit', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'is_photoalbum', column: 'strid', $type: null as unknown as IsPhotoalbum },
    ref_profile_guid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsPhoto,
  $input: null as unknown as IsPhotoInput
} as const;

// Table is_photo_file
export interface IsPhotoFile {
  luserid: number | null;
  fklid: number | null;
  dtedit: string | null;
  lorder: number | null;
  lid: number;
  dtlastmodify: string | null;
  strurl: string | null;
  strmeta: string | null;
  strfilename: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strcontenttype: string | null;
}
export interface IsPhotoFileInput {
  luserid?: number | null;
  fklid?: number | null;
  dtedit?: string | null;
  lorder?: number | null;
  lid: number;
  dtlastmodify?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
  strfilename?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
}
const is_photo_file = {
  tableName: 'is_photo_file',
  columns: ['luserid', 'fklid', 'dtedit', 'lorder', 'lid', 'dtlastmodify', 'strurl', 'strmeta', 'strfilename', 'luseridinsert', 'dtinsert', 'strcontenttype'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_photo', column: 'lid', $type: null as unknown as IsPhoto }, },
  $type: null as unknown as IsPhotoFile,
  $input: null as unknown as IsPhotoFileInput
} as const;

// Table is_photoalbum
export interface IsPhotoalbum {
  b_canupload: boolean | null;
  l_preview_image: number | null;
  dtinsert: string | null;
  str_order: string | null;
  str_privacy_level: string | null;
  ref_creator_id: string | null;
  dt_last_change: string | null;
  b_create_feed: boolean | null;
  b_candelete: boolean | null;
  luserid: number | null;
  luseridinsert: number | null;
  strid: string;
  str_random_guid: string | null;
  ref_last_change_profile_id: string | null;
  txt_description: string | null;
  str_title: string | null;
  dtedit: string | null;
}
export interface IsPhotoalbumInput {
  b_canupload?: boolean | null;
  l_preview_image?: number | null;
  dtinsert?: string | null;
  str_order?: string | null;
  str_privacy_level?: string | null;
  ref_creator_id?: string | null;
  dt_last_change?: string | null;
  b_create_feed?: boolean | null;
  b_candelete?: boolean | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  strid: string;
  str_random_guid?: string | null;
  ref_last_change_profile_id?: string | null;
  txt_description?: string | null;
  str_title?: string | null;
  dtedit?: string | null;
}
const is_photoalbum = {
  tableName: 'is_photoalbum',
  columns: ['b_canupload', 'l_preview_image', 'dtinsert', 'str_order', 'str_privacy_level', 'ref_creator_id', 'dt_last_change', 'b_create_feed', 'b_candelete', 'luserid', 'luseridinsert', 'strid', 'str_random_guid', 'ref_last_change_profile_id', 'txt_description', 'str_title', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_creator_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_last_change_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsPhotoalbum,
  $input: null as unknown as IsPhotoalbumInput
} as const;

// Table is_photoalbum_preview_img
export interface IsPhotoalbumPreviewImg {
  dtedit: string | null;
  luserid: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  lorder: number | null;
  lid: number;
  strurl: string | null;
  luseridinsert: number | null;
  strfilename: string | null;
}
export interface IsPhotoalbumPreviewImgInput {
  dtedit?: string | null;
  luserid?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  lorder?: number | null;
  lid: number;
  strurl?: string | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
}
const is_photoalbum_preview_img = {
  tableName: 'is_photoalbum_preview_img',
  columns: ['dtedit', 'luserid', 'fkstrid', 'dtinsert', 'strcontenttype', 'dtlastmodify', 'strmeta', 'lorder', 'lid', 'strurl', 'luseridinsert', 'strfilename'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_photoalbum', column: 'strid', $type: null as unknown as IsPhotoalbum }, },
  $type: null as unknown as IsPhotoalbumPreviewImg,
  $input: null as unknown as IsPhotoalbumPreviewImgInput
} as const;

// Table is_photoalbum_recipient
export interface IsPhotoalbumRecipient {
  dtedit: string | null;
  luserid: number | null;
  str_recipientguid: string | null;
  strid: string;
  luseridinsert: number | null;
  dtinsert: string | null;
  fkstrid: string | null;
}
export interface IsPhotoalbumRecipientInput {
  dtedit?: string | null;
  luserid?: number | null;
  str_recipientguid?: string | null;
  strid: string;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
}
const is_photoalbum_recipient = {
  tableName: 'is_photoalbum_recipient',
  columns: ['dtedit', 'luserid', 'str_recipientguid', 'strid', 'luseridinsert', 'dtinsert', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'is_photoalbum', column: 'strid', $type: null as unknown as IsPhotoalbum }, },
  $type: null as unknown as IsPhotoalbumRecipient,
  $input: null as unknown as IsPhotoalbumRecipientInput
} as const;

// Table is_poke
export interface IsPoke {
  luseridinsert: number | null;
  ref_user_guid: string | null;
  luserid: number | null;
  lid: number;
  str_type: string | null;
  str_text: string | null;
  ref_recipient_user_guid: string | null;
  dtedit: string | null;
  dtinsert: string | null;
}
export interface IsPokeInput {
  luseridinsert?: number | null;
  ref_user_guid?: string | null;
  luserid?: number | null;
  lid: number;
  str_type?: string | null;
  str_text?: string | null;
  ref_recipient_user_guid?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
}
const is_poke = {
  tableName: 'is_poke',
  columns: ['luseridinsert', 'ref_user_guid', 'luserid', 'lid', 'str_type', 'str_text', 'ref_recipient_user_guid', 'dtedit', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_user_guid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_recipient_user_guid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsPoke,
  $input: null as unknown as IsPokeInput
} as const;

// Table is_post
export interface IsPost {
  dtedit: string | null;
  lid: number;
  str_objectid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  txt_userguidsdp: string | null;
  txt_mediadata: string | null;
  str_art: string | null;
  txt_content: string | null;
  txt_message: string | null;
  l_image: number | null;
  l_document: number | null;
  ref_creator_id: string | null;
}
export interface IsPostInput {
  dtedit?: string | null;
  lid: number;
  str_objectid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  txt_userguidsdp?: string | null;
  txt_mediadata?: string | null;
  str_art?: string | null;
  txt_content?: string | null;
  txt_message?: string | null;
  l_image?: number | null;
  l_document?: number | null;
  ref_creator_id?: string | null;
}
const is_post = {
  tableName: 'is_post',
  columns: ['dtedit', 'lid', 'str_objectid', 'luserid', 'luseridinsert', 'dtinsert', 'txt_userguidsdp', 'txt_mediadata', 'str_art', 'txt_content', 'txt_message', 'l_image', 'l_document', 'ref_creator_id'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_creator_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsPost,
  $input: null as unknown as IsPostInput
} as const;

// Table is_post_file
export interface IsPostFile {
  dtinsert: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  luserid: number | null;
  strfilename: string | null;
  dtedit: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  strurl: string | null;
  strcontenttype: string | null;
  fklid: number | null;
  lid: number;
}
export interface IsPostFileInput {
  dtinsert?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  strfilename?: string | null;
  dtedit?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  strurl?: string | null;
  strcontenttype?: string | null;
  fklid?: number | null;
  lid: number;
}
const is_post_file = {
  tableName: 'is_post_file',
  columns: ['dtinsert', 'lorder', 'luseridinsert', 'luserid', 'strfilename', 'dtedit', 'dtlastmodify', 'strmeta', 'strurl', 'strcontenttype', 'fklid', 'lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_post', column: 'lid', $type: null as unknown as IsPost }, },
  $type: null as unknown as IsPostFile,
  $input: null as unknown as IsPostFileInput
} as const;

// Table is_post_img
export interface IsPostImg {
  strmeta: string | null;
  dtlastmodify: string | null;
  dtinsert: string | null;
  dtedit: string | null;
  strurl: string | null;
  strcontenttype: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  lorder: number | null;
  lid: number;
  fklid: number | null;
  strfilename: string | null;
}
export interface IsPostImgInput {
  strmeta?: string | null;
  dtlastmodify?: string | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  strurl?: string | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  lorder?: number | null;
  lid: number;
  fklid?: number | null;
  strfilename?: string | null;
}
const is_post_img = {
  tableName: 'is_post_img',
  columns: ['strmeta', 'dtlastmodify', 'dtinsert', 'dtedit', 'strurl', 'strcontenttype', 'luserid', 'luseridinsert', 'lorder', 'lid', 'fklid', 'strfilename'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_post', column: 'lid', $type: null as unknown as IsPost }, },
  $type: null as unknown as IsPostImg,
  $input: null as unknown as IsPostImgInput
} as const;

// Table is_profile
export interface IsProfile {
  str_department: string | null;
  dtedit: string | null;
  b_deleted: boolean | null;
  dtinsert: string | null;
  l_comments: number | null;
  b_round_icons: boolean | null;
  b_hide_photo: boolean | null;
  b_change_navigation: boolean | null;
  str_order: string | null;
  str_feed_order_pref: string | null;
  str_globalmailsettings: string | null;
  l_events: number | null;
  str_skype: string | null;
  luseridinsert: number | null;
  l_count_visible_comments: number | null;
  str_privacy_level_contacts: string | null;
  txt_career: string | null;
  b_deactivated: boolean | null;
  str_email: string | null;
  b_merge_actions: boolean | null;
  luserid: number | null;
  str_globalpushsettins: string | null;
  str_random_guid: string | null;
  str_phone_private: string | null;
  str_xing: string | null;
  str_location: string | null;
  str_twitter: string | null;
  str_phone_business: string | null;
  str_privacy_level_pi: string | null;
  txt_knowledge: string | null;
  l_groups: number | null;
  str_email_private: string | null;
  str_jobtitle: string | null;
  b_anonymous: boolean | null;
  l_days_remove_msg: number | null;
  str_facebook: string | null;
  b_modultitelausblenden: boolean | null;
  l_posts: number | null;
  ref_64b6afec: number | null;
  str_gender: string | null;
  l_profile_image: number | null;
  l_views: number | null;
  str_handy: string | null;
  strid: string;
  str_homepage: string | null;
  str_privacy_level_personal_fee: string | null;
  str_name: string | null;
  dt_sys_message_marked_as_read: string | null;
  l_likes: number | null;
  str_company: string | null;
  dt_birthday: string | null;
  str_privacy_level_pokes: string | null;
  str_deletion_status: string | null;
  dt_deletion: string | null;
}
export interface IsProfileInput {
  str_department?: string | null;
  dtedit?: string | null;
  b_deleted?: boolean | null;
  dtinsert?: string | null;
  l_comments?: number | null;
  b_round_icons?: boolean | null;
  b_hide_photo?: boolean | null;
  b_change_navigation?: boolean | null;
  str_order?: string | null;
  str_feed_order_pref?: string | null;
  str_globalmailsettings?: string | null;
  l_events?: number | null;
  str_skype?: string | null;
  luseridinsert?: number | null;
  l_count_visible_comments?: number | null;
  str_privacy_level_contacts?: string | null;
  txt_career?: string | null;
  b_deactivated?: boolean | null;
  str_email?: string | null;
  b_merge_actions?: boolean | null;
  luserid?: number | null;
  str_globalpushsettins?: string | null;
  str_random_guid?: string | null;
  str_phone_private?: string | null;
  str_xing?: string | null;
  str_location?: string | null;
  str_twitter?: string | null;
  str_phone_business?: string | null;
  str_privacy_level_pi?: string | null;
  txt_knowledge?: string | null;
  l_groups?: number | null;
  str_email_private?: string | null;
  str_jobtitle?: string | null;
  b_anonymous?: boolean | null;
  l_days_remove_msg?: number | null;
  str_facebook?: string | null;
  b_modultitelausblenden?: boolean | null;
  l_posts?: number | null;
  ref_64b6afec?: number | null;
  str_gender?: string | null;
  l_profile_image?: number | null;
  l_views?: number | null;
  str_handy?: string | null;
  strid: string;
  str_homepage?: string | null;
  str_privacy_level_personal_fee?: string | null;
  str_name?: string | null;
  dt_sys_message_marked_as_read?: string | null;
  l_likes?: number | null;
  str_company?: string | null;
  dt_birthday?: string | null;
  str_privacy_level_pokes?: string | null;
  str_deletion_status?: string | null;
  dt_deletion?: string | null;
}
const is_profile = {
  tableName: 'is_profile',
  columns: ['str_department', 'dtedit', 'b_deleted', 'dtinsert', 'l_comments', 'b_round_icons', 'b_hide_photo', 'b_change_navigation', 'str_order', 'str_feed_order_pref', 'str_globalmailsettings', 'l_events', 'str_skype', 'luseridinsert', 'l_count_visible_comments', 'str_privacy_level_contacts', 'txt_career', 'b_deactivated', 'str_email', 'b_merge_actions', 'luserid', 'str_globalpushsettins', 'str_random_guid', 'str_phone_private', 'str_xing', 'str_location', 'str_twitter', 'str_phone_business', 'str_privacy_level_pi', 'txt_knowledge', 'l_groups', 'str_email_private', 'str_jobtitle', 'b_anonymous', 'l_days_remove_msg', 'str_facebook', 'b_modultitelausblenden', 'l_posts', 'ref_64b6afec', 'str_gender', 'l_profile_image', 'l_views', 'str_handy', 'strid', 'str_homepage', 'str_privacy_level_personal_fee', 'str_name', 'dt_sys_message_marked_as_read', 'l_likes', 'str_company', 'dt_birthday', 'str_privacy_level_pokes', 'str_deletion_status', 'dt_deletion'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IsProfile,
  $input: null as unknown as IsProfileInput
} as const;

// Table is_profile_img
export interface IsProfileImg {
  fkstrid: string | null;
  strurl: string | null;
  strmeta: string | null;
  lid: number;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  lorder: number | null;
  luserid: number | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  strfilename: string | null;
}
export interface IsProfileImgInput {
  fkstrid?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
  lid: number;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  strfilename?: string | null;
}
const is_profile_img = {
  tableName: 'is_profile_img',
  columns: ['fkstrid', 'strurl', 'strmeta', 'lid', 'strcontenttype', 'dtlastmodify', 'lorder', 'luserid', 'dtinsert', 'luseridinsert', 'dtedit', 'strfilename'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsProfileImg,
  $input: null as unknown as IsProfileImgInput
} as const;

// Table is_profile_mailsetting
export interface IsProfileMailsetting {
  fkstrid: string | null;
  dtinsert: string | null;
  strid: string;
  dtedit: string | null;
  str_value: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  str_key: string | null;
}
export interface IsProfileMailsettingInput {
  fkstrid?: string | null;
  dtinsert?: string | null;
  strid: string;
  dtedit?: string | null;
  str_value?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  str_key?: string | null;
}
const is_profile_mailsetting = {
  tableName: 'is_profile_mailsetting',
  columns: ['fkstrid', 'dtinsert', 'strid', 'dtedit', 'str_value', 'luserid', 'luseridinsert', 'str_key'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsProfileMailsetting,
  $input: null as unknown as IsProfileMailsettingInput
} as const;

// Table is_profile_nav
export interface IsProfileNav {
  str_name: string | null;
  l_order: number | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  b_hide: boolean | null;
  fkstrid: string | null;
  b_mandatory: boolean | null;
  ref_nav: string | null;
  luseridinsert: number | null;
  str_lang: string | null;
  strid: string;
}
export interface IsProfileNavInput {
  str_name?: string | null;
  l_order?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  b_hide?: boolean | null;
  fkstrid?: string | null;
  b_mandatory?: boolean | null;
  ref_nav?: string | null;
  luseridinsert?: number | null;
  str_lang?: string | null;
  strid: string;
}
const is_profile_nav = {
  tableName: 'is_profile_nav',
  columns: ['str_name', 'l_order', 'luserid', 'dtinsert', 'dtedit', 'b_hide', 'fkstrid', 'b_mandatory', 'ref_nav', 'luseridinsert', 'str_lang', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_nav: { table: 'is_modules', column: 'strid', $type: null as unknown as IsModules },
  },
  $type: null as unknown as IsProfileNav,
  $input: null as unknown as IsProfileNavInput
} as const;

// Table is_profile_pushsetting
export interface IsProfilePushsetting {
  str_key: string | null;
  strid: string;
  dtinsert: string | null;
  luseridinsert: number | null;
  str_value: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface IsProfilePushsettingInput {
  str_key?: string | null;
  strid: string;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  str_value?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const is_profile_pushsetting = {
  tableName: 'is_profile_pushsetting',
  columns: ['str_key', 'strid', 'dtinsert', 'luseridinsert', 'str_value', 'fkstrid', 'luserid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsProfilePushsetting,
  $input: null as unknown as IsProfilePushsettingInput
} as const;

// Table is_profile_setting
export interface IsProfileSetting {
  luseridinsert: number | null;
  luserid: number | null;
  ref_blocked_user_guid: string | null;
  dtinsert: string | null;
  lid: number;
  fkstrid: string | null;
  dtedit: string | null;
}
export interface IsProfileSettingInput {
  luseridinsert?: number | null;
  luserid?: number | null;
  ref_blocked_user_guid?: string | null;
  dtinsert?: string | null;
  lid: number;
  fkstrid?: string | null;
  dtedit?: string | null;
}
const is_profile_setting = {
  tableName: 'is_profile_setting',
  columns: ['luseridinsert', 'luserid', 'ref_blocked_user_guid', 'dtinsert', 'lid', 'fkstrid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_blocked_user_guid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    fkstrid: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsProfileSetting,
  $input: null as unknown as IsProfileSettingInput
} as const;

// Table is_pushnotificationsetting
export interface IsPushnotificationsetting {
  strid: string;
  str_value: string | null;
  b_userdefinable: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  str_key: string | null;
  dtinsert: string | null;
}
export interface IsPushnotificationsettingInput {
  strid: string;
  str_value?: string | null;
  b_userdefinable?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_key?: string | null;
  dtinsert?: string | null;
}
const is_pushnotificationsetting = {
  tableName: 'is_pushnotificationsetting',
  columns: ['strid', 'str_value', 'b_userdefinable', 'luseridinsert', 'dtedit', 'luserid', 'str_key', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IsPushnotificationsetting,
  $input: null as unknown as IsPushnotificationsettingInput
} as const;

// Table is_systemmessage
export interface IsSystemmessage {
  ref_recipient_id: string | null;
  str_key: string | null;
  str_plugin_guid: string | null;
  txt_subject: string | null;
  lid: number;
  dtedit: string | null;
  dtinsert: string | null;
  b_read: boolean | null;
  luseridinsert: number | null;
  luserid: number | null;
  l_feed_recid: number | null;
  dt_date: string | null;
  str_recid: string | null;
  l_count: number | null;
  ref_creator_id: string | null;
  l_comment_recid: number | null;
  b_hide: boolean | null;
}
export interface IsSystemmessageInput {
  ref_recipient_id?: string | null;
  str_key?: string | null;
  str_plugin_guid?: string | null;
  txt_subject?: string | null;
  lid: number;
  dtedit?: string | null;
  dtinsert?: string | null;
  b_read?: boolean | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  l_feed_recid?: number | null;
  dt_date?: string | null;
  str_recid?: string | null;
  l_count?: number | null;
  ref_creator_id?: string | null;
  l_comment_recid?: number | null;
  b_hide?: boolean | null;
}
const is_systemmessage = {
  tableName: 'is_systemmessage',
  columns: ['ref_recipient_id', 'str_key', 'str_plugin_guid', 'txt_subject', 'lid', 'dtedit', 'dtinsert', 'b_read', 'luseridinsert', 'luserid', 'l_feed_recid', 'dt_date', 'str_recid', 'l_count', 'ref_creator_id', 'l_comment_recid', 'b_hide'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_recipient_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
    ref_creator_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsSystemmessage,
  $input: null as unknown as IsSystemmessageInput
} as const;

// Table is_systemmessage_rcpt
export interface IsSystemmessageRcpt {
  b_read: boolean | null;
  dt_read: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_recipient_guid: string | null;
  lid: number;
  fklid: number | null;
  b_deactivated: boolean | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface IsSystemmessageRcptInput {
  b_read?: boolean | null;
  dt_read?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_recipient_guid?: string | null;
  lid: number;
  fklid?: number | null;
  b_deactivated?: boolean | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const is_systemmessage_rcpt = {
  tableName: 'is_systemmessage_rcpt',
  columns: ['b_read', 'dt_read', 'luseridinsert', 'dtinsert', 'str_recipient_guid', 'lid', 'fklid', 'b_deactivated', 'luserid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_systemmessage', column: 'lid', $type: null as unknown as IsSystemmessage }, },
  $type: null as unknown as IsSystemmessageRcpt,
  $input: null as unknown as IsSystemmessageRcptInput
} as const;

// Table is_systemmessage_reference
export interface IsSystemmessageReference {
  dtinsert: string | null;
  fklid: number | null;
  lid: number;
  str_recid: string | null;
  dt_date: string | null;
  dtedit: string | null;
  luserid: number | null;
  ref_profile_id: string | null;
  luseridinsert: number | null;
}
export interface IsSystemmessageReferenceInput {
  dtinsert?: string | null;
  fklid?: number | null;
  lid: number;
  str_recid?: string | null;
  dt_date?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  ref_profile_id?: string | null;
  luseridinsert?: number | null;
}
const is_systemmessage_reference = {
  tableName: 'is_systemmessage_reference',
  columns: ['dtinsert', 'fklid', 'lid', 'str_recid', 'dt_date', 'dtedit', 'luserid', 'ref_profile_id', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fklid: { table: 'is_systemmessage', column: 'lid', $type: null as unknown as IsSystemmessage },
    ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile },
  },
  $type: null as unknown as IsSystemmessageReference,
  $input: null as unknown as IsSystemmessageReferenceInput
} as const;

// Table is_userplugin
export interface IsUserplugin {
  luseridinsert: number | null;
  dtinsert: string | null;
  str_pluginguid: string | null;
  ref_profile_id: string | null;
  luserid: number | null;
  dtedit: string | null;
  lid: number;
}
export interface IsUserpluginInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_pluginguid?: string | null;
  ref_profile_id?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  lid: number;
}
const is_userplugin = {
  tableName: 'is_userplugin',
  columns: ['luseridinsert', 'dtinsert', 'str_pluginguid', 'ref_profile_id', 'luserid', 'dtedit', 'lid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_profile_id: { table: 'is_profile', column: 'strid', $type: null as unknown as IsProfile }, },
  $type: null as unknown as IsUserplugin,
  $input: null as unknown as IsUserpluginInput
} as const;

// Table ix_basic_datagroup
export interface IxBasicDatagroup {
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  str_title: string | null;
}
export interface IxBasicDatagroupInput {
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_title?: string | null;
}
const ix_basic_datagroup = {
  tableName: 'ix_basic_datagroup',
  columns: ['strid', 'luserid', 'luseridinsert', 'dtinsert', 'dtedit', 'str_title'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IxBasicDatagroup,
  $input: null as unknown as IxBasicDatagroupInput
} as const;

// Table ix_doc_category
export interface IxDocCategory {
  str_title: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strid: string;
  luserid: number | null;
  str_lang: string;
  b_deactivated: boolean | null;
}
export interface IxDocCategoryInput {
  str_title?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strid: string;
  luserid?: number | null;
  str_lang: string;
  b_deactivated?: boolean | null;
}
const ix_doc_category = {
  tableName: 'ix_doc_category',
  columns: ['str_title', 'dtedit', 'dtinsert', 'luseridinsert', 'strid', 'luserid', 'str_lang', 'b_deactivated'],
  requiredForInsert: ['strid', 'str_lang'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IxDocCategory,
  $input: null as unknown as IxDocCategoryInput
} as const;

// Table ix_doc_document
export interface IxDocDocument {
  ref_b4bc67fc: string | null;
  dtedit: string | null;
  b_initialsave: boolean | null;
  b_document: boolean | null;
  str_filesize: string | null;
  txt_remark: string | null;
  luserid: number | null;
  str_filenamepart: string | null;
  str_version: string | null;
  dtinsert: string | null;
  str_docid: string | null;
  l_fileinformation: number | null;
  str_filename: string | null;
  str_title: string | null;
  luseridinsert: number | null;
  l_version: number | null;
  b_initial: boolean | null;
  b_latest: boolean | null;
  str_author: string | null;
  b_example: boolean | null;
  strid: string;
  str_docfileextension: string | null;
}
export interface IxDocDocumentInput {
  ref_b4bc67fc?: string | null;
  dtedit?: string | null;
  b_initialsave?: boolean | null;
  b_document?: boolean | null;
  str_filesize?: string | null;
  txt_remark?: string | null;
  luserid?: number | null;
  str_filenamepart?: string | null;
  str_version?: string | null;
  dtinsert?: string | null;
  str_docid?: string | null;
  l_fileinformation?: number | null;
  str_filename?: string | null;
  str_title?: string | null;
  luseridinsert?: number | null;
  l_version?: number | null;
  b_initial?: boolean | null;
  b_latest?: boolean | null;
  str_author?: string | null;
  b_example?: boolean | null;
  strid: string;
  str_docfileextension?: string | null;
}
const ix_doc_document = {
  tableName: 'ix_doc_document',
  columns: ['ref_b4bc67fc', 'dtedit', 'b_initialsave', 'b_document', 'str_filesize', 'txt_remark', 'luserid', 'str_filenamepart', 'str_version', 'dtinsert', 'str_docid', 'l_fileinformation', 'str_filename', 'str_title', 'luseridinsert', 'l_version', 'b_initial', 'b_latest', 'str_author', 'b_example', 'strid', 'str_docfileextension'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as IxDocDocument,
  $input: null as unknown as IxDocDocumentInput
} as const;

// Table katalog_bezirke
export interface KatalogBezirke {
  dtinsert: string | null;
  luserid: number | null;
  str_bereichskennzahl: string | null;
  str_bezirk: string | null;
  str_bezirksnummer: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  strid: string;
}
export interface KatalogBezirkeInput {
  dtinsert?: string | null;
  luserid?: number | null;
  str_bereichskennzahl?: string | null;
  str_bezirk?: string | null;
  str_bezirksnummer?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  strid: string;
}
const katalog_bezirke = {
  tableName: 'katalog_bezirke',
  columns: ['dtinsert', 'luserid', 'str_bereichskennzahl', 'str_bezirk', 'str_bezirksnummer', 'dtedit', 'luseridinsert', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KatalogBezirke,
  $input: null as unknown as KatalogBezirkeInput
} as const;

// Table katalog_schulen
export interface KatalogSchulen {
  flt_gebaeudewert: number | null;
  str_schultyp: string | null;
  str_telefon: string | null;
  str_schultraeger: string | null;
  strid: string;
  ref_bezirk: string | null;
  str_plz: string | null;
  str_idplanungsregion: string | null;
  str_planungsregion: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_email: string | null;
  str_fax: string | null;
  str_namederschule: string | null;
  txt_bemerkungen: string | null;
  str_bsn: string | null;
  str_adresse: string | null;
  str_import: string | null;
  str_internet: string | null;
  dtedit: string | null;
}
export interface KatalogSchulenInput {
  flt_gebaeudewert?: number | null;
  str_schultyp?: string | null;
  str_telefon?: string | null;
  str_schultraeger?: string | null;
  strid: string;
  ref_bezirk?: string | null;
  str_plz?: string | null;
  str_idplanungsregion?: string | null;
  str_planungsregion?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_email?: string | null;
  str_fax?: string | null;
  str_namederschule?: string | null;
  txt_bemerkungen?: string | null;
  str_bsn?: string | null;
  str_adresse?: string | null;
  str_import?: string | null;
  str_internet?: string | null;
  dtedit?: string | null;
}
const katalog_schulen = {
  tableName: 'katalog_schulen',
  columns: ['flt_gebaeudewert', 'str_schultyp', 'str_telefon', 'str_schultraeger', 'strid', 'ref_bezirk', 'str_plz', 'str_idplanungsregion', 'str_planungsregion', 'luserid', 'luseridinsert', 'dtinsert', 'str_email', 'str_fax', 'str_namederschule', 'txt_bemerkungen', 'str_bsn', 'str_adresse', 'str_import', 'str_internet', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_bezirk: { table: 'katalog_bezirke', column: 'strid', $type: null as unknown as KatalogBezirke }, },
  $type: null as unknown as KatalogSchulen,
  $input: null as unknown as KatalogSchulenInput
} as const;

// Table katalog_standorte
export interface KatalogStandorte {
  dtedit: string | null;
  strid: string;
  dtinsert: string | null;
  str_standort: string | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface KatalogStandorteInput {
  dtedit?: string | null;
  strid: string;
  dtinsert?: string | null;
  str_standort?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const katalog_standorte = {
  tableName: 'katalog_standorte',
  columns: ['dtedit', 'strid', 'dtinsert', 'str_standort', 'luserid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KatalogStandorte,
  $input: null as unknown as KatalogStandorteInput
} as const;

// Table kb_kat_boardstatus
export interface KbKatBoardstatus {
  dtinsert: string | null;
  l_fileinformation: number | null;
  luseridinsert: number | null;
  str_boardstatus: string | null;
  strid: string;
  str_id: string | null;
  str_sortierung: string | null;
  dtedit: string | null;
  luserid: number | null;
}
export interface KbKatBoardstatusInput {
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  str_boardstatus?: string | null;
  strid: string;
  str_id?: string | null;
  str_sortierung?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
}
const kb_kat_boardstatus = {
  tableName: 'kb_kat_boardstatus',
  columns: ['dtinsert', 'l_fileinformation', 'luseridinsert', 'str_boardstatus', 'strid', 'str_id', 'str_sortierung', 'dtedit', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbKatBoardstatus,
  $input: null as unknown as KbKatBoardstatusInput
} as const;

// Table kb_t_b_besitzer
export interface KbTBBesitzer {
  ref_benutzer: number | null;
  dtedit: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtinsert: string | null;
  strid: string;
  luseridinsert: number | null;
}
export interface KbTBBesitzerInput {
  ref_benutzer?: number | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  strid: string;
  luseridinsert?: number | null;
}
const kb_t_b_besitzer = {
  tableName: 'kb_t_b_besitzer',
  columns: ['ref_benutzer', 'dtedit', 'fkstrid', 'luserid', 'dtinsert', 'strid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBBesitzer,
  $input: null as unknown as KbTBBesitzerInput
} as const;

// Table kb_t_b_favoriten
export interface KbTBFavoriten {
  dtinsert: string | null;
  fkstrid: string | null;
  strid: string;
  dtedit: string | null;
  luseridinsert: number | null;
  luserid: number | null;
}
export interface KbTBFavoritenInput {
  dtinsert?: string | null;
  fkstrid?: string | null;
  strid: string;
  dtedit?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
}
const kb_t_b_favoriten = {
  tableName: 'kb_t_b_favoriten',
  columns: ['dtinsert', 'fkstrid', 'strid', 'dtedit', 'luseridinsert', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBFavoriten,
  $input: null as unknown as KbTBFavoritenInput
} as const;

// Table kb_t_b_k_beobachten
export interface KbTBKBeobachten {
  dtedit: string | null;
  strid: string;
  fkstrid: string | null;
  luseridinsert: number | null;
  luserid: number | null;
  b_beobachten: boolean | null;
  dtinsert: string | null;
  ref_benutzer: number | null;
}
export interface KbTBKBeobachtenInput {
  dtedit?: string | null;
  strid: string;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  b_beobachten?: boolean | null;
  dtinsert?: string | null;
  ref_benutzer?: number | null;
}
const kb_t_b_k_beobachten = {
  tableName: 'kb_t_b_k_beobachten',
  columns: ['dtedit', 'strid', 'fkstrid', 'luseridinsert', 'luserid', 'b_beobachten', 'dtinsert', 'ref_benutzer'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKBeobachten,
  $input: null as unknown as KbTBKBeobachtenInput
} as const;

// Table kb_t_b_k_c_mitglieder
export interface KbTBKCMitglieder {
  ref_benutzer: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  lid: number;
  fkstrid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface KbTBKCMitgliederInput {
  ref_benutzer?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  lid: number;
  fkstrid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const kb_t_b_k_c_mitglieder = {
  tableName: 'kb_t_b_k_c_mitglieder',
  columns: ['ref_benutzer', 'dtinsert', 'dtedit', 'lid', 'fkstrid', 'luserid', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_k_checkliste', column: 'strid', $type: null as unknown as KbTBKCheckliste }, },
  $type: null as unknown as KbTBKCMitglieder,
  $input: null as unknown as KbTBKCMitgliederInput
} as const;

// Table kb_t_b_k_checkliste
export interface KbTBKCheckliste {
  luserid: number | null;
  l_order: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  txt_beschreibung: string | null;
  dtedit: string | null;
  str_reihenfolgealt: string | null;
  luseridinsert: number | null;
  dt_termin: string | null;
  strid: string;
  str_item: string | null;
  b_erledigt: boolean | null;
}
export interface KbTBKChecklisteInput {
  luserid?: number | null;
  l_order?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  txt_beschreibung?: string | null;
  dtedit?: string | null;
  str_reihenfolgealt?: string | null;
  luseridinsert?: number | null;
  dt_termin?: string | null;
  strid: string;
  str_item?: string | null;
  b_erledigt?: boolean | null;
}
const kb_t_b_k_checkliste = {
  tableName: 'kb_t_b_k_checkliste',
  columns: ['luserid', 'l_order', 'fkstrid', 'dtinsert', 'txt_beschreibung', 'dtedit', 'str_reihenfolgealt', 'luseridinsert', 'dt_termin', 'strid', 'str_item', 'b_erledigt'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKCheckliste,
  $input: null as unknown as KbTBKChecklisteInput
} as const;

// Table kb_t_b_k_connections
export interface KbTBKConnections {
  dtinsert: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  ref_karte: string | null;
  strid: string;
  fkstrid: string | null;
  luserid: number | null;
}
export interface KbTBKConnectionsInput {
  dtinsert?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  ref_karte?: string | null;
  strid: string;
  fkstrid?: string | null;
  luserid?: number | null;
}
const kb_t_b_k_connections = {
  tableName: 'kb_t_b_k_connections',
  columns: ['dtinsert', 'dtedit', 'luseridinsert', 'ref_karte', 'strid', 'fkstrid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_karte: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte },
    fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte },
  },
  $type: null as unknown as KbTBKConnections,
  $input: null as unknown as KbTBKConnectionsInput
} as const;

// Table kb_t_b_k_journal
export interface KbTBKJournal {
  luserid: number | null;
  dtinsert: string | null;
  str_attribut: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  strid: string;
}
export interface KbTBKJournalInput {
  luserid?: number | null;
  dtinsert?: string | null;
  str_attribut?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  strid: string;
}
const kb_t_b_k_journal = {
  tableName: 'kb_t_b_k_journal',
  columns: ['luserid', 'dtinsert', 'str_attribut', 'fkstrid', 'luseridinsert', 'dtedit', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKJournal,
  $input: null as unknown as KbTBKJournalInput
} as const;

// Table kb_t_b_k_k_journal
export interface KbTBKKJournal {
  luseridinsert: number | null;
  dtinsert: string | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  str_attribut: string | null;
  fkstrid: string | null;
}
export interface KbTBKKJournalInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  str_attribut?: string | null;
  fkstrid?: string | null;
}
const kb_t_b_k_k_journal = {
  tableName: 'kb_t_b_k_k_journal',
  columns: ['luseridinsert', 'dtinsert', 'strid', 'luserid', 'dtedit', 'str_attribut', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_k_kommentare', column: 'strid', $type: null as unknown as KbTBKKommentare }, },
  $type: null as unknown as KbTBKKJournal,
  $input: null as unknown as KbTBKKJournalInput
} as const;

// Table kb_t_b_k_kommentare
export interface KbTBKKommentare {
  txt_kommentar: string | null;
  luseridinsert: number | null;
  strid: string;
  dtinsert: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface KbTBKKommentareInput {
  txt_kommentar?: string | null;
  luseridinsert?: number | null;
  strid: string;
  dtinsert?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const kb_t_b_k_kommentare = {
  tableName: 'kb_t_b_k_kommentare',
  columns: ['txt_kommentar', 'luseridinsert', 'strid', 'dtinsert', 'fkstrid', 'luserid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKKommentare,
  $input: null as unknown as KbTBKKommentareInput
} as const;

// Table kb_t_b_k_labels
export interface KbTBKLabels {
  lid: number;
  luseridinsert: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  ref_label: string | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface KbTBKLabelsInput {
  lid: number;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  ref_label?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const kb_t_b_k_labels = {
  tableName: 'kb_t_b_k_labels',
  columns: ['lid', 'luseridinsert', 'fkstrid', 'dtinsert', 'ref_label', 'luserid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte },
    ref_label: { table: 'kb_t_b_labels', column: 'strid', $type: null as unknown as KbTBLabels },
  },
  $type: null as unknown as KbTBKLabels,
  $input: null as unknown as KbTBKLabelsInput
} as const;

// Table kb_t_b_k_m_mitglieder
export interface KbTBKMMitglieder {
  luseridinsert: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  luserid: number | null;
  strid: string;
  ref_benutzer: number | null;
  dtedit: string | null;
}
export interface KbTBKMMitgliederInput {
  luseridinsert?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  strid: string;
  ref_benutzer?: number | null;
  dtedit?: string | null;
}
const kb_t_b_k_m_mitglieder = {
  tableName: 'kb_t_b_k_m_mitglieder',
  columns: ['luseridinsert', 'fkstrid', 'dtinsert', 'luserid', 'strid', 'ref_benutzer', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_k_kommentare', column: 'strid', $type: null as unknown as KbTBKKommentare }, },
  $type: null as unknown as KbTBKMMitglieder,
  $input: null as unknown as KbTBKMMitgliederInput
} as const;

// Table kb_t_b_k_mitglieder
export interface KbTBKMitglieder {
  b_benachrichtigt: boolean | null;
  luseridinsert: number | null;
  luserid: number | null;
  lid: number;
  fkstrid: string | null;
  dtinsert: string | null;
  dtedit: string | null;
  ref_benutzer: number | null;
}
export interface KbTBKMitgliederInput {
  b_benachrichtigt?: boolean | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  lid: number;
  fkstrid?: string | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  ref_benutzer?: number | null;
}
const kb_t_b_k_mitglieder = {
  tableName: 'kb_t_b_k_mitglieder',
  columns: ['b_benachrichtigt', 'luseridinsert', 'luserid', 'lid', 'fkstrid', 'dtinsert', 'dtedit', 'ref_benutzer'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKMitglieder,
  $input: null as unknown as KbTBKMitgliederInput
} as const;

// Table kb_t_b_k_nachrichten
export interface KbTBKNachrichten {
  luseridinsert: number | null;
  str_einausgang: string | null;
  fkstrid: string | null;
  dtedit: string | null;
  str_von: string | null;
  txt_text: string | null;
  l_fileinformation: number | null;
  strid: string;
  str_betreff: string | null;
  dtinsert: string | null;
  str_an: string | null;
  luserid: number | null;
  str_emailvorlage: string | null;
}
export interface KbTBKNachrichtenInput {
  luseridinsert?: number | null;
  str_einausgang?: string | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  str_von?: string | null;
  txt_text?: string | null;
  l_fileinformation?: number | null;
  strid: string;
  str_betreff?: string | null;
  dtinsert?: string | null;
  str_an?: string | null;
  luserid?: number | null;
  str_emailvorlage?: string | null;
}
const kb_t_b_k_nachrichten = {
  tableName: 'kb_t_b_k_nachrichten',
  columns: ['luseridinsert', 'str_einausgang', 'fkstrid', 'dtedit', 'str_von', 'txt_text', 'l_fileinformation', 'strid', 'str_betreff', 'dtinsert', 'str_an', 'luserid', 'str_emailvorlage'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as KbTBKNachrichten,
  $input: null as unknown as KbTBKNachrichtenInput
} as const;

// Table kb_t_b_karte
export interface KbTBKarte {
  dtedit: string | null;
  l_anzahlkommentare: number | null;
  l_fileinformation_1: number | null;
  str_kartentitel: string | null;
  ref_spalte: string | null;
  b_dummy: boolean | null;
  str_linkverknuepftekarten: string | null;
  l_anzahlverknuepftekarten: number | null;
  l_tagebisfaelligkeit: number | null;
  ref_prio: string | null;
  l_anzahlitems: number | null;
  b_locked: boolean | null;
  ref_status: string | null;
  type: string | null;
  luseridinsert: number | null;
  b_obenanpinnen: boolean | null;
  dt_erinnerungsdatum: string | null;
  ref_872cca36: string | null;
  l_anzahlitemserledigt: number | null;
  fkstrid: string | null;
  b_ausblenden: boolean | null;
  dt_faelligkeitsdatum: string | null;
  dt_startdatum: string | null;
  txt_notizen: string | null;
  luserid: number | null;
  b_erstekarte: boolean | null;
  l_anzahlanhaenge: number | null;
  l_lockeduser: number | null;
  dtinsert: string | null;
  l_fileinformation: number | null;
  str_anzahlitems: string | null;
  b_notizaufkarteanzeigen: boolean | null;
  strid: string;
  b_kommentareaufkarteanzeigen: boolean | null;
  l_order: number | null;
  str_boardlink: string | null;
  b_checklisteaufkarteanzeigen: boolean | null;
  ref_kategorie: string | null;
}
export interface KbTBKarteInput {
  dtedit?: string | null;
  l_anzahlkommentare?: number | null;
  l_fileinformation_1?: number | null;
  str_kartentitel?: string | null;
  ref_spalte?: string | null;
  b_dummy?: boolean | null;
  str_linkverknuepftekarten?: string | null;
  l_anzahlverknuepftekarten?: number | null;
  l_tagebisfaelligkeit?: number | null;
  ref_prio?: string | null;
  l_anzahlitems?: number | null;
  b_locked?: boolean | null;
  ref_status?: string | null;
  type?: string | null;
  luseridinsert?: number | null;
  b_obenanpinnen?: boolean | null;
  dt_erinnerungsdatum?: string | null;
  ref_872cca36?: string | null;
  l_anzahlitemserledigt?: number | null;
  fkstrid?: string | null;
  b_ausblenden?: boolean | null;
  dt_faelligkeitsdatum?: string | null;
  dt_startdatum?: string | null;
  txt_notizen?: string | null;
  luserid?: number | null;
  b_erstekarte?: boolean | null;
  l_anzahlanhaenge?: number | null;
  l_lockeduser?: number | null;
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  str_anzahlitems?: string | null;
  b_notizaufkarteanzeigen?: boolean | null;
  strid: string;
  b_kommentareaufkarteanzeigen?: boolean | null;
  l_order?: number | null;
  str_boardlink?: string | null;
  b_checklisteaufkarteanzeigen?: boolean | null;
  ref_kategorie?: string | null;
}
const kb_t_b_karte = {
  tableName: 'kb_t_b_karte',
  columns: ['dtedit', 'l_anzahlkommentare', 'l_fileinformation_1', 'str_kartentitel', 'ref_spalte', 'b_dummy', 'str_linkverknuepftekarten', 'l_anzahlverknuepftekarten', 'l_tagebisfaelligkeit', 'ref_prio', 'l_anzahlitems', 'b_locked', 'ref_status', 'type', 'luseridinsert', 'b_obenanpinnen', 'dt_erinnerungsdatum', 'ref_872cca36', 'l_anzahlitemserledigt', 'fkstrid', 'b_ausblenden', 'dt_faelligkeitsdatum', 'dt_startdatum', 'txt_notizen', 'luserid', 'b_erstekarte', 'l_anzahlanhaenge', 'l_lockeduser', 'dtinsert', 'l_fileinformation', 'str_anzahlitems', 'b_notizaufkarteanzeigen', 'strid', 'b_kommentareaufkarteanzeigen', 'l_order', 'str_boardlink', 'b_checklisteaufkarteanzeigen', 'ref_kategorie'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_spalte: { table: 'kb_t_b_spalte', column: 'strid', $type: null as unknown as KbTBSpalte },
    ref_prio: { table: 'kb_t_b_prioritaet', column: 'strid', $type: null as unknown as KbTBPrioritaet },
    ref_status: { table: 'kb_t_b_status', column: 'strid', $type: null as unknown as KbTBStatus },
    ref_872cca36: { table: 'kb_t_serientermine', column: 'strid', $type: null as unknown as KbTSerientermine },
    fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard },
    ref_kategorie: { table: 'kb_t_b_kategorie', column: 'strid', $type: null as unknown as KbTBKategorie },
  },
  $type: null as unknown as KbTBKarte,
  $input: null as unknown as KbTBKarteInput
} as const;

// Table kb_t_b_kategorie
export interface KbTBKategorie {
  strid: string;
  txt_class: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
  str_layout: string | null;
  str_schriftfarbe: string | null;
  str_hintergrundfarbe: string | null;
  str_filter: string | null;
  str_kategorie: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
}
export interface KbTBKategorieInput {
  strid: string;
  txt_class?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  str_layout?: string | null;
  str_schriftfarbe?: string | null;
  str_hintergrundfarbe?: string | null;
  str_filter?: string | null;
  str_kategorie?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
}
const kb_t_b_kategorie = {
  tableName: 'kb_t_b_kategorie',
  columns: ['strid', 'txt_class', 'luserid', 'luseridinsert', 'dtedit', 'str_layout', 'str_schriftfarbe', 'str_hintergrundfarbe', 'str_filter', 'str_kategorie', 'fkstrid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBKategorie,
  $input: null as unknown as KbTBKategorieInput
} as const;

// Table kb_t_b_labels
export interface KbTBLabels {
  fkstrid: string | null;
  str_hintergrundfarbe: string | null;
  str_label: string | null;
  strid: string;
  luseridinsert: number | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  str_schriftfarbe: string | null;
}
export interface KbTBLabelsInput {
  fkstrid?: string | null;
  str_hintergrundfarbe?: string | null;
  str_label?: string | null;
  strid: string;
  luseridinsert?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_schriftfarbe?: string | null;
}
const kb_t_b_labels = {
  tableName: 'kb_t_b_labels',
  columns: ['fkstrid', 'str_hintergrundfarbe', 'str_label', 'strid', 'luseridinsert', 'luserid', 'dtinsert', 'dtedit', 'str_schriftfarbe'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBLabels,
  $input: null as unknown as KbTBLabelsInput
} as const;

// Table kb_t_b_mitglieder
export interface KbTBMitglieder {
  fkstrid: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  strid: string;
  ref_benutzer: number | null;
  dtinsert: string | null;
  str_berechtigung: string | null;
  luserid: number | null;
}
export interface KbTBMitgliederInput {
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  strid: string;
  ref_benutzer?: number | null;
  dtinsert?: string | null;
  str_berechtigung?: string | null;
  luserid?: number | null;
}
const kb_t_b_mitglieder = {
  tableName: 'kb_t_b_mitglieder',
  columns: ['fkstrid', 'luseridinsert', 'dtedit', 'strid', 'ref_benutzer', 'dtinsert', 'str_berechtigung', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBMitglieder,
  $input: null as unknown as KbTBMitgliederInput
} as const;

// Table kb_t_b_personal_settings
export interface KbTBPersonalSettings {
  luserid: number | null;
  luseridinsert: number | null;
  b_everychange: boolean | null;
  dtedit: string | null;
  dtinsert: string | null;
  ref_benutzer: number | null;
  strid: string;
  b_ownchange: boolean | null;
  fkstrid: string | null;
}
export interface KbTBPersonalSettingsInput {
  luserid?: number | null;
  luseridinsert?: number | null;
  b_everychange?: boolean | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  ref_benutzer?: number | null;
  strid: string;
  b_ownchange?: boolean | null;
  fkstrid?: string | null;
}
const kb_t_b_personal_settings = {
  tableName: 'kb_t_b_personal_settings',
  columns: ['luserid', 'luseridinsert', 'b_everychange', 'dtedit', 'dtinsert', 'ref_benutzer', 'strid', 'b_ownchange', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBPersonalSettings,
  $input: null as unknown as KbTBPersonalSettingsInput
} as const;

// Table kb_t_b_prioritaet
export interface KbTBPrioritaet {
  strid: string;
  str_sortierung: string | null;
  dtedit: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  fkstrid: string | null;
  str_prioritaet: string | null;
  l_fileinformation: number | null;
}
export interface KbTBPrioritaetInput {
  strid: string;
  str_sortierung?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
  str_prioritaet?: string | null;
  l_fileinformation?: number | null;
}
const kb_t_b_prioritaet = {
  tableName: 'kb_t_b_prioritaet',
  columns: ['strid', 'str_sortierung', 'dtedit', 'luserid', 'luseridinsert', 'dtinsert', 'fkstrid', 'str_prioritaet', 'l_fileinformation'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBPrioritaet,
  $input: null as unknown as KbTBPrioritaetInput
} as const;

// Table kb_t_b_spalte
export interface KbTBSpalte {
  str_sortierung: string | null;
  strid: string;
  str_sortierungsrichtung: string | null;
  luserid: number | null;
  fkstrid: string | null;
  l_index: number | null;
  b_allekartenerledigt: boolean | null;
  dtedit: string | null;
  str_spaltentitel: string | null;
  l_wiplimit: number | null;
  dtinsert: string | null;
  l_anzahlerledigtekarten: number | null;
  luseridinsert: number | null;
}
export interface KbTBSpalteInput {
  str_sortierung?: string | null;
  strid: string;
  str_sortierungsrichtung?: string | null;
  luserid?: number | null;
  fkstrid?: string | null;
  l_index?: number | null;
  b_allekartenerledigt?: boolean | null;
  dtedit?: string | null;
  str_spaltentitel?: string | null;
  l_wiplimit?: number | null;
  dtinsert?: string | null;
  l_anzahlerledigtekarten?: number | null;
  luseridinsert?: number | null;
}
const kb_t_b_spalte = {
  tableName: 'kb_t_b_spalte',
  columns: ['str_sortierung', 'strid', 'str_sortierungsrichtung', 'luserid', 'fkstrid', 'l_index', 'b_allekartenerledigt', 'dtedit', 'str_spaltentitel', 'l_wiplimit', 'dtinsert', 'l_anzahlerledigtekarten', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBSpalte,
  $input: null as unknown as KbTBSpalteInput
} as const;

// Table kb_t_b_status
export interface KbTBStatus {
  str_status: string | null;
  strid: string;
  luseridinsert: number | null;
  dtinsert: string | null;
  str_kategorie: string | null;
  str_id: string | null;
  fkstrid: string | null;
  str_sortierung: string | null;
  l_fileinformation: number | null;
  luserid: number | null;
  str_cssfilter: string | null;
  dtedit: string | null;
  b_systemstatus: boolean | null;
}
export interface KbTBStatusInput {
  str_status?: string | null;
  strid: string;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_kategorie?: string | null;
  str_id?: string | null;
  fkstrid?: string | null;
  str_sortierung?: string | null;
  l_fileinformation?: number | null;
  luserid?: number | null;
  str_cssfilter?: string | null;
  dtedit?: string | null;
  b_systemstatus?: boolean | null;
}
const kb_t_b_status = {
  tableName: 'kb_t_b_status',
  columns: ['str_status', 'strid', 'luseridinsert', 'dtinsert', 'str_kategorie', 'str_id', 'fkstrid', 'str_sortierung', 'l_fileinformation', 'luserid', 'str_cssfilter', 'dtedit', 'b_systemstatus'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as KbTBStatus,
  $input: null as unknown as KbTBStatusInput
} as const;

// Table kb_t_backup
export interface KbTBackup {
  strid: string;
  luserid: number | null;
  txt_berechtigung: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  l_fileinformation: number | null;
  dt_datum: string | null;
  dtinsert: string | null;
  str_titel: string | null;
  str_mandant: string | null;
}
export interface KbTBackupInput {
  strid: string;
  luserid?: number | null;
  txt_berechtigung?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  l_fileinformation?: number | null;
  dt_datum?: string | null;
  dtinsert?: string | null;
  str_titel?: string | null;
  str_mandant?: string | null;
}
const kb_t_backup = {
  tableName: 'kb_t_backup',
  columns: ['strid', 'luserid', 'txt_berechtigung', 'luseridinsert', 'dtedit', 'l_fileinformation', 'dt_datum', 'dtinsert', 'str_titel', 'str_mandant'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbTBackup,
  $input: null as unknown as KbTBackupInput
} as const;

// Table kb_t_board
export interface KbTBoard {
  luseridinsert: number | null;
  b_badgetanzeigen: boolean | null;
  str_sichtbarkeit: string | null;
  b_vorlage: boolean | null;
  dtedit: string | null;
  strid: string;
  str_boardtitel: string | null;
  str_board3: string | null;
  b_labelsanzeigen: boolean | null;
  txt_boardmitglieder: string | null;
  luserid: number | null;
  dt_zieltermin: string | null;
  b_anzahlkartenanzeigen: boolean | null;
  str_board4: string | null;
  dtinsert: string | null;
  b_mitgliederanzeigen: boolean | null;
  str_mandant: string | null;
  str_board5: string | null;
  b_termineanzeigen: boolean | null;
  l_fileinformation: number | null;
  ref_boardstatus: string | null;
  str_kanbanlink: string | null;
  str_hintergrundfarbe: string | null;
  str_spaltenbreite: string | null;
  b_emailnachrichtenaktivieren: boolean | null;
  b_erledigtekartenausblenden: boolean | null;
  ref_boardgruppe: string | null;
  l_anzahlkarten: number | null;
  str_board2: string | null;
  b_mitgliederhinzufuegenanzeige: boolean | null;
}
export interface KbTBoardInput {
  luseridinsert?: number | null;
  b_badgetanzeigen?: boolean | null;
  str_sichtbarkeit?: string | null;
  b_vorlage?: boolean | null;
  dtedit?: string | null;
  strid: string;
  str_boardtitel?: string | null;
  str_board3?: string | null;
  b_labelsanzeigen?: boolean | null;
  txt_boardmitglieder?: string | null;
  luserid?: number | null;
  dt_zieltermin?: string | null;
  b_anzahlkartenanzeigen?: boolean | null;
  str_board4?: string | null;
  dtinsert?: string | null;
  b_mitgliederanzeigen?: boolean | null;
  str_mandant?: string | null;
  str_board5?: string | null;
  b_termineanzeigen?: boolean | null;
  l_fileinformation?: number | null;
  ref_boardstatus?: string | null;
  str_kanbanlink?: string | null;
  str_hintergrundfarbe?: string | null;
  str_spaltenbreite?: string | null;
  b_emailnachrichtenaktivieren?: boolean | null;
  b_erledigtekartenausblenden?: boolean | null;
  ref_boardgruppe?: string | null;
  l_anzahlkarten?: number | null;
  str_board2?: string | null;
  b_mitgliederhinzufuegenanzeige?: boolean | null;
}
const kb_t_board = {
  tableName: 'kb_t_board',
  columns: ['luseridinsert', 'b_badgetanzeigen', 'str_sichtbarkeit', 'b_vorlage', 'dtedit', 'strid', 'str_boardtitel', 'str_board3', 'b_labelsanzeigen', 'txt_boardmitglieder', 'luserid', 'dt_zieltermin', 'b_anzahlkartenanzeigen', 'str_board4', 'dtinsert', 'b_mitgliederanzeigen', 'str_mandant', 'str_board5', 'b_termineanzeigen', 'l_fileinformation', 'ref_boardstatus', 'str_kanbanlink', 'str_hintergrundfarbe', 'str_spaltenbreite', 'b_emailnachrichtenaktivieren', 'b_erledigtekartenausblenden', 'ref_boardgruppe', 'l_anzahlkarten', 'str_board2', 'b_mitgliederhinzufuegenanzeige'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_boardstatus: { table: 'kb_kat_boardstatus', column: 'strid', $type: null as unknown as KbKatBoardstatus },
    ref_boardgruppe: { table: 'kb_t_boardgruppe', column: 'strid', $type: null as unknown as KbTBoardgruppe },
  },
  $type: null as unknown as KbTBoard,
  $input: null as unknown as KbTBoardInput
} as const;

// Table kb_t_boardgruppe
export interface KbTBoardgruppe {
  str_mandant: string | null;
  str_boardgruppe: string | null;
  luserid: number | null;
  strid: string;
  dtedit: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
}
export interface KbTBoardgruppeInput {
  str_mandant?: string | null;
  str_boardgruppe?: string | null;
  luserid?: number | null;
  strid: string;
  dtedit?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
}
const kb_t_boardgruppe = {
  tableName: 'kb_t_boardgruppe',
  columns: ['str_mandant', 'str_boardgruppe', 'luserid', 'strid', 'dtedit', 'dtinsert', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbTBoardgruppe,
  $input: null as unknown as KbTBoardgruppeInput
} as const;

// Table kb_t_bu_besitzer
export interface KbTBuBesitzer {
  fkstrid: string | null;
  luseridinsert: number | null;
  ref_benutzer: number | null;
  luserid: number | null;
  dtedit: string | null;
  strid: string;
  dtinsert: string | null;
}
export interface KbTBuBesitzerInput {
  fkstrid?: string | null;
  luseridinsert?: number | null;
  ref_benutzer?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
  dtinsert?: string | null;
}
const kb_t_bu_besitzer = {
  tableName: 'kb_t_bu_besitzer',
  columns: ['fkstrid', 'luseridinsert', 'ref_benutzer', 'luserid', 'dtedit', 'strid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_backup', column: 'strid', $type: null as unknown as KbTBackup }, },
  $type: null as unknown as KbTBuBesitzer,
  $input: null as unknown as KbTBuBesitzerInput
} as const;

// Table kb_t_emailtemplates
export interface KbTEmailtemplates {
  str_an: string | null;
  txt_text: string | null;
  dtedit: string | null;
  str_mandant: string | null;
  luserid: number | null;
  str_titel: string | null;
  str_betreff: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strid: string;
  txt_beschreibung: string | null;
}
export interface KbTEmailtemplatesInput {
  str_an?: string | null;
  txt_text?: string | null;
  dtedit?: string | null;
  str_mandant?: string | null;
  luserid?: number | null;
  str_titel?: string | null;
  str_betreff?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strid: string;
  txt_beschreibung?: string | null;
}
const kb_t_emailtemplates = {
  tableName: 'kb_t_emailtemplates',
  columns: ['str_an', 'txt_text', 'dtedit', 'str_mandant', 'luserid', 'str_titel', 'str_betreff', 'dtinsert', 'luseridinsert', 'strid', 'txt_beschreibung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbTEmailtemplates,
  $input: null as unknown as KbTEmailtemplatesInput
} as const;

// Table kb_t_personal_settings
export interface KbTPersonalSettings {
  b_michbeineuenkommentareninfor: boolean | null;
  strid: string;
  dtedit: string | null;
  luseridinsert: number | null;
  b_michbeiaenderungeninkartenin: boolean | null;
  luserid: number | null;
  dtinsert: string | null;
}
export interface KbTPersonalSettingsInput {
  b_michbeineuenkommentareninfor?: boolean | null;
  strid: string;
  dtedit?: string | null;
  luseridinsert?: number | null;
  b_michbeiaenderungeninkartenin?: boolean | null;
  luserid?: number | null;
  dtinsert?: string | null;
}
const kb_t_personal_settings = {
  tableName: 'kb_t_personal_settings',
  columns: ['b_michbeineuenkommentareninfor', 'strid', 'dtedit', 'luseridinsert', 'b_michbeiaenderungeninkartenin', 'luserid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbTPersonalSettings,
  $input: null as unknown as KbTPersonalSettingsInput
} as const;

// Table kb_t_serientermine
export interface KbTSerientermine {
  luseridinsert: number | null;
  dtinsert: string | null;
  str_rule: string | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
}
export interface KbTSerientermineInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_rule?: string | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
}
const kb_t_serientermine = {
  tableName: 'kb_t_serientermine',
  columns: ['luseridinsert', 'dtinsert', 'str_rule', 'strid', 'luserid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as KbTSerientermine,
  $input: null as unknown as KbTSerientermineInput
} as const;

// Table lcapikey
export interface Lcapikey {
  strapikey: string;
  strtitle: string | null;
  luserid: number;
  dtexpiration: string | null;
  bdisabled: boolean;
}
export interface LcapikeyInput {
  strapikey: string;
  strtitle?: string | null;
  luserid: number;
  dtexpiration?: string | null;
  bdisabled: boolean;
}
const lcapikey = {
  tableName: 'lcapikey',
  columns: ['strapikey', 'strtitle', 'luserid', 'dtexpiration', 'bdisabled'],
  requiredForInsert: ['strapikey', 'luserid', 'bdisabled'],
  primaryKey: 'strapikey',
  foreignKeys: { luserid: { table: 'dsuser', column: 'lid', $type: null as unknown as Dsuser }, },
  $type: null as unknown as Lcapikey,
  $input: null as unknown as LcapikeyInput
} as const;

// Table lcapikeyrole
export interface Lcapikeyrole {
  strname: string;
  strapikey: string;
}
export interface LcapikeyroleInput {
  strname: string;
  strapikey: string;
}
const lcapikeyrole = {
  tableName: 'lcapikeyrole',
  columns: ['strname', 'strapikey'],
  requiredForInsert: ['strname', 'strapikey'],
  primaryKey: 'strname',
  foreignKeys: {
    strname: { table: 'lcapirole', column: 'strname', $type: null as unknown as Lcapirole },
    strapikey: { table: 'lcapikey', column: 'strapikey', $type: null as unknown as Lcapikey },
  },
  $type: null as unknown as Lcapikeyrole,
  $input: null as unknown as LcapikeyroleInput
} as const;

// Table lcapiperm
export interface Lcapiperm {
  strid: string;
  strapiendpointguid: string;
  strapikey: string | null;
  strapirole: string | null;
}
export interface LcapipermInput {
  strid: string;
  strapiendpointguid: string;
  strapikey?: string | null;
  strapirole?: string | null;
}
const lcapiperm = {
  tableName: 'lcapiperm',
  columns: ['strid', 'strapiendpointguid', 'strapikey', 'strapirole'],
  requiredForInsert: ['strid', 'strapiendpointguid'],
  primaryKey: 'strid',
  foreignKeys: {
    strapikey: { table: 'lcapikey', column: 'strapikey', $type: null as unknown as Lcapikey },
    strapirole: { table: 'lcapirole', column: 'strname', $type: null as unknown as Lcapirole },
  },
  $type: null as unknown as Lcapiperm,
  $input: null as unknown as LcapipermInput
} as const;

// Table lcapirole
export interface Lcapirole {
  strname: string;
  bdisabled: boolean;
}
export interface LcapiroleInput {
  strname: string;
  bdisabled: boolean;
}
const lcapirole = {
  tableName: 'lcapirole',
  columns: ['strname', 'bdisabled'],
  requiredForInsert: ['strname', 'bdisabled'],
  primaryKey: 'strname',
  foreignKeys: {},
  $type: null as unknown as Lcapirole,
  $input: null as unknown as LcapiroleInput
} as const;

// Table lcapp
export interface Lcapp {
  strguid: string;
  strappname: string;
  bissystem: number;
  strapptemplguid: string;
  luseridcreate: number;
  dteditcreate: string;
  luseridchanged: number | null;
  dteditchanged: string | null;
  strappfupguid: string | null;
  strapppageguid: string | null;
  strapplic: string | null;
  strlangconsttitle: string | null;
  strlangconstdescription: string | null;
  txtsettings: string | null;
}
export interface LcappInput {
  strguid: string;
  strappname: string;
  bissystem: number;
  strapptemplguid: string;
  luseridcreate: number;
  dteditcreate: string;
  luseridchanged?: number | null;
  dteditchanged?: string | null;
  strappfupguid?: string | null;
  strapppageguid?: string | null;
  strapplic?: string | null;
  strlangconsttitle?: string | null;
  strlangconstdescription?: string | null;
  txtsettings?: string | null;
}
const lcapp = {
  tableName: 'lcapp',
  columns: ['strguid', 'strappname', 'bissystem', 'strapptemplguid', 'luseridcreate', 'dteditcreate', 'luseridchanged', 'dteditchanged', 'strappfupguid', 'strapppageguid', 'strapplic', 'strlangconsttitle', 'strlangconstdescription', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappname', 'bissystem', 'strapptemplguid', 'luseridcreate', 'dteditcreate'],
  primaryKey: 'strguid',
  foreignKeys: {
    strapptemplguid: { table: 'lcapptempl', column: 'strguid', $type: null as unknown as Lcapptempl },
    strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup },
  },
  $type: null as unknown as Lcapp,
  $input: null as unknown as LcappInput
} as const;

// Table lcappaction
export interface Lcappaction {
  strguid: string;
  strappfupguid: string;
  straction: string;
  txtsettings: string | null;
}
export interface LcappactionInput {
  strguid: string;
  strappfupguid: string;
  straction: string;
  txtsettings?: string | null;
}
const lcappaction = {
  tableName: 'lcappaction',
  columns: ['strguid', 'strappfupguid', 'straction', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappfupguid', 'straction'],
  primaryKey: 'strguid',
  foreignKeys: { strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup }, },
  $type: null as unknown as Lcappaction,
  $input: null as unknown as LcappactionInput
} as const;

// Table lcappchildcontrol
export interface Lcappchildcontrol {
  strguid: string;
  strappcontroldrguid: string;
  strappfieldguid: string | null;
  lposition: number;
  bdistinct: number | null;
  strcontroltype: string;
  strcontrolname: string;
  strsysident: string | null;
  beditcontrol: number;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcappchildcontrolInput {
  strguid: string;
  strappcontroldrguid: string;
  strappfieldguid?: string | null;
  lposition: number;
  bdistinct?: number | null;
  strcontroltype: string;
  strcontrolname: string;
  strsysident?: string | null;
  beditcontrol: number;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappchildcontrol = {
  tableName: 'lcappchildcontrol',
  columns: ['strguid', 'strappcontroldrguid', 'strappfieldguid', 'lposition', 'bdistinct', 'strcontroltype', 'strcontrolname', 'strsysident', 'beditcontrol', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappcontroldrguid', 'lposition', 'strcontroltype', 'strcontrolname', 'beditcontrol'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappcontroldrguid: { table: 'lcappcontroldr', column: 'strguid', $type: null as unknown as Lcappcontroldr },
    strappfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
  },
  $type: null as unknown as Lcappchildcontrol,
  $input: null as unknown as LcappchildcontrolInput
} as const;

// Table lcappchildcontroltitle
export interface Lcappchildcontroltitle {
  strchildcontrolguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappchildcontroltitleInput {
  strchildcontrolguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappchildcontroltitle = {
  tableName: 'lcappchildcontroltitle',
  columns: ['strchildcontrolguid', 'strlang', 'stritem'],
  requiredForInsert: ['strchildcontrolguid', 'strlang'],
  primaryKey: 'strchildcontrolguid',
  foreignKeys: { strchildcontrolguid: { table: 'lcappchildcontrol', column: 'strguid', $type: null as unknown as Lcappchildcontrol }, },
  $type: null as unknown as Lcappchildcontroltitle,
  $input: null as unknown as LcappchildcontroltitleInput
} as const;

// Table lcappcontrol
export interface Lcappcontrol {
  strguid: string;
  strappfupguid: string;
  strbinding: string | null;
  strform: string;
  beditcontrol: number;
  strcontroltype: string | null;
  strcontrolname: string | null;
  lposition: number | null;
  strsysident: string | null;
  strhiddenstate: string | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcappcontrolInput {
  strguid: string;
  strappfupguid: string;
  strbinding?: string | null;
  strform: string;
  beditcontrol: number;
  strcontroltype?: string | null;
  strcontrolname?: string | null;
  lposition?: number | null;
  strsysident?: string | null;
  strhiddenstate?: string | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappcontrol = {
  tableName: 'lcappcontrol',
  columns: ['strguid', 'strappfupguid', 'strbinding', 'strform', 'beditcontrol', 'strcontroltype', 'strcontrolname', 'lposition', 'strsysident', 'strhiddenstate', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappfupguid', 'strform', 'beditcontrol'],
  primaryKey: 'strguid',
  foreignKeys: { strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup }, },
  $type: null as unknown as Lcappcontrol,
  $input: null as unknown as LcappcontrolInput
} as const;

// Table lcappcontroldr
export interface Lcappcontroldr {
  strguid: string;
  strdrflag: string | null;
  strappfupguid: string;
  strextappguid: string | null;
  strcontrolname: string;
  lmaxtext: number | null;
  lpagesize: number;
  lpage: number;
  strappfilterguid: string | null;
  strcontainertype: string | null;
  strsysident: string | null;
  bselectparentkey: number | null;
  strmaindgguid: string | null;
  strhiddenstate: string | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcappcontroldrInput {
  strguid: string;
  strdrflag?: string | null;
  strappfupguid: string;
  strextappguid?: string | null;
  strcontrolname: string;
  lmaxtext?: number | null;
  lpagesize: number;
  lpage: number;
  strappfilterguid?: string | null;
  strcontainertype?: string | null;
  strsysident?: string | null;
  bselectparentkey?: number | null;
  strmaindgguid?: string | null;
  strhiddenstate?: string | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappcontroldr = {
  tableName: 'lcappcontroldr',
  columns: ['strguid', 'strdrflag', 'strappfupguid', 'strextappguid', 'strcontrolname', 'lmaxtext', 'lpagesize', 'lpage', 'strappfilterguid', 'strcontainertype', 'strsysident', 'bselectparentkey', 'strmaindgguid', 'strhiddenstate', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappfupguid', 'strcontrolname', 'lpagesize', 'lpage'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup },
    strappfilterguid: { table: 'lcappfilter', column: 'strguid', $type: null as unknown as Lcappfilter },
    strmaindgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
  },
  $type: null as unknown as Lcappcontroldr,
  $input: null as unknown as LcappcontroldrInput
} as const;

// Table lcappcontroldrtitle
export interface Lcappcontroldrtitle {
  strcontroldrguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappcontroldrtitleInput {
  strcontroldrguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappcontroldrtitle = {
  tableName: 'lcappcontroldrtitle',
  columns: ['strcontroldrguid', 'strlang', 'stritem'],
  requiredForInsert: ['strcontroldrguid', 'strlang'],
  primaryKey: 'strcontroldrguid',
  foreignKeys: { strcontroldrguid: { table: 'lcappcontroldr', column: 'strguid', $type: null as unknown as Lcappcontroldr }, },
  $type: null as unknown as Lcappcontroldrtitle,
  $input: null as unknown as LcappcontroldrtitleInput
} as const;

// Table lcappcontroltitle
export interface Lcappcontroltitle {
  strcontrolguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappcontroltitleInput {
  strcontrolguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappcontroltitle = {
  tableName: 'lcappcontroltitle',
  columns: ['strcontrolguid', 'strlang', 'stritem'],
  requiredForInsert: ['strcontrolguid', 'strlang'],
  primaryKey: 'strcontrolguid',
  foreignKeys: { strcontrolguid: { table: 'lcappcontrol', column: 'strguid', $type: null as unknown as Lcappcontrol }, },
  $type: null as unknown as Lcappcontroltitle,
  $input: null as unknown as LcappcontroltitleInput
} as const;

// Table lcappdatapick
export interface Lcappdatapick {
  strguid: string;
  strappfupguid: string;
  strappfilterguid: string | null;
  strcontrolname: string | null;
  txtsettings: string | null;
}
export interface LcappdatapickInput {
  strguid: string;
  strappfupguid: string;
  strappfilterguid?: string | null;
  strcontrolname?: string | null;
  txtsettings?: string | null;
}
const lcappdatapick = {
  tableName: 'lcappdatapick',
  columns: ['strguid', 'strappfupguid', 'strappfilterguid', 'strcontrolname', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappfupguid'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup },
    strappfilterguid: { table: 'lcappfilter', column: 'strguid', $type: null as unknown as Lcappfilter },
  },
  $type: null as unknown as Lcappdatapick,
  $input: null as unknown as LcappdatapickInput
} as const;

// Table lcappdatapickchild
export interface Lcappdatapickchild {
  strguid: string;
  strappfieldguid: string | null;
  bismatch: number;
  strdatapickguid: string;
  strcontrolguid: string | null;
  strcontroltype: string | null;
  strsortorder: string | null;
  lsortpos: number | null;
  txtsettings: string | null;
}
export interface LcappdatapickchildInput {
  strguid: string;
  strappfieldguid?: string | null;
  bismatch: number;
  strdatapickguid: string;
  strcontrolguid?: string | null;
  strcontroltype?: string | null;
  strsortorder?: string | null;
  lsortpos?: number | null;
  txtsettings?: string | null;
}
const lcappdatapickchild = {
  tableName: 'lcappdatapickchild',
  columns: ['strguid', 'strappfieldguid', 'bismatch', 'strdatapickguid', 'strcontrolguid', 'strcontroltype', 'strsortorder', 'lsortpos', 'txtsettings'],
  requiredForInsert: ['strguid', 'bismatch', 'strdatapickguid'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
    strdatapickguid: { table: 'lcappdatapick', column: 'strguid', $type: null as unknown as Lcappdatapick },
    strcontrolguid: { table: 'lcappcontrol', column: 'strguid', $type: null as unknown as Lcappcontrol },
  },
  $type: null as unknown as Lcappdatapickchild,
  $input: null as unknown as LcappdatapickchildInput
} as const;

// Table lcappdg
export interface Lcappdg {
  strguid: string;
  strdgname: string | null;
  strappguid: string | null;
  strconnect: string;
  strtablename: string | null;
  strparentdgguid: string | null;
  bhasreference: number;
  bdeletable: number;
  strdatahandler: string;
  strappfilterguid: string | null;
  strownerfield: string | null;
  strsysident: string | null;
  labslevel: number;
  bforeign: number | null;
  binternal: number | null;
  strlangconsttitle: string | null;
  strforeignkeyname: string | null;
  txtsettings: string | null;
}
export interface LcappdgInput {
  strguid: string;
  strdgname?: string | null;
  strappguid?: string | null;
  strconnect: string;
  strtablename?: string | null;
  strparentdgguid?: string | null;
  bhasreference: number;
  bdeletable: number;
  strdatahandler: string;
  strappfilterguid?: string | null;
  strownerfield?: string | null;
  strsysident?: string | null;
  labslevel: number;
  bforeign?: number | null;
  binternal?: number | null;
  strlangconsttitle?: string | null;
  strforeignkeyname?: string | null;
  txtsettings?: string | null;
}
const lcappdg = {
  tableName: 'lcappdg',
  columns: ['strguid', 'strdgname', 'strappguid', 'strconnect', 'strtablename', 'strparentdgguid', 'bhasreference', 'bdeletable', 'strdatahandler', 'strappfilterguid', 'strownerfield', 'strsysident', 'labslevel', 'bforeign', 'binternal', 'strlangconsttitle', 'strforeignkeyname', 'txtsettings'],
  requiredForInsert: ['strguid', 'strconnect', 'bhasreference', 'bdeletable', 'strdatahandler', 'labslevel'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp },
    strparentdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strappfilterguid: { table: 'lcappfilter', column: 'strguid', $type: null as unknown as Lcappfilter },
    strownerfield: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
  },
  $type: null as unknown as Lcappdg,
  $input: null as unknown as LcappdgInput
} as const;

// Table lcappdgtitle
export interface Lcappdgtitle {
  strdgguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappdgtitleInput {
  strdgguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappdgtitle = {
  tableName: 'lcappdgtitle',
  columns: ['strdgguid', 'strlang', 'stritem'],
  requiredForInsert: ['strdgguid', 'strlang'],
  primaryKey: 'strdgguid',
  foreignKeys: { strdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg }, },
  $type: null as unknown as Lcappdgtitle,
  $input: null as unknown as LcappdgtitleInput
} as const;

// Table lcappfield
export interface Lcappfield {
  strguid: string;
  strname: string | null;
  strappdgguid: string | null;
  strapprefguid: string | null;
  strcalcguid: string | null;
  strdbfieldname: string | null;
  strreffieldguid: string | null;
  strupddefault: string | null;
  breference: number;
  bprimarykey: number | null;
  strparent: string | null;
  strfilehandler: string | null;
  strdatatype: string;
  lprecision: number | null;
  lsize: number | null;
  strdatahandler: string;
  strsysident: string | null;
  bissystem: number;
  bnotfiltered: number;
  binheritperm: number | null;
  binternal: number | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcappfieldInput {
  strguid: string;
  strname?: string | null;
  strappdgguid?: string | null;
  strapprefguid?: string | null;
  strcalcguid?: string | null;
  strdbfieldname?: string | null;
  strreffieldguid?: string | null;
  strupddefault?: string | null;
  breference: number;
  bprimarykey?: number | null;
  strparent?: string | null;
  strfilehandler?: string | null;
  strdatatype: string;
  lprecision?: number | null;
  lsize?: number | null;
  strdatahandler: string;
  strsysident?: string | null;
  bissystem: number;
  bnotfiltered: number;
  binheritperm?: number | null;
  binternal?: number | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappfield = {
  tableName: 'lcappfield',
  columns: ['strguid', 'strname', 'strappdgguid', 'strapprefguid', 'strcalcguid', 'strdbfieldname', 'strreffieldguid', 'strupddefault', 'breference', 'bprimarykey', 'strparent', 'strfilehandler', 'strdatatype', 'lprecision', 'lsize', 'strdatahandler', 'strsysident', 'bissystem', 'bnotfiltered', 'binheritperm', 'binternal', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'breference', 'strdatatype', 'strdatahandler', 'bissystem', 'bnotfiltered'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strapprefguid: { table: 'lcappref', column: 'strguid', $type: null as unknown as Lcappref },
    strcalcguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
    strreffieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
    strparent: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
  },
  $type: null as unknown as Lcappfield,
  $input: null as unknown as LcappfieldInput
} as const;

// Table lcappfieldtitle
export interface Lcappfieldtitle {
  strfieldguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappfieldtitleInput {
  strfieldguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappfieldtitle = {
  tableName: 'lcappfieldtitle',
  columns: ['strfieldguid', 'strlang', 'stritem'],
  requiredForInsert: ['strfieldguid', 'strlang'],
  primaryKey: 'strfieldguid',
  foreignKeys: { strfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield }, },
  $type: null as unknown as Lcappfieldtitle,
  $input: null as unknown as LcappfieldtitleInput
} as const;

// Table lcappfilter
export interface Lcappfilter {
  strguid: string;
  xmlfilter: string | null;
  strrefguid: string | null;
}
export interface LcappfilterInput {
  strguid: string;
  xmlfilter?: string | null;
  strrefguid?: string | null;
}
const lcappfilter = {
  tableName: 'lcappfilter',
  columns: ['strguid', 'xmlfilter', 'strrefguid'],
  requiredForInsert: ['strguid'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcappfilter,
  $input: null as unknown as LcappfilterInput
} as const;

// Table lcappform
export interface Lcappform {
  strguid: string;
  strappguid: string;
  strjson: string;
}
export interface LcappformInput {
  strguid: string;
  strappguid: string;
  strjson: string;
}
const lcappform = {
  tableName: 'lcappform',
  columns: ['strguid', 'strappguid', 'strjson'],
  requiredForInsert: ['strguid', 'strappguid', 'strjson'],
  primaryKey: 'strguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcappform,
  $input: null as unknown as LcappformInput
} as const;

// Table lcappfup
export interface Lcappfup {
  strguid: string;
  strappguid: string;
  strfupname: string | null;
  strfuptype: string | null;
  strfupvm: string | null;
  strsysident: string | null;
  bnavigation: number | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcappfupInput {
  strguid: string;
  strappguid: string;
  strfupname?: string | null;
  strfuptype?: string | null;
  strfupvm?: string | null;
  strsysident?: string | null;
  bnavigation?: number | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappfup = {
  tableName: 'lcappfup',
  columns: ['strguid', 'strappguid', 'strfupname', 'strfuptype', 'strfupvm', 'strsysident', 'bnavigation', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappguid'],
  primaryKey: 'strguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcappfup,
  $input: null as unknown as LcappfupInput
} as const;

// Table lcappfupdg
export interface Lcappfupdg {
  strappdgguid: string;
  strappfupguid: string;
  bismain: number;
  lrellevcnt: number;
}
export interface LcappfupdgInput {
  strappdgguid: string;
  strappfupguid: string;
  bismain: number;
  lrellevcnt: number;
}
const lcappfupdg = {
  tableName: 'lcappfupdg',
  columns: ['strappdgguid', 'strappfupguid', 'bismain', 'lrellevcnt'],
  requiredForInsert: ['strappdgguid', 'strappfupguid', 'bismain', 'lrellevcnt'],
  primaryKey: 'strappfupguid',
  foreignKeys: {
    strappdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strappfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup },
  },
  $type: null as unknown as Lcappfupdg,
  $input: null as unknown as LcappfupdgInput
} as const;

// Table lcappfuptitle
export interface Lcappfuptitle {
  strfupguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappfuptitleInput {
  strfupguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappfuptitle = {
  tableName: 'lcappfuptitle',
  columns: ['strfupguid', 'strlang', 'stritem'],
  requiredForInsert: ['strfupguid', 'strlang'],
  primaryKey: 'strfupguid',
  foreignKeys: { strfupguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup }, },
  $type: null as unknown as Lcappfuptitle,
  $input: null as unknown as LcappfuptitleInput
} as const;

// Table lcappindex
export interface Lcappindex {
  strguid: string;
  strappdgguid: string;
  strname: string;
  bunique: boolean;
  strtype: string | null;
}
export interface LcappindexInput {
  strguid: string;
  strappdgguid: string;
  strname: string;
  bunique: boolean;
  strtype?: string | null;
}
const lcappindex = {
  tableName: 'lcappindex',
  columns: ['strguid', 'strappdgguid', 'strname', 'bunique', 'strtype'],
  requiredForInsert: ['strguid', 'strappdgguid', 'strname', 'bunique'],
  primaryKey: 'strguid',
  foreignKeys: { strappdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg }, },
  $type: null as unknown as Lcappindex,
  $input: null as unknown as LcappindexInput
} as const;

// Table lcappindexcolumn
export interface Lcappindexcolumn {
  strguid: string;
  strappindexguid: string;
  strfieldguid: string;
  bascending: boolean;
}
export interface LcappindexcolumnInput {
  strguid: string;
  strappindexguid: string;
  strfieldguid: string;
  bascending: boolean;
}
const lcappindexcolumn = {
  tableName: 'lcappindexcolumn',
  columns: ['strguid', 'strappindexguid', 'strfieldguid', 'bascending'],
  requiredForInsert: ['strguid', 'strappindexguid', 'strfieldguid', 'bascending'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappindexguid: { table: 'lcappindex', column: 'strguid', $type: null as unknown as Lcappindex },
    strfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
  },
  $type: null as unknown as Lcappindexcolumn,
  $input: null as unknown as LcappindexcolumnInput
} as const;

// Table lcapplink
export interface Lcapplink {
  strguid: string;
  strappguid: string;
  strappfupguid: string | null;
  strtargetguid: string | null;
  strrecord: string | null;
  txtsettings: string | null;
}
export interface LcapplinkInput {
  strguid: string;
  strappguid: string;
  strappfupguid?: string | null;
  strtargetguid?: string | null;
  strrecord?: string | null;
  txtsettings?: string | null;
}
const lcapplink = {
  tableName: 'lcapplink',
  columns: ['strguid', 'strappguid', 'strappfupguid', 'strtargetguid', 'strrecord', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappguid'],
  primaryKey: 'strguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcapplink,
  $input: null as unknown as LcapplinkInput
} as const;

// Table lcappmail
export interface Lcappmail {
  strguid: string;
  strappguid: string;
  strlinkguid: string;
  strformat: string;
  strsubject: string | null;
  strsendertype: string;
  strfrom: string | null;
  lsubjectmode: number | null;
  strdgguid: string | null;
  strfieldguid: string | null;
  strfromfieldguid: string | null;
}
export interface LcappmailInput {
  strguid: string;
  strappguid: string;
  strlinkguid: string;
  strformat: string;
  strsubject?: string | null;
  strsendertype: string;
  strfrom?: string | null;
  lsubjectmode?: number | null;
  strdgguid?: string | null;
  strfieldguid?: string | null;
  strfromfieldguid?: string | null;
}
const lcappmail = {
  tableName: 'lcappmail',
  columns: ['strguid', 'strappguid', 'strlinkguid', 'strformat', 'strsubject', 'strsendertype', 'strfrom', 'lsubjectmode', 'strdgguid', 'strfieldguid', 'strfromfieldguid'],
  requiredForInsert: ['strguid', 'strappguid', 'strlinkguid', 'strformat', 'strsendertype'],
  primaryKey: 'strguid',
  foreignKeys: {
    strdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
    strfromfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
  },
  $type: null as unknown as Lcappmail,
  $input: null as unknown as LcappmailInput
} as const;

// Table lcappmailrcp
export interface Lcappmailrcp {
  strguid: string;
  strtype: string;
  baskuser: number;
  blist: number;
  bfield: number;
  bboss: number;
  bsubstitute: number;
  bdatarangelist: number | null;
  bseparatemail: number | null;
  strdgguid: string | null;
  strfieldguid: string | null;
  stremailfieldmode: string | null;
  strdrdgguid: string | null;
  strdrfieldguid: string | null;
  strdrfilterguid: string | null;
  txtrcplist: string | null;
}
export interface LcappmailrcpInput {
  strguid: string;
  strtype: string;
  baskuser: number;
  blist: number;
  bfield: number;
  bboss: number;
  bsubstitute: number;
  bdatarangelist?: number | null;
  bseparatemail?: number | null;
  strdgguid?: string | null;
  strfieldguid?: string | null;
  stremailfieldmode?: string | null;
  strdrdgguid?: string | null;
  strdrfieldguid?: string | null;
  strdrfilterguid?: string | null;
  txtrcplist?: string | null;
}
const lcappmailrcp = {
  tableName: 'lcappmailrcp',
  columns: ['strguid', 'strtype', 'baskuser', 'blist', 'bfield', 'bboss', 'bsubstitute', 'bdatarangelist', 'bseparatemail', 'strdgguid', 'strfieldguid', 'stremailfieldmode', 'strdrdgguid', 'strdrfieldguid', 'strdrfilterguid', 'txtrcplist'],
  requiredForInsert: ['strguid', 'strtype', 'baskuser', 'blist', 'bfield', 'bboss', 'bsubstitute'],
  primaryKey: 'strguid',
  foreignKeys: {
    strguid: { table: 'lcappmail', column: 'strguid', $type: null as unknown as Lcappmail },
    strdrdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strdrfieldguid: { table: 'lcappfield', column: 'strguid', $type: null as unknown as Lcappfield },
    strdrfilterguid: { table: 'lcappfilter', column: 'strguid', $type: null as unknown as Lcappfilter },
  },
  $type: null as unknown as Lcappmailrcp,
  $input: null as unknown as LcappmailrcpInput
} as const;

// Table lcappmenuitem
export interface Lcappmenuitem {
  strguid: string;
  strappguid: string;
  strpageguid: string;
  strkey: string;
  lposition: number;
  txtsettings: string | null;
}
export interface LcappmenuitemInput {
  strguid: string;
  strappguid: string;
  strpageguid: string;
  strkey: string;
  lposition: number;
  txtsettings?: string | null;
}
const lcappmenuitem = {
  tableName: 'lcappmenuitem',
  columns: ['strguid', 'strappguid', 'strpageguid', 'strkey', 'lposition', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappguid', 'strpageguid', 'strkey', 'lposition'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp },
    strpageguid: { table: 'lcappfup', column: 'strguid', $type: null as unknown as Lcappfup },
  },
  $type: null as unknown as Lcappmenuitem,
  $input: null as unknown as LcappmenuitemInput
} as const;

// Table lcappprops
export interface Lcappprops {
  strappguid: string;
  strname: string;
  txtvalue: string | null;
}
export interface LcapppropsInput {
  strappguid: string;
  strname: string;
  txtvalue?: string | null;
}
const lcappprops = {
  tableName: 'lcappprops',
  columns: ['strappguid', 'strname', 'txtvalue'],
  requiredForInsert: ['strappguid', 'strname'],
  primaryKey: 'strappguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcappprops,
  $input: null as unknown as LcapppropsInput
} as const;

// Table lcappref
export interface Lcappref {
  strguid: string;
  strname: string | null;
  strappguid: string;
  strappdgguid: string;
  strrefappdgguid: string | null;
  lstatus: number;
  strview: string | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LcapprefInput {
  strguid: string;
  strname?: string | null;
  strappguid: string;
  strappdgguid: string;
  strrefappdgguid?: string | null;
  lstatus: number;
  strview?: string | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lcappref = {
  tableName: 'lcappref',
  columns: ['strguid', 'strname', 'strappguid', 'strappdgguid', 'strrefappdgguid', 'lstatus', 'strview', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strappguid', 'strappdgguid', 'lstatus'],
  primaryKey: 'strguid',
  foreignKeys: {
    strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp },
    strappdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
    strrefappdgguid: { table: 'lcappdg', column: 'strguid', $type: null as unknown as Lcappdg },
  },
  $type: null as unknown as Lcappref,
  $input: null as unknown as LcapprefInput
} as const;

// Table lcapprefparam
export interface Lcapprefparam {
  strguid: string;
  strrefguid: string;
  strdatafield: string;
  strtype: string;
  strvalue: string | null;
}
export interface LcapprefparamInput {
  strguid: string;
  strrefguid: string;
  strdatafield: string;
  strtype: string;
  strvalue?: string | null;
}
const lcapprefparam = {
  tableName: 'lcapprefparam',
  columns: ['strguid', 'strrefguid', 'strdatafield', 'strtype', 'strvalue'],
  requiredForInsert: ['strguid', 'strrefguid', 'strdatafield', 'strtype'],
  primaryKey: 'strguid',
  foreignKeys: { strrefguid: { table: 'lcappref', column: 'strguid', $type: null as unknown as Lcappref }, },
  $type: null as unknown as Lcapprefparam,
  $input: null as unknown as LcapprefparamInput
} as const;

// Table lcappreftitle
export interface Lcappreftitle {
  strrefguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LcappreftitleInput {
  strrefguid: string;
  strlang: string;
  stritem?: string | null;
}
const lcappreftitle = {
  tableName: 'lcappreftitle',
  columns: ['strrefguid', 'strlang', 'stritem'],
  requiredForInsert: ['strrefguid', 'strlang'],
  primaryKey: 'strrefguid',
  foreignKeys: { strrefguid: { table: 'lcappref', column: 'strguid', $type: null as unknown as Lcappref }, },
  $type: null as unknown as Lcappreftitle,
  $input: null as unknown as LcappreftitleInput
} as const;

// Table lcappsearchconfig
export interface Lcappsearchconfig {
  strguid: string;
  strappguid: string;
  xmlconfig: string | null;
}
export interface LcappsearchconfigInput {
  strguid: string;
  strappguid: string;
  xmlconfig?: string | null;
}
const lcappsearchconfig = {
  tableName: 'lcappsearchconfig',
  columns: ['strguid', 'strappguid', 'xmlconfig'],
  requiredForInsert: ['strguid', 'strappguid'],
  primaryKey: 'strguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcappsearchconfig,
  $input: null as unknown as LcappsearchconfigInput
} as const;

// Table lcapptempl
export interface Lcapptempl {
  strguid: string;
  strname: string;
  dtchanged: string | null;
  strdesc: string | null;
  strrtclass: string;
  bshow: number;
  strdirectory: string | null;
  lorder: number | null;
}
export interface LcapptemplInput {
  strguid: string;
  strname: string;
  dtchanged?: string | null;
  strdesc?: string | null;
  strrtclass: string;
  bshow: number;
  strdirectory?: string | null;
  lorder?: number | null;
}
const lcapptempl = {
  tableName: 'lcapptempl',
  columns: ['strguid', 'strname', 'dtchanged', 'strdesc', 'strrtclass', 'bshow', 'strdirectory', 'lorder'],
  requiredForInsert: ['strguid', 'strname', 'strrtclass', 'bshow'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcapptempl,
  $input: null as unknown as LcapptemplInput
} as const;

// Table lcapptitle
export interface Lcapptitle {
  strappguid: string;
  strlang: string;
  strtype: string;
  stritem: string | null;
}
export interface LcapptitleInput {
  strappguid: string;
  strlang: string;
  strtype: string;
  stritem?: string | null;
}
const lcapptitle = {
  tableName: 'lcapptitle',
  columns: ['strappguid', 'strlang', 'strtype', 'stritem'],
  requiredForInsert: ['strappguid', 'strlang', 'strtype'],
  primaryKey: 'strappguid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lcapptitle,
  $input: null as unknown as LcapptitleInput
} as const;

// Table lccalrecu
export interface Lccalrecu {
  lid: number;
  dtedit: string | null;
  luserid: number | null;
  strappguid: string | null;
  strdgguid: string | null;
  dtfrom: string | null;
  dtuntil: string | null;
  lduration: number | null;
  strrule: string | null;
  dtextractedfrom: string | null;
  dtextracteduntil: string | null;
}
export interface LccalrecuInput {
  lid: number;
  dtedit?: string | null;
  luserid?: number | null;
  strappguid?: string | null;
  strdgguid?: string | null;
  dtfrom?: string | null;
  dtuntil?: string | null;
  lduration?: number | null;
  strrule?: string | null;
  dtextractedfrom?: string | null;
  dtextracteduntil?: string | null;
}
const lccalrecu = {
  tableName: 'lccalrecu',
  columns: ['lid', 'dtedit', 'luserid', 'strappguid', 'strdgguid', 'dtfrom', 'dtuntil', 'lduration', 'strrule', 'dtextractedfrom', 'dtextracteduntil'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { strappguid: { table: 'lcapp', column: 'strguid', $type: null as unknown as Lcapp }, },
  $type: null as unknown as Lccalrecu,
  $input: null as unknown as LccalrecuInput
} as const;

// Table lccategory
export interface Lccategory {
  strguid: string;
  strname: string;
  strtype: string;
  strsubtype: string;
  lorder: number;
  benabled: boolean | null;
  strlangconsttitle: string | null;
  txtsettings: string | null;
}
export interface LccategoryInput {
  strguid: string;
  strname: string;
  strtype: string;
  strsubtype: string;
  lorder: number;
  benabled?: boolean | null;
  strlangconsttitle?: string | null;
  txtsettings?: string | null;
}
const lccategory = {
  tableName: 'lccategory',
  columns: ['strguid', 'strname', 'strtype', 'strsubtype', 'lorder', 'benabled', 'strlangconsttitle', 'txtsettings'],
  requiredForInsert: ['strguid', 'strname', 'strtype', 'strsubtype', 'lorder'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lccategory,
  $input: null as unknown as LccategoryInput
} as const;

// Table lccategorytitle
export interface Lccategorytitle {
  strcategoryguid: string;
  strlang: string;
  stritem: string | null;
}
export interface LccategorytitleInput {
  strcategoryguid: string;
  strlang: string;
  stritem?: string | null;
}
const lccategorytitle = {
  tableName: 'lccategorytitle',
  columns: ['strcategoryguid', 'strlang', 'stritem'],
  requiredForInsert: ['strcategoryguid', 'strlang'],
  primaryKey: 'strcategoryguid',
  foreignKeys: { strcategoryguid: { table: 'lccategory', column: 'strguid', $type: null as unknown as Lccategory }, },
  $type: null as unknown as Lccategorytitle,
  $input: null as unknown as LccategorytitleInput
} as const;

// Table lcexport
export interface Lcexport {
  lid: number;
  strname: string;
  itype: number;
  istatus: number;
  startdate: string;
}
export interface LcexportInput {
  lid: number;
  strname: string;
  itype: number;
  istatus: number;
  startdate: string;
}
const lcexport = {
  tableName: 'lcexport',
  columns: ['lid', 'strname', 'itype', 'istatus', 'startdate'],
  requiredForInsert: ['lid', 'strname', 'itype', 'istatus', 'startdate'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as Lcexport,
  $input: null as unknown as LcexportInput
} as const;

// Table lcfwconn
export interface Lcfwconn {
  strguid: string;
  strname: string;
  strserverpath: string;
  strdefclientpath: string;
  bsearchenabled: boolean;
  balwaysglobal: boolean;
  strsummarystyle: string | null;
  txtfilefilter: string | null;
  bcheckpermissions: boolean;
}
export interface LcfwconnInput {
  strguid: string;
  strname: string;
  strserverpath: string;
  strdefclientpath: string;
  bsearchenabled: boolean;
  balwaysglobal: boolean;
  strsummarystyle?: string | null;
  txtfilefilter?: string | null;
  bcheckpermissions: boolean;
}
const lcfwconn = {
  tableName: 'lcfwconn',
  columns: ['strguid', 'strname', 'strserverpath', 'strdefclientpath', 'bsearchenabled', 'balwaysglobal', 'strsummarystyle', 'txtfilefilter', 'bcheckpermissions'],
  requiredForInsert: ['strguid', 'strname', 'strserverpath', 'strdefclientpath', 'bsearchenabled', 'balwaysglobal', 'bcheckpermissions'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcfwconn,
  $input: null as unknown as LcfwconnInput
} as const;

// Table lclinkedelement
export interface Lclinkedelement {
  strhookguid: string;
  strtype: string;
  strrole: string;
  strappguid: string;
  strguid: string;
  strlinkguid: string;
}
export interface LclinkedelementInput {
  strhookguid: string;
  strtype: string;
  strrole: string;
  strappguid: string;
  strguid: string;
  strlinkguid: string;
}
const lclinkedelement = {
  tableName: 'lclinkedelement',
  columns: ['strhookguid', 'strtype', 'strrole', 'strappguid', 'strguid', 'strlinkguid'],
  requiredForInsert: ['strhookguid', 'strtype', 'strrole', 'strappguid', 'strguid', 'strlinkguid'],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Lclinkedelement,
  $input: null as unknown as LclinkedelementInput
} as const;

// Table lclinkedrecords
export interface Lclinkedrecords {
  l_id: number;
  dt_insert: string;
  l_userid_insert: number;
  dt_last_edit: string;
  l_userid_last_edit: number;
  str_source_app_guid: string;
  str_source_dg_guid: string;
  str_source_rec_pk: string;
  str_target_app_guid: string;
  str_target_dg_guid: string;
  str_target_rec_pk: string;
  str_plugin_guid: string;
  b_active: boolean;
}
export interface LclinkedrecordsInput {
  l_id: number;
  dt_insert: string;
  l_userid_insert: number;
  dt_last_edit: string;
  l_userid_last_edit: number;
  str_source_app_guid: string;
  str_source_dg_guid: string;
  str_source_rec_pk: string;
  str_target_app_guid: string;
  str_target_dg_guid: string;
  str_target_rec_pk: string;
  str_plugin_guid: string;
  b_active: boolean;
}
const lclinkedrecords = {
  tableName: 'lclinkedrecords',
  columns: ['l_id', 'dt_insert', 'l_userid_insert', 'dt_last_edit', 'l_userid_last_edit', 'str_source_app_guid', 'str_source_dg_guid', 'str_source_rec_pk', 'str_target_app_guid', 'str_target_dg_guid', 'str_target_rec_pk', 'str_plugin_guid', 'b_active'],
  requiredForInsert: ['l_id', 'dt_insert', 'l_userid_insert', 'dt_last_edit', 'l_userid_last_edit', 'str_source_app_guid', 'str_source_dg_guid', 'str_source_rec_pk', 'str_target_app_guid', 'str_target_dg_guid', 'str_target_rec_pk', 'str_plugin_guid', 'b_active'],
  primaryKey: 'l_id',
  foreignKeys: {},
  $type: null as unknown as Lclinkedrecords,
  $input: null as unknown as LclinkedrecordsInput
} as const;

// Table lclinkedrecordspk
export interface Lclinkedrecordspk {
  l_id: number;
  l_fkid: number;
  dt_insert: string;
  l_userid_insert: number;
  dt_last_edit: string;
  l_userid_last_edit: number;
  str_type: string;
  str_name: string;
  b_value_boolean: boolean | null;
  dt_value_datetime: string | null;
  l_value_long: number | null;
  l_value_integer: number | null;
  flt_value_double: number | null;
  str_value_string: string | null;
}
export interface LclinkedrecordspkInput {
  l_id: number;
  l_fkid: number;
  dt_insert: string;
  l_userid_insert: number;
  dt_last_edit: string;
  l_userid_last_edit: number;
  str_type: string;
  str_name: string;
  b_value_boolean?: boolean | null;
  dt_value_datetime?: string | null;
  l_value_long?: number | null;
  l_value_integer?: number | null;
  flt_value_double?: number | null;
  str_value_string?: string | null;
}
const lclinkedrecordspk = {
  tableName: 'lclinkedrecordspk',
  columns: ['l_id', 'l_fkid', 'dt_insert', 'l_userid_insert', 'dt_last_edit', 'l_userid_last_edit', 'str_type', 'str_name', 'b_value_boolean', 'dt_value_datetime', 'l_value_long', 'l_value_integer', 'flt_value_double', 'str_value_string'],
  requiredForInsert: ['l_id', 'l_fkid', 'dt_insert', 'l_userid_insert', 'dt_last_edit', 'l_userid_last_edit', 'str_type', 'str_name'],
  primaryKey: 'l_id',
  foreignKeys: { l_fkid: { table: 'lclinkedrecords', column: 'l_id', $type: null as unknown as Lclinkedrecords }, },
  $type: null as unknown as Lclinkedrecordspk,
  $input: null as unknown as LclinkedrecordspkInput
} as const;

// Table lcmainportal
export interface Lcmainportal {
  guidportal: string;
  strname: string;
  bdeleteable: boolean;
}
export interface LcmainportalInput {
  guidportal: string;
  strname: string;
  bdeleteable: boolean;
}
const lcmainportal = {
  tableName: 'lcmainportal',
  columns: ['guidportal', 'strname', 'bdeleteable'],
  requiredForInsert: ['guidportal', 'strname', 'bdeleteable'],
  primaryKey: 'guidportal',
  foreignKeys: {},
  $type: null as unknown as Lcmainportal,
  $input: null as unknown as LcmainportalInput
} as const;

// Table lcmapapp
export interface Lcmapapp {
  strappguid: string;
  strtargetguid: string;
}
export interface LcmapappInput {
  strappguid: string;
  strtargetguid: string;
}
const lcmapapp = {
  tableName: 'lcmapapp',
  columns: ['strappguid', 'strtargetguid'],
  requiredForInsert: ['strappguid', 'strtargetguid'],
  primaryKey: 'strappguid',
  foreignKeys: {},
  $type: null as unknown as Lcmapapp,
  $input: null as unknown as LcmapappInput
} as const;

// Table lcmenu
export interface Lcmenu {
  strguid: string;
  strparentguid: string | null;
  lorder: number;
  strtype: string;
}
export interface LcmenuInput {
  strguid: string;
  strparentguid?: string | null;
  lorder: number;
  strtype: string;
}
const lcmenu = {
  tableName: 'lcmenu',
  columns: ['strguid', 'strparentguid', 'lorder', 'strtype'],
  requiredForInsert: ['strguid', 'lorder', 'strtype'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcmenu,
  $input: null as unknown as LcmenuInput
} as const;

// Table lcmenucloud
export interface Lcmenucloud {
  struserguid: string;
  strmenuguid: string;
  lclickcount: number;
}
export interface LcmenucloudInput {
  struserguid: string;
  strmenuguid: string;
  lclickcount: number;
}
const lcmenucloud = {
  tableName: 'lcmenucloud',
  columns: ['struserguid', 'strmenuguid', 'lclickcount'],
  requiredForInsert: ['struserguid', 'strmenuguid', 'lclickcount'],
  primaryKey: 'strmenuguid',
  foreignKeys: {},
  $type: null as unknown as Lcmenucloud,
  $input: null as unknown as LcmenucloudInput
} as const;

// Table lcmenuprop
export interface Lcmenuprop {
  strmenuguid: string;
  strname: string;
  strvalue: string | null;
}
export interface LcmenupropInput {
  strmenuguid: string;
  strname: string;
  strvalue?: string | null;
}
const lcmenuprop = {
  tableName: 'lcmenuprop',
  columns: ['strmenuguid', 'strname', 'strvalue'],
  requiredForInsert: ['strmenuguid', 'strname'],
  primaryKey: 'strmenuguid',
  foreignKeys: { strmenuguid: { table: 'lcmenu', column: 'strguid', $type: null as unknown as Lcmenu }, },
  $type: null as unknown as Lcmenuprop,
  $input: null as unknown as LcmenupropInput
} as const;

// Table lcmenutitle
export interface Lcmenutitle {
  strmenuguid: string;
  strlang: string;
  stritem: string;
}
export interface LcmenutitleInput {
  strmenuguid: string;
  strlang: string;
  stritem: string;
}
const lcmenutitle = {
  tableName: 'lcmenutitle',
  columns: ['strmenuguid', 'strlang', 'stritem'],
  requiredForInsert: ['strmenuguid', 'strlang', 'stritem'],
  primaryKey: 'strmenuguid',
  foreignKeys: { strmenuguid: { table: 'lcmenu', column: 'strguid', $type: null as unknown as Lcmenu }, },
  $type: null as unknown as Lcmenutitle,
  $input: null as unknown as LcmenutitleInput
} as const;

// Table lcmessages
export interface Lcmessages {
  guidmessage: string;
  guidsender: string | null;
  strappguid: string | null;
  strtargetguid: string | null;
  strrecid: string | null;
  dtcreated: string;
  dtexpire: string | null;
  strsubject: string | null;
  txtbody: string | null;
}
export interface LcmessagesInput {
  guidmessage: string;
  guidsender?: string | null;
  strappguid?: string | null;
  strtargetguid?: string | null;
  strrecid?: string | null;
  dtcreated: string;
  dtexpire?: string | null;
  strsubject?: string | null;
  txtbody?: string | null;
}
const lcmessages = {
  tableName: 'lcmessages',
  columns: ['guidmessage', 'guidsender', 'strappguid', 'strtargetguid', 'strrecid', 'dtcreated', 'dtexpire', 'strsubject', 'txtbody'],
  requiredForInsert: ['guidmessage', 'dtcreated'],
  primaryKey: 'guidmessage',
  foreignKeys: {},
  $type: null as unknown as Lcmessages,
  $input: null as unknown as LcmessagesInput
} as const;

// Table lcpermclass
export interface Lcpermclass {
  lid: number;
  strclassname: string;
}
export interface LcpermclassInput {
  lid: number;
  strclassname: string;
}
const lcpermclass = {
  tableName: 'lcpermclass',
  columns: ['lid', 'strclassname'],
  requiredForInsert: ['lid', 'strclassname'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as Lcpermclass,
  $input: null as unknown as LcpermclassInput
} as const;

// Table lcpolicy
export interface Lcpolicy {
  lobjectid: number;
  lpermclassid: number;
  strname: string;
  stractions: string | null;
}
export interface LcpolicyInput {
  lobjectid: number;
  lpermclassid: number;
  strname: string;
  stractions?: string | null;
}
const lcpolicy = {
  tableName: 'lcpolicy',
  columns: ['lobjectid', 'lpermclassid', 'strname', 'stractions'],
  requiredForInsert: ['lobjectid', 'lpermclassid', 'strname'],
  primaryKey: 'lobjectid',
  foreignKeys: {
    lobjectid: { table: 'dsobject', column: 'lid', $type: null as unknown as Dsobject },
    lpermclassid: { table: 'lcpermclass', column: 'lid', $type: null as unknown as Lcpermclass },
  },
  $type: null as unknown as Lcpolicy,
  $input: null as unknown as LcpolicyInput
} as const;

// Table lcprofile
export interface Lcprofile {
  guiduser: string;
  strname: string;
  inttypeid: number;
  intversion: number;
  txtvalue: string | null;
}
export interface LcprofileInput {
  guiduser: string;
  strname: string;
  inttypeid: number;
  intversion: number;
  txtvalue?: string | null;
}
const lcprofile = {
  tableName: 'lcprofile',
  columns: ['guiduser', 'strname', 'inttypeid', 'intversion', 'txtvalue'],
  requiredForInsert: ['guiduser', 'strname', 'inttypeid', 'intversion'],
  primaryKey: 'guiduser',
  foreignKeys: {},
  $type: null as unknown as Lcprofile,
  $input: null as unknown as LcprofileInput
} as const;

// Table lcprtclass
export interface Lcprtclass {
  guidportletclass: string;
  strimplclass: string | null;
}
export interface LcprtclassInput {
  guidportletclass: string;
  strimplclass?: string | null;
}
const lcprtclass = {
  tableName: 'lcprtclass',
  columns: ['guidportletclass', 'strimplclass'],
  requiredForInsert: ['guidportletclass'],
  primaryKey: 'guidportletclass',
  foreignKeys: {},
  $type: null as unknown as Lcprtclass,
  $input: null as unknown as LcprtclassInput
} as const;

// Table lcprtgrid
export interface Lcprtgrid {
  guidref: string;
  guiditem: string;
  lorder: number;
  strjson: string;
}
export interface LcprtgridInput {
  guidref: string;
  guiditem: string;
  lorder: number;
  strjson: string;
}
const lcprtgrid = {
  tableName: 'lcprtgrid',
  columns: ['guidref', 'guiditem', 'lorder', 'strjson'],
  requiredForInsert: ['guidref', 'guiditem', 'lorder', 'strjson'],
  primaryKey: 'guidref',
  foreignKeys: {},
  $type: null as unknown as Lcprtgrid,
  $input: null as unknown as LcprtgridInput
} as const;

// Table lcprtgridportlet
export interface Lcprtgridportlet {
  guidref: string;
  guiditem: string;
  guiduser: string;
  guidportlet: string;
  lorder: number;
}
export interface LcprtgridportletInput {
  guidref: string;
  guiditem: string;
  guiduser: string;
  guidportlet: string;
  lorder: number;
}
const lcprtgridportlet = {
  tableName: 'lcprtgridportlet',
  columns: ['guidref', 'guiditem', 'guiduser', 'guidportlet', 'lorder'],
  requiredForInsert: ['guidref', 'guiditem', 'guiduser', 'guidportlet', 'lorder'],
  primaryKey: 'guidref',
  foreignKeys: { guidportlet: { table: 'lcprtinstance', column: 'guidportlet', $type: null as unknown as Lcprtinstance }, },
  $type: null as unknown as Lcprtgridportlet,
  $input: null as unknown as LcprtgridportletInput
} as const;

// Table lcprtinstance
export interface Lcprtinstance {
  guidportlet: string;
  guidportletclass: string;
  guidapp: string | null;
  guidpage: string | null;
  strconstanttitle: string | null;
}
export interface LcprtinstanceInput {
  guidportlet: string;
  guidportletclass: string;
  guidapp?: string | null;
  guidpage?: string | null;
  strconstanttitle?: string | null;
}
const lcprtinstance = {
  tableName: 'lcprtinstance',
  columns: ['guidportlet', 'guidportletclass', 'guidapp', 'guidpage', 'strconstanttitle'],
  requiredForInsert: ['guidportlet', 'guidportletclass'],
  primaryKey: 'guidportlet',
  foreignKeys: { guidportletclass: { table: 'lcprtclass', column: 'guidportletclass', $type: null as unknown as Lcprtclass }, },
  $type: null as unknown as Lcprtinstance,
  $input: null as unknown as LcprtinstanceInput
} as const;

// Table lcprtmetadata
export interface Lcprtmetadata {
  guidportlet: string;
  strlang: string;
  strtitle: string;
  strdescription: string | null;
}
export interface LcprtmetadataInput {
  guidportlet: string;
  strlang: string;
  strtitle: string;
  strdescription?: string | null;
}
const lcprtmetadata = {
  tableName: 'lcprtmetadata',
  columns: ['guidportlet', 'strlang', 'strtitle', 'strdescription'],
  requiredForInsert: ['guidportlet', 'strlang', 'strtitle'],
  primaryKey: 'guidportlet',
  foreignKeys: { guidportlet: { table: 'lcprtinstance', column: 'guidportlet', $type: null as unknown as Lcprtinstance }, },
  $type: null as unknown as Lcprtmetadata,
  $input: null as unknown as LcprtmetadataInput
} as const;

// Table lcprtprop
export interface Lcprtprop {
  guidportlet: string;
  guiduser: string;
  strname: string;
  inttypeid: number;
  intversion: number;
  txtvalue: string | null;
}
export interface LcprtpropInput {
  guidportlet: string;
  guiduser: string;
  strname: string;
  inttypeid: number;
  intversion: number;
  txtvalue?: string | null;
}
const lcprtprop = {
  tableName: 'lcprtprop',
  columns: ['guidportlet', 'guiduser', 'strname', 'inttypeid', 'intversion', 'txtvalue'],
  requiredForInsert: ['guidportlet', 'guiduser', 'strname', 'inttypeid', 'intversion'],
  primaryKey: 'guidportlet',
  foreignKeys: { guidportlet: { table: 'lcprtinstance', column: 'guidportlet', $type: null as unknown as Lcprtinstance }, },
  $type: null as unknown as Lcprtprop,
  $input: null as unknown as LcprtpropInput
} as const;

// Table lcprtref
export interface Lcprtref {
  guidref: string;
  guidportlet: string;
}
export interface LcprtrefInput {
  guidref: string;
  guidportlet: string;
}
const lcprtref = {
  tableName: 'lcprtref',
  columns: ['guidref', 'guidportlet'],
  requiredForInsert: ['guidref', 'guidportlet'],
  primaryKey: 'guidref',
  foreignKeys: { guidportlet: { table: 'lcprtinstance', column: 'guidportlet', $type: null as unknown as Lcprtinstance }, },
  $type: null as unknown as Lcprtref,
  $input: null as unknown as LcprtrefInput
} as const;

// Table lcprtset
export interface Lcprtset {
  guidportlet: string;
  guidportal: string;
  guiduser: string;
  intmandatory: number;
}
export interface LcprtsetInput {
  guidportlet: string;
  guidportal: string;
  guiduser: string;
  intmandatory: number;
}
const lcprtset = {
  tableName: 'lcprtset',
  columns: ['guidportlet', 'guidportal', 'guiduser', 'intmandatory'],
  requiredForInsert: ['guidportlet', 'guidportal', 'guiduser', 'intmandatory'],
  primaryKey: 'guidportlet',
  foreignKeys: { guidportlet: { table: 'lcprtinstance', column: 'guidportlet', $type: null as unknown as Lcprtinstance }, },
  $type: null as unknown as Lcprtset,
  $input: null as unknown as LcprtsetInput
} as const;

// Table lcrdf
export interface Lcrdf {
  lid: number;
  strsubject: string;
  lpredicate: number;
  strobject: string;
}
export interface LcrdfInput {
  lid: number;
  strsubject: string;
  lpredicate: number;
  strobject: string;
}
const lcrdf = {
  tableName: 'lcrdf',
  columns: ['lid', 'strsubject', 'lpredicate', 'strobject'],
  requiredForInsert: ['lid', 'strsubject', 'lpredicate', 'strobject'],
  primaryKey: 'lid',
  foreignKeys: { lpredicate: { table: 'lcrdfpredicate', column: 'lid', $type: null as unknown as Lcrdfpredicate }, },
  $type: null as unknown as Lcrdf,
  $input: null as unknown as LcrdfInput
} as const;

// Table lcrdfpredicate
export interface Lcrdfpredicate {
  lid: number;
  strpredicate: string;
}
export interface LcrdfpredicateInput {
  lid: number;
  strpredicate: string;
}
const lcrdfpredicate = {
  tableName: 'lcrdfpredicate',
  columns: ['lid', 'strpredicate'],
  requiredForInsert: ['lid', 'strpredicate'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as Lcrdfpredicate,
  $input: null as unknown as LcrdfpredicateInput
} as const;

// Table lcrdfuser
export interface Lcrdfuser {
  lrdfid: number;
  luserid: number;
}
export interface LcrdfuserInput {
  lrdfid: number;
  luserid: number;
}
const lcrdfuser = {
  tableName: 'lcrdfuser',
  columns: ['lrdfid', 'luserid'],
  requiredForInsert: ['lrdfid', 'luserid'],
  primaryKey: 'lrdfid',
  foreignKeys: {
    lrdfid: { table: 'lcrdf', column: 'lid', $type: null as unknown as Lcrdf },
    luserid: { table: 'dsuser', column: 'lid', $type: null as unknown as Dsuser },
  },
  $type: null as unknown as Lcrdfuser,
  $input: null as unknown as LcrdfuserInput
} as const;

// Table lcrecipients
export interface Lcrecipients {
  guidmessage: string;
  guidrecipient: string;
  intvisited: number;
  intdeleted: number;
}
export interface LcrecipientsInput {
  guidmessage: string;
  guidrecipient: string;
  intvisited: number;
  intdeleted: number;
}
const lcrecipients = {
  tableName: 'lcrecipients',
  columns: ['guidmessage', 'guidrecipient', 'intvisited', 'intdeleted'],
  requiredForInsert: ['guidmessage', 'guidrecipient', 'intvisited', 'intdeleted'],
  primaryKey: 'guidmessage',
  foreignKeys: { guidmessage: { table: 'lcmessages', column: 'guidmessage', $type: null as unknown as Lcmessages }, },
  $type: null as unknown as Lcrecipients,
  $input: null as unknown as LcrecipientsInput
} as const;

// Table lcschedhistory
export interface Lcschedhistory {
  strguid: string;
  strjobguid: string;
  dtstart: string | null;
  dtend: string | null;
  strtimezone: string | null;
  lstatus: number | null;
}
export interface LcschedhistoryInput {
  strguid: string;
  strjobguid: string;
  dtstart?: string | null;
  dtend?: string | null;
  strtimezone?: string | null;
  lstatus?: number | null;
}
const lcschedhistory = {
  tableName: 'lcschedhistory',
  columns: ['strguid', 'strjobguid', 'dtstart', 'dtend', 'strtimezone', 'lstatus'],
  requiredForInsert: ['strguid', 'strjobguid'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcschedhistory,
  $input: null as unknown as LcschedhistoryInput
} as const;

// Table lcschedstatistics
export interface Lcschedstatistics {
  strguid: string;
  tslastrun: string | null;
  tslastgoodrun: string | null;
  strtimezone: string | null;
}
export interface LcschedstatisticsInput {
  strguid: string;
  tslastrun?: string | null;
  tslastgoodrun?: string | null;
  strtimezone?: string | null;
}
const lcschedstatistics = {
  tableName: 'lcschedstatistics',
  columns: ['strguid', 'tslastrun', 'tslastgoodrun', 'strtimezone'],
  requiredForInsert: ['strguid'],
  primaryKey: 'strguid',
  foreignKeys: {},
  $type: null as unknown as Lcschedstatistics,
  $input: null as unknown as LcschedstatisticsInput
} as const;

// Table lcsearchalternative
export interface Lcsearchalternative {
  strquery: string;
  stralternative: string;
  lcount: number;
}
export interface LcsearchalternativeInput {
  strquery: string;
  stralternative: string;
  lcount: number;
}
const lcsearchalternative = {
  tableName: 'lcsearchalternative',
  columns: ['strquery', 'stralternative', 'lcount'],
  requiredForInsert: ['strquery', 'stralternative', 'lcount'],
  primaryKey: 'strquery',
  foreignKeys: {},
  $type: null as unknown as Lcsearchalternative,
  $input: null as unknown as LcsearchalternativeInput
} as const;

// Table lctaggingposts
export interface Lctaggingposts {
  strid: string;
  fk_guid: string;
  str_profileid: string;
  str_appguid: string;
  str_dgguid: string;
  str_recid: string;
  b_isshow: boolean;
  b_autoinsert: boolean;
  dt_insert: string;
}
export interface LctaggingpostsInput {
  strid: string;
  fk_guid: string;
  str_profileid: string;
  str_appguid: string;
  str_dgguid: string;
  str_recid: string;
  b_isshow: boolean;
  b_autoinsert: boolean;
  dt_insert: string;
}
const lctaggingposts = {
  tableName: 'lctaggingposts',
  columns: ['strid', 'fk_guid', 'str_profileid', 'str_appguid', 'str_dgguid', 'str_recid', 'b_isshow', 'b_autoinsert', 'dt_insert'],
  requiredForInsert: ['strid', 'fk_guid', 'str_profileid', 'str_appguid', 'str_dgguid', 'str_recid', 'b_isshow', 'b_autoinsert', 'dt_insert'],
  primaryKey: 'strid',
  foreignKeys: { fk_guid: { table: 'lctaggingtags', column: 'strid', $type: null as unknown as Lctaggingtags }, },
  $type: null as unknown as Lctaggingposts,
  $input: null as unknown as LctaggingpostsInput
} as const;

// Table lctaggingtags
export interface Lctaggingtags {
  strid: string;
  str_tagname: string;
  b_ishashtag: boolean;
  l_countposts: number;
}
export interface LctaggingtagsInput {
  strid: string;
  str_tagname: string;
  b_ishashtag: boolean;
  l_countposts: number;
}
const lctaggingtags = {
  tableName: 'lctaggingtags',
  columns: ['strid', 'str_tagname', 'b_ishashtag', 'l_countposts'],
  requiredForInsert: ['strid', 'str_tagname', 'b_ishashtag', 'l_countposts'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Lctaggingtags,
  $input: null as unknown as LctaggingtagsInput
} as const;

// Table per_kat_art
export interface PerKatArt {
  str_artderbeschaeftigung: string | null;
  dtinsert: string | null;
  l_standardarbeitszeitinsek: number | null;
  l_sekunden: number | null;
  lid: number;
  luseridinsert: number | null;
  l_stunden: number | null;
  l_minuten: number | null;
  l_standardwochenarbeitszeiti: number | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface PerKatArtInput {
  str_artderbeschaeftigung?: string | null;
  dtinsert?: string | null;
  l_standardarbeitszeitinsek?: number | null;
  l_sekunden?: number | null;
  lid: number;
  luseridinsert?: number | null;
  l_stunden?: number | null;
  l_minuten?: number | null;
  l_standardwochenarbeitszeiti?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const per_kat_art = {
  tableName: 'per_kat_art',
  columns: ['str_artderbeschaeftigung', 'dtinsert', 'l_standardarbeitszeitinsek', 'l_sekunden', 'lid', 'luseridinsert', 'l_stunden', 'l_minuten', 'l_standardwochenarbeitszeiti', 'luserid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as PerKatArt,
  $input: null as unknown as PerKatArtInput
} as const;

// Table per_kat_ausstattung
export interface PerKatAusstattung {
  b_standardausstattung: boolean | null;
  dtinsert: string | null;
  strid: string;
  luserid: number | null;
  txt_beschreibung: string | null;
  luseridinsert: number | null;
  ref_ausstatung_kat: string | null;
  dtedit: string | null;
  str_ausstattung: string | null;
}
export interface PerKatAusstattungInput {
  b_standardausstattung?: boolean | null;
  dtinsert?: string | null;
  strid: string;
  luserid?: number | null;
  txt_beschreibung?: string | null;
  luseridinsert?: number | null;
  ref_ausstatung_kat?: string | null;
  dtedit?: string | null;
  str_ausstattung?: string | null;
}
const per_kat_ausstattung = {
  tableName: 'per_kat_ausstattung',
  columns: ['b_standardausstattung', 'dtinsert', 'strid', 'luserid', 'txt_beschreibung', 'luseridinsert', 'ref_ausstatung_kat', 'dtedit', 'str_ausstattung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_ausstatung_kat: { table: 'per_kat_ausstattung_kat', column: 'strid', $type: null as unknown as PerKatAusstattungKat }, },
  $type: null as unknown as PerKatAusstattung,
  $input: null as unknown as PerKatAusstattungInput
} as const;

// Table per_kat_ausstattung_kat
export interface PerKatAusstattungKat {
  strid: string;
  dtinsert: string | null;
  str_ausstattungkategorie: string | null;
  luseridinsert: number | null;
  txt_beschreibung: string | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface PerKatAusstattungKatInput {
  strid: string;
  dtinsert?: string | null;
  str_ausstattungkategorie?: string | null;
  luseridinsert?: number | null;
  txt_beschreibung?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const per_kat_ausstattung_kat = {
  tableName: 'per_kat_ausstattung_kat',
  columns: ['strid', 'dtinsert', 'str_ausstattungkategorie', 'luseridinsert', 'txt_beschreibung', 'luserid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerKatAusstattungKat,
  $input: null as unknown as PerKatAusstattungKatInput
} as const;

// Table per_kat_buerol_ebene1
export interface PerKatBuerolEbene1 {
  luseridinsert: number | null;
  id: string | null;
  ref_ebene1: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtinsert: string | null;
  lid: number;
  dtedit: string | null;
}
export interface PerKatBuerolEbene1Input {
  luseridinsert?: number | null;
  id?: string | null;
  ref_ebene1?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  lid: number;
  dtedit?: string | null;
}
const per_kat_buerol_ebene1 = {
  tableName: 'per_kat_buerol_ebene1',
  columns: ['luseridinsert', 'id', 'ref_ebene1', 'fkstrid', 'luserid', 'dtinsert', 'lid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_ebene1: { table: 'per_t_orga1', column: 'strid', $type: null as unknown as PerTOrga1 },
    fkstrid: { table: 'per_kat_bueroleitung', column: 'strid', $type: null as unknown as PerKatBueroleitung },
  },
  $type: null as unknown as PerKatBuerolEbene1,
  $input: null as unknown as PerKatBuerolEbene1Input
} as const;

// Table per_kat_bueroleitung
export interface PerKatBueroleitung {
  txt_benutzer: string | null;
  ref_orga: string | null;
  luserid: number | null;
  dtinsert: string | null;
  str_bueroleitung: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  txt_abteilungen: string | null;
  strid: string;
}
export interface PerKatBueroleitungInput {
  txt_benutzer?: string | null;
  ref_orga?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  str_bueroleitung?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  txt_abteilungen?: string | null;
  strid: string;
}
const per_kat_bueroleitung = {
  tableName: 'per_kat_bueroleitung',
  columns: ['txt_benutzer', 'ref_orga', 'luserid', 'dtinsert', 'str_bueroleitung', 'luseridinsert', 'dtedit', 'txt_abteilungen', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_orga: { table: 'per_t_orga0', column: 'strid', $type: null as unknown as PerTOrga0 }, },
  $type: null as unknown as PerKatBueroleitung,
  $input: null as unknown as PerKatBueroleitungInput
} as const;

// Table per_kat_funktion
export interface PerKatFunktion {
  str_funktion: string | null;
  dtinsert: string | null;
  ref_organisation: string | null;
  luserid: number | null;
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  b_personalverwaltung: boolean | null;
}
export interface PerKatFunktionInput {
  str_funktion?: string | null;
  dtinsert?: string | null;
  ref_organisation?: string | null;
  luserid?: number | null;
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  b_personalverwaltung?: boolean | null;
}
const per_kat_funktion = {
  tableName: 'per_kat_funktion',
  columns: ['str_funktion', 'dtinsert', 'ref_organisation', 'luserid', 'strid', 'luseridinsert', 'dtedit', 'b_personalverwaltung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_organisation: { table: 'per_t_orga0', column: 'strid', $type: null as unknown as PerTOrga0 }, },
  $type: null as unknown as PerKatFunktion,
  $input: null as unknown as PerKatFunktionInput
} as const;

// Table per_kat_standorte
export interface PerKatStandorte {
  str_strasse: string | null;
  luseridinsert: number | null;
  str_ort: string | null;
  str_plz: string | null;
  dtedit: string | null;
  str_standort: string | null;
  strid: string;
  luserid: number | null;
  dtinsert: string | null;
}
export interface PerKatStandorteInput {
  str_strasse?: string | null;
  luseridinsert?: number | null;
  str_ort?: string | null;
  str_plz?: string | null;
  dtedit?: string | null;
  str_standort?: string | null;
  strid: string;
  luserid?: number | null;
  dtinsert?: string | null;
}
const per_kat_standorte = {
  tableName: 'per_kat_standorte',
  columns: ['str_strasse', 'luseridinsert', 'str_ort', 'str_plz', 'dtedit', 'str_standort', 'strid', 'luserid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerKatStandorte,
  $input: null as unknown as PerKatStandorteInput
} as const;

// Table per_kat_zusatzfunktion
export interface PerKatZusatzfunktion {
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  str_zusatzfunktion: string | null;
  b_beteiligungsfunktion: boolean | null;
  dtinsert: string | null;
}
export interface PerKatZusatzfunktionInput {
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_zusatzfunktion?: string | null;
  b_beteiligungsfunktion?: boolean | null;
  dtinsert?: string | null;
}
const per_kat_zusatzfunktion = {
  tableName: 'per_kat_zusatzfunktion',
  columns: ['strid', 'luseridinsert', 'dtedit', 'luserid', 'str_zusatzfunktion', 'b_beteiligungsfunktion', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerKatZusatzfunktion,
  $input: null as unknown as PerKatZusatzfunktionInput
} as const;

// Table per_t_import_az
export interface PerTImportAz {
  luseridinsert: number | null;
  str_nachname: string | null;
  luserid: number | null;
  dtedit: string | null;
  flt_wochenarbeitszeit: number | null;
  dtinsert: string | null;
  dt_eintrittsdatum: string | null;
  strid: string;
  str_vorname: string | null;
  str_magruppe: string | null;
  str_personalnummer: string | null;
  str_personalnummerfk: string | null;
  str_kennzeichenteilzeitkraft: string | null;
}
export interface PerTImportAzInput {
  luseridinsert?: number | null;
  str_nachname?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  flt_wochenarbeitszeit?: number | null;
  dtinsert?: string | null;
  dt_eintrittsdatum?: string | null;
  strid: string;
  str_vorname?: string | null;
  str_magruppe?: string | null;
  str_personalnummer?: string | null;
  str_personalnummerfk?: string | null;
  str_kennzeichenteilzeitkraft?: string | null;
}
const per_t_import_az = {
  tableName: 'per_t_import_az',
  columns: ['luseridinsert', 'str_nachname', 'luserid', 'dtedit', 'flt_wochenarbeitszeit', 'dtinsert', 'dt_eintrittsdatum', 'strid', 'str_vorname', 'str_magruppe', 'str_personalnummer', 'str_personalnummerfk', 'str_kennzeichenteilzeitkraft'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerTImportAz,
  $input: null as unknown as PerTImportAzInput
} as const;

// Table per_t_orga0
export interface PerTOrga0 {
  luserid: number | null;
  strid: string;
  dtinsert: string | null;
  dtedit: string | null;
  str_organisationsbaum: string | null;
  luseridinsert: number | null;
  str_container: string | null;
}
export interface PerTOrga0Input {
  luserid?: number | null;
  strid: string;
  dtinsert?: string | null;
  dtedit?: string | null;
  str_organisationsbaum?: string | null;
  luseridinsert?: number | null;
  str_container?: string | null;
}
const per_t_orga0 = {
  tableName: 'per_t_orga0',
  columns: ['luserid', 'strid', 'dtinsert', 'dtedit', 'str_organisationsbaum', 'luseridinsert', 'str_container'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerTOrga0,
  $input: null as unknown as PerTOrga0Input
} as const;

// Table per_t_orga1
export interface PerTOrga1 {
  luserid: number | null;
  str_sortierung: string | null;
  luseridinsert: number | null;
  str_ebene1: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  fkstrid: string | null;
  strid: string;
}
export interface PerTOrga1Input {
  luserid?: number | null;
  str_sortierung?: string | null;
  luseridinsert?: number | null;
  str_ebene1?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
  strid: string;
}
const per_t_orga1 = {
  tableName: 'per_t_orga1',
  columns: ['luserid', 'str_sortierung', 'luseridinsert', 'str_ebene1', 'dtedit', 'dtinsert', 'fkstrid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_orga0', column: 'strid', $type: null as unknown as PerTOrga0 }, },
  $type: null as unknown as PerTOrga1,
  $input: null as unknown as PerTOrga1Input
} as const;

// Table per_t_orga2
export interface PerTOrga2 {
  luseridinsert: number | null;
  str_ebene2: string | null;
  dtinsert: string | null;
  str_sortierung: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  strid: string;
}
export interface PerTOrga2Input {
  luseridinsert?: number | null;
  str_ebene2?: string | null;
  dtinsert?: string | null;
  str_sortierung?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
}
const per_t_orga2 = {
  tableName: 'per_t_orga2',
  columns: ['luseridinsert', 'str_ebene2', 'dtinsert', 'str_sortierung', 'fkstrid', 'luserid', 'dtedit', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_orga1', column: 'strid', $type: null as unknown as PerTOrga1 }, },
  $type: null as unknown as PerTOrga2,
  $input: null as unknown as PerTOrga2Input
} as const;

// Table per_t_orga3
export interface PerTOrga3 {
  strid: string;
  str_ebene3: string | null;
  str_sortierung: string | null;
  dtedit: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  luserid: number | null;
}
export interface PerTOrga3Input {
  strid: string;
  str_ebene3?: string | null;
  str_sortierung?: string | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
}
const per_t_orga3 = {
  tableName: 'per_t_orga3',
  columns: ['strid', 'str_ebene3', 'str_sortierung', 'dtedit', 'fkstrid', 'luseridinsert', 'dtinsert', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_orga2', column: 'strid', $type: null as unknown as PerTOrga2 }, },
  $type: null as unknown as PerTOrga3,
  $input: null as unknown as PerTOrga3Input
} as const;

// Table per_t_orga4
export interface PerTOrga4 {
  str_sortierung: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  strid: string;
  luserid: number | null;
  dtinsert: string | null;
  fkstrid: string | null;
  str_ebene4: string | null;
}
export interface PerTOrga4Input {
  str_sortierung?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  strid: string;
  luserid?: number | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
  str_ebene4?: string | null;
}
const per_t_orga4 = {
  tableName: 'per_t_orga4',
  columns: ['str_sortierung', 'dtedit', 'luseridinsert', 'strid', 'luserid', 'dtinsert', 'fkstrid', 'str_ebene4'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_orga3', column: 'strid', $type: null as unknown as PerTOrga3 }, },
  $type: null as unknown as PerTOrga4,
  $input: null as unknown as PerTOrga4Input
} as const;

// Table per_t_pers_azk
export interface PerTPersAzk {
  dt_uwarbeitszeitso: string | null;
  str_arbeitszeitso: string | null;
  l_uwarbeitszeitmiinsekunden: number | null;
  dt_uwarbeitszeitsa: string | null;
  l_uwarbeitszeitfrinsekunden: number | null;
  dt_arbeitszeitdo: string | null;
  dt_uwarbeitszeitdo: string | null;
  l_uwarbeitszeitsoinsekunden: number | null;
  str_uwarbeitszeitsumme: string | null;
  str_uwarbeitszeitso: string | null;
  l_uwarbeitszeitdiinminuten: number | null;
  l_arbeitszeitfrinminuten: number | null;
  dt_arbeitszeitso: string | null;
  l_uwarbeitszeitsoinminuten: number | null;
  dt_arbeitszeitsumme: string | null;
  l_arbeitszeitmoinsekunden: number | null;
  dt_arbeitszeitmi: string | null;
  txt_bemerkungen: string | null;
  l_uwarbeitszeitmiinminuten: number | null;
  dt_arbeitszeitfr: string | null;
  dt_uwarbeitszeitsumme: string | null;
  l_uwarbeitszeitmoinminuten: number | null;
  dt_bis: string | null;
  dt_von: string | null;
  l_arbeitszeitdoinsekunden: number | null;
  l_arbeitszeitfrinsekunden: number | null;
  l_arbeitszeitsainsekunden: number | null;
  str_arbeitszeitdo: string | null;
  dt_uwarbeitszeitfr: string | null;
  dt_uwarbeitszeitdi: string | null;
  l_arbeitszeitdiinminuten: number | null;
  str_arbeitszeitmi: string | null;
  str_uwarbeitszeitfr: string | null;
  str_uwarbeitszeitmo: string | null;
  dtinsert: string | null;
  str_uwarbeitszeitdi: string | null;
  l_arbeitszeitsainminuten: number | null;
  l_arbeitzeitsummeinminuten: number | null;
  l_uwarbeitszeitsummeinminuten: number | null;
  str_arbeitszeitsa: string | null;
  str_uwarbeitszeitdo: string | null;
  dt_uwarbeitszeitmo: string | null;
  l_uwarbeitszeitfrinminuten: number | null;
  str_arbeitszeitmo: string | null;
  dt_uwarbeitszeitmi: string | null;
  fkstrid: string | null;
  l_uwarbeitszeitsainsekunden: number | null;
  str_arbeitszeitfr: string | null;
  l_arbeitszeitsoinminuten: number | null;
  l_arbeitszeitmiinminuten: number | null;
  dt_arbeitszeitmo: string | null;
  str_arbeitszeitsumme: string | null;
  dtedit: string | null;
  l_uwarbeitszeitdoinminuten: number | null;
  str_uwarbeitszeitsa: string | null;
  l_arbeitszeitsummeinsekunden: number | null;
  b_wochenidentisch: boolean | null;
  l_uwarbeitszeitdiinsekunden: number | null;
  strid: string;
  l_arbeitszeitdiinsekunden: number | null;
  l_uwarbeitszeitsainminuten: number | null;
  str_uwarbeitszeitmi: string | null;
  l_arbeitszeitdoinminuten: number | null;
  l_uwarbeitszeitsummeinsekunden: number | null;
  luseridinsert: number | null;
  l_uwarbeitszeitdoinsekunden: number | null;
  str_arbeitszeitdi: string | null;
  dt_arbeitszeitdi: string | null;
  dt_arbeitszeitsa: string | null;
  luserid: number | null;
  l_uwarbeitszeitmoinsekunden: number | null;
  l_arbeitszeitmoinminuten: number | null;
  l_arbeitszeitmiinsekunden: number | null;
  l_arbeitszeitsoinsekunden: number | null;
  b_initialereintrag: boolean | null;
}
export interface PerTPersAzkInput {
  dt_uwarbeitszeitso?: string | null;
  str_arbeitszeitso?: string | null;
  l_uwarbeitszeitmiinsekunden?: number | null;
  dt_uwarbeitszeitsa?: string | null;
  l_uwarbeitszeitfrinsekunden?: number | null;
  dt_arbeitszeitdo?: string | null;
  dt_uwarbeitszeitdo?: string | null;
  l_uwarbeitszeitsoinsekunden?: number | null;
  str_uwarbeitszeitsumme?: string | null;
  str_uwarbeitszeitso?: string | null;
  l_uwarbeitszeitdiinminuten?: number | null;
  l_arbeitszeitfrinminuten?: number | null;
  dt_arbeitszeitso?: string | null;
  l_uwarbeitszeitsoinminuten?: number | null;
  dt_arbeitszeitsumme?: string | null;
  l_arbeitszeitmoinsekunden?: number | null;
  dt_arbeitszeitmi?: string | null;
  txt_bemerkungen?: string | null;
  l_uwarbeitszeitmiinminuten?: number | null;
  dt_arbeitszeitfr?: string | null;
  dt_uwarbeitszeitsumme?: string | null;
  l_uwarbeitszeitmoinminuten?: number | null;
  dt_bis?: string | null;
  dt_von?: string | null;
  l_arbeitszeitdoinsekunden?: number | null;
  l_arbeitszeitfrinsekunden?: number | null;
  l_arbeitszeitsainsekunden?: number | null;
  str_arbeitszeitdo?: string | null;
  dt_uwarbeitszeitfr?: string | null;
  dt_uwarbeitszeitdi?: string | null;
  l_arbeitszeitdiinminuten?: number | null;
  str_arbeitszeitmi?: string | null;
  str_uwarbeitszeitfr?: string | null;
  str_uwarbeitszeitmo?: string | null;
  dtinsert?: string | null;
  str_uwarbeitszeitdi?: string | null;
  l_arbeitszeitsainminuten?: number | null;
  l_arbeitzeitsummeinminuten?: number | null;
  l_uwarbeitszeitsummeinminuten?: number | null;
  str_arbeitszeitsa?: string | null;
  str_uwarbeitszeitdo?: string | null;
  dt_uwarbeitszeitmo?: string | null;
  l_uwarbeitszeitfrinminuten?: number | null;
  str_arbeitszeitmo?: string | null;
  dt_uwarbeitszeitmi?: string | null;
  fkstrid?: string | null;
  l_uwarbeitszeitsainsekunden?: number | null;
  str_arbeitszeitfr?: string | null;
  l_arbeitszeitsoinminuten?: number | null;
  l_arbeitszeitmiinminuten?: number | null;
  dt_arbeitszeitmo?: string | null;
  str_arbeitszeitsumme?: string | null;
  dtedit?: string | null;
  l_uwarbeitszeitdoinminuten?: number | null;
  str_uwarbeitszeitsa?: string | null;
  l_arbeitszeitsummeinsekunden?: number | null;
  b_wochenidentisch?: boolean | null;
  l_uwarbeitszeitdiinsekunden?: number | null;
  strid: string;
  l_arbeitszeitdiinsekunden?: number | null;
  l_uwarbeitszeitsainminuten?: number | null;
  str_uwarbeitszeitmi?: string | null;
  l_arbeitszeitdoinminuten?: number | null;
  l_uwarbeitszeitsummeinsekunden?: number | null;
  luseridinsert?: number | null;
  l_uwarbeitszeitdoinsekunden?: number | null;
  str_arbeitszeitdi?: string | null;
  dt_arbeitszeitdi?: string | null;
  dt_arbeitszeitsa?: string | null;
  luserid?: number | null;
  l_uwarbeitszeitmoinsekunden?: number | null;
  l_arbeitszeitmoinminuten?: number | null;
  l_arbeitszeitmiinsekunden?: number | null;
  l_arbeitszeitsoinsekunden?: number | null;
  b_initialereintrag?: boolean | null;
}
const per_t_pers_azk = {
  tableName: 'per_t_pers_azk',
  columns: ['dt_uwarbeitszeitso', 'str_arbeitszeitso', 'l_uwarbeitszeitmiinsekunden', 'dt_uwarbeitszeitsa', 'l_uwarbeitszeitfrinsekunden', 'dt_arbeitszeitdo', 'dt_uwarbeitszeitdo', 'l_uwarbeitszeitsoinsekunden', 'str_uwarbeitszeitsumme', 'str_uwarbeitszeitso', 'l_uwarbeitszeitdiinminuten', 'l_arbeitszeitfrinminuten', 'dt_arbeitszeitso', 'l_uwarbeitszeitsoinminuten', 'dt_arbeitszeitsumme', 'l_arbeitszeitmoinsekunden', 'dt_arbeitszeitmi', 'txt_bemerkungen', 'l_uwarbeitszeitmiinminuten', 'dt_arbeitszeitfr', 'dt_uwarbeitszeitsumme', 'l_uwarbeitszeitmoinminuten', 'dt_bis', 'dt_von', 'l_arbeitszeitdoinsekunden', 'l_arbeitszeitfrinsekunden', 'l_arbeitszeitsainsekunden', 'str_arbeitszeitdo', 'dt_uwarbeitszeitfr', 'dt_uwarbeitszeitdi', 'l_arbeitszeitdiinminuten', 'str_arbeitszeitmi', 'str_uwarbeitszeitfr', 'str_uwarbeitszeitmo', 'dtinsert', 'str_uwarbeitszeitdi', 'l_arbeitszeitsainminuten', 'l_arbeitzeitsummeinminuten', 'l_uwarbeitszeitsummeinminuten', 'str_arbeitszeitsa', 'str_uwarbeitszeitdo', 'dt_uwarbeitszeitmo', 'l_uwarbeitszeitfrinminuten', 'str_arbeitszeitmo', 'dt_uwarbeitszeitmi', 'fkstrid', 'l_uwarbeitszeitsainsekunden', 'str_arbeitszeitfr', 'l_arbeitszeitsoinminuten', 'l_arbeitszeitmiinminuten', 'dt_arbeitszeitmo', 'str_arbeitszeitsumme', 'dtedit', 'l_uwarbeitszeitdoinminuten', 'str_uwarbeitszeitsa', 'l_arbeitszeitsummeinsekunden', 'b_wochenidentisch', 'l_uwarbeitszeitdiinsekunden', 'strid', 'l_arbeitszeitdiinsekunden', 'l_uwarbeitszeitsainminuten', 'str_uwarbeitszeitmi', 'l_arbeitszeitdoinminuten', 'l_uwarbeitszeitsummeinsekunden', 'luseridinsert', 'l_uwarbeitszeitdoinsekunden', 'str_arbeitszeitdi', 'dt_arbeitszeitdi', 'dt_arbeitszeitsa', 'luserid', 'l_uwarbeitszeitmoinsekunden', 'l_arbeitszeitmoinminuten', 'l_arbeitszeitmiinsekunden', 'l_arbeitszeitsoinsekunden', 'b_initialereintrag'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal }, },
  $type: null as unknown as PerTPersAzk,
  $input: null as unknown as PerTPersAzkInput
} as const;

// Table per_t_pers_journal
export interface PerTPersJournal {
  luseridinsert: number | null;
  dtinsert: string | null;
  str_aktivitaet: string | null;
  dtedit: string | null;
  fkstrid: string | null;
  luserid: number | null;
  strid: string;
}
export interface PerTPersJournalInput {
  luseridinsert?: number | null;
  dtinsert?: string | null;
  str_aktivitaet?: string | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  strid: string;
}
const per_t_pers_journal = {
  tableName: 'per_t_pers_journal',
  columns: ['luseridinsert', 'dtinsert', 'str_aktivitaet', 'dtedit', 'fkstrid', 'luserid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal }, },
  $type: null as unknown as PerTPersJournal,
  $input: null as unknown as PerTPersJournalInput
} as const;

// Table per_t_pers_profil
export interface PerTPersProfil {
  luserid: number | null;
  fkstrid: string | null;
  dtedit: string | null;
  strid: string;
  l_fileinformation: number | null;
  luseridinsert: number | null;
  txt_aufgabenbeschreibung: string | null;
  dtinsert: string | null;
  txt_zusatzfunktionen: string | null;
}
export interface PerTPersProfilInput {
  luserid?: number | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  strid: string;
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  txt_aufgabenbeschreibung?: string | null;
  dtinsert?: string | null;
  txt_zusatzfunktionen?: string | null;
}
const per_t_pers_profil = {
  tableName: 'per_t_pers_profil',
  columns: ['luserid', 'fkstrid', 'dtedit', 'strid', 'l_fileinformation', 'luseridinsert', 'txt_aufgabenbeschreibung', 'dtinsert', 'txt_zusatzfunktionen'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal }, },
  $type: null as unknown as PerTPersProfil,
  $input: null as unknown as PerTPersProfilInput
} as const;

// Table per_t_pers_uk
export interface PerTPersUk {
  flt_zusatzurlaubgemsgbix: number | null;
  dtedit: string | null;
  fkstrid: string | null;
  flt_urlaubist: number | null;
  flt_resturlaubausvorjahr: number | null;
  flt_verfuegbarerurlaub: number | null;
  flt_urlaubsanspruch: number | null;
  l_jahr: number | null;
  dtinsert: string | null;
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  flt_korrektur: number | null;
  flt_urlaubsanspruchplan: number | null;
  txt_bemerkungen: string | null;
}
export interface PerTPersUkInput {
  flt_zusatzurlaubgemsgbix?: number | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  flt_urlaubist?: number | null;
  flt_resturlaubausvorjahr?: number | null;
  flt_verfuegbarerurlaub?: number | null;
  flt_urlaubsanspruch?: number | null;
  l_jahr?: number | null;
  dtinsert?: string | null;
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  flt_korrektur?: number | null;
  flt_urlaubsanspruchplan?: number | null;
  txt_bemerkungen?: string | null;
}
const per_t_pers_uk = {
  tableName: 'per_t_pers_uk',
  columns: ['flt_zusatzurlaubgemsgbix', 'dtedit', 'fkstrid', 'flt_urlaubist', 'flt_resturlaubausvorjahr', 'flt_verfuegbarerurlaub', 'flt_urlaubsanspruch', 'l_jahr', 'dtinsert', 'strid', 'luserid', 'luseridinsert', 'flt_korrektur', 'flt_urlaubsanspruchplan', 'txt_bemerkungen'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal }, },
  $type: null as unknown as PerTPersUk,
  $input: null as unknown as PerTPersUkInput
} as const;

// Table per_t_personal
export interface PerTPersonal {
  str_fuehrungskraft: string | null;
  b_externespersonal: boolean | null;
  str_orgaebene1: string | null;
  l_fileinformation: number | null;
  l_idbenutzerfuehrungskraft: number | null;
  str_stellenzeichen: string | null;
  str_idfunktionlokal: string | null;
  l_startwertarbeitszeitkonto: number | null;
  dtedit: string | null;
  str_email: string | null;
  l_fuehrungskraftid: number | null;
  str_telefonnummer: string | null;
  b_kappungsgrenzeein: boolean | null;
  dtinsert: string | null;
  dt_befristungbis: string | null;
  str_orgaebene3: string | null;
  str_vollername: string | null;
  str_buero: string | null;
  strid: string;
  txt_aufgabenbeschreibung: string | null;
  str_orgaebene0: string | null;
  l_idfuehrungskraft: number | null;
  ref_funktion: string | null;
  str_titel: string | null;
  str_anrede: string | null;
  str_externebueroleitung: string | null;
  str_geschlecht: string | null;
  str_nachname: string | null;
  txt_zusatzfunktionen: string | null;
  txt_beteiligungsfunktion: string | null;
  luseridinsert: number | null;
  txt_bemerkung: string | null;
  l_idbenutzer: number | null;
  str_zustaendigebueroleitung: string | null;
  ref_art: number | null;
  str_personalnummer: string | null;
  ref_standort: string | null;
  str_orgaebene4: string | null;
  ref_fk_personal: string | null;
  str_startwertarbeitszeitkonto: string | null;
  str_vorname: string | null;
  str_mobilnummer: string | null;
  dt_austrittsdatum: string | null;
  str_funktion: string | null;
  ref_fk_benutzer: number | null;
  ref_benutzer: number | null;
  str_orgaebene2: string | null;
  luserid: number | null;
  ref_bl: string | null;
  dt_eintrittsdatum: string | null;
  str_arbeitszeitenvalidierung: string | null;
  l_kappungsgrenze: number | null;
  l_zeiterfassungbeginnjahr: number | null;
  l_zeiterfassungbeginnmonat: number | null;
  b_zeiterfassung: boolean | null;
  str_mobilrufnummer: string | null;
  l_startwertstunden: number | null;
  l_startwertminuten: number | null;
  l_startwertsekunden: number | null;
  b_eingerichtet: boolean | null;
  str_startwertplusminus: string | null;
}
export interface PerTPersonalInput {
  str_fuehrungskraft?: string | null;
  b_externespersonal?: boolean | null;
  str_orgaebene1?: string | null;
  l_fileinformation?: number | null;
  l_idbenutzerfuehrungskraft?: number | null;
  str_stellenzeichen?: string | null;
  str_idfunktionlokal?: string | null;
  l_startwertarbeitszeitkonto?: number | null;
  dtedit?: string | null;
  str_email?: string | null;
  l_fuehrungskraftid?: number | null;
  str_telefonnummer?: string | null;
  b_kappungsgrenzeein?: boolean | null;
  dtinsert?: string | null;
  dt_befristungbis?: string | null;
  str_orgaebene3?: string | null;
  str_vollername?: string | null;
  str_buero?: string | null;
  strid: string;
  txt_aufgabenbeschreibung?: string | null;
  str_orgaebene0?: string | null;
  l_idfuehrungskraft?: number | null;
  ref_funktion?: string | null;
  str_titel?: string | null;
  str_anrede?: string | null;
  str_externebueroleitung?: string | null;
  str_geschlecht?: string | null;
  str_nachname?: string | null;
  txt_zusatzfunktionen?: string | null;
  txt_beteiligungsfunktion?: string | null;
  luseridinsert?: number | null;
  txt_bemerkung?: string | null;
  l_idbenutzer?: number | null;
  str_zustaendigebueroleitung?: string | null;
  ref_art?: number | null;
  str_personalnummer?: string | null;
  ref_standort?: string | null;
  str_orgaebene4?: string | null;
  ref_fk_personal?: string | null;
  str_startwertarbeitszeitkonto?: string | null;
  str_vorname?: string | null;
  str_mobilnummer?: string | null;
  dt_austrittsdatum?: string | null;
  str_funktion?: string | null;
  ref_fk_benutzer?: number | null;
  ref_benutzer?: number | null;
  str_orgaebene2?: string | null;
  luserid?: number | null;
  ref_bl?: string | null;
  dt_eintrittsdatum?: string | null;
  str_arbeitszeitenvalidierung?: string | null;
  l_kappungsgrenze?: number | null;
  l_zeiterfassungbeginnjahr?: number | null;
  l_zeiterfassungbeginnmonat?: number | null;
  b_zeiterfassung?: boolean | null;
  str_mobilrufnummer?: string | null;
  l_startwertstunden?: number | null;
  l_startwertminuten?: number | null;
  l_startwertsekunden?: number | null;
  b_eingerichtet?: boolean | null;
  str_startwertplusminus?: string | null;
}
const per_t_personal = {
  tableName: 'per_t_personal',
  columns: ['str_fuehrungskraft', 'b_externespersonal', 'str_orgaebene1', 'l_fileinformation', 'l_idbenutzerfuehrungskraft', 'str_stellenzeichen', 'str_idfunktionlokal', 'l_startwertarbeitszeitkonto', 'dtedit', 'str_email', 'l_fuehrungskraftid', 'str_telefonnummer', 'b_kappungsgrenzeein', 'dtinsert', 'dt_befristungbis', 'str_orgaebene3', 'str_vollername', 'str_buero', 'strid', 'txt_aufgabenbeschreibung', 'str_orgaebene0', 'l_idfuehrungskraft', 'ref_funktion', 'str_titel', 'str_anrede', 'str_externebueroleitung', 'str_geschlecht', 'str_nachname', 'txt_zusatzfunktionen', 'txt_beteiligungsfunktion', 'luseridinsert', 'txt_bemerkung', 'l_idbenutzer', 'str_zustaendigebueroleitung', 'ref_art', 'str_personalnummer', 'ref_standort', 'str_orgaebene4', 'ref_fk_personal', 'str_startwertarbeitszeitkonto', 'str_vorname', 'str_mobilnummer', 'dt_austrittsdatum', 'str_funktion', 'ref_fk_benutzer', 'ref_benutzer', 'str_orgaebene2', 'luserid', 'ref_bl', 'dt_eintrittsdatum', 'str_arbeitszeitenvalidierung', 'l_kappungsgrenze', 'l_zeiterfassungbeginnjahr', 'l_zeiterfassungbeginnmonat', 'b_zeiterfassung', 'str_mobilrufnummer', 'l_startwertstunden', 'l_startwertminuten', 'l_startwertsekunden', 'b_eingerichtet', 'str_startwertplusminus'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_funktion: { table: 'per_kat_funktion', column: 'strid', $type: null as unknown as PerKatFunktion },
    ref_art: { table: 'per_kat_art', column: 'lid', $type: null as unknown as PerKatArt },
    ref_standort: { table: 'per_kat_standorte', column: 'strid', $type: null as unknown as PerKatStandorte },
    ref_fk_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_bl: { table: 'per_kat_bueroleitung', column: 'strid', $type: null as unknown as PerKatBueroleitung },
  },
  $type: null as unknown as PerTPersonal,
  $input: null as unknown as PerTPersonalInput
} as const;

// Table per_t_personal_import
export interface PerTPersonalImport {
  str_stellenzeichenfuehrungskra: string | null;
  txt_aufgabenbeschreibung: string | null;
  str_ortgeschaeftlich: string | null;
  str_position: string | null;
  str_gruppe: string | null;
  luseridinsert: number | null;
  str_vorname: string | null;
  str_landregiongeschaeftlich: string | null;
  dtedit: string | null;
  str_emailangezeigtername: string | null;
  str_firma: string | null;
  str_nachname: string | null;
  str_telefongeschaeftlich2: string | null;
  flt_wochenarbeitszeit: number | null;
  str_strassegeschaeftlich: string | null;
  str_postleitzahlgeschaeftlich: string | null;
  str_buero: string | null;
  str_weiteresfax: string | null;
  flt_urlaubsanspruch: number | null;
  dtinsert: string | null;
  str_abteilung: string | null;
  luserid: number | null;
  str_initialen: string | null;
  str_konto: string | null;
  str_funktion: string | null;
  str_artderbeschaeftigung: string | null;
  strid: string;
  str_haus: string | null;
  str_bueroleitung: string | null;
  str_referat: string | null;
  str_hobby: string | null;
  str_telefongeschaeftlich: string | null;
}
export interface PerTPersonalImportInput {
  str_stellenzeichenfuehrungskra?: string | null;
  txt_aufgabenbeschreibung?: string | null;
  str_ortgeschaeftlich?: string | null;
  str_position?: string | null;
  str_gruppe?: string | null;
  luseridinsert?: number | null;
  str_vorname?: string | null;
  str_landregiongeschaeftlich?: string | null;
  dtedit?: string | null;
  str_emailangezeigtername?: string | null;
  str_firma?: string | null;
  str_nachname?: string | null;
  str_telefongeschaeftlich2?: string | null;
  flt_wochenarbeitszeit?: number | null;
  str_strassegeschaeftlich?: string | null;
  str_postleitzahlgeschaeftlich?: string | null;
  str_buero?: string | null;
  str_weiteresfax?: string | null;
  flt_urlaubsanspruch?: number | null;
  dtinsert?: string | null;
  str_abteilung?: string | null;
  luserid?: number | null;
  str_initialen?: string | null;
  str_konto?: string | null;
  str_funktion?: string | null;
  str_artderbeschaeftigung?: string | null;
  strid: string;
  str_haus?: string | null;
  str_bueroleitung?: string | null;
  str_referat?: string | null;
  str_hobby?: string | null;
  str_telefongeschaeftlich?: string | null;
}
const per_t_personal_import = {
  tableName: 'per_t_personal_import',
  columns: ['str_stellenzeichenfuehrungskra', 'txt_aufgabenbeschreibung', 'str_ortgeschaeftlich', 'str_position', 'str_gruppe', 'luseridinsert', 'str_vorname', 'str_landregiongeschaeftlich', 'dtedit', 'str_emailangezeigtername', 'str_firma', 'str_nachname', 'str_telefongeschaeftlich2', 'flt_wochenarbeitszeit', 'str_strassegeschaeftlich', 'str_postleitzahlgeschaeftlich', 'str_buero', 'str_weiteresfax', 'flt_urlaubsanspruch', 'dtinsert', 'str_abteilung', 'luserid', 'str_initialen', 'str_konto', 'str_funktion', 'str_artderbeschaeftigung', 'strid', 'str_haus', 'str_bueroleitung', 'str_referat', 'str_hobby', 'str_telefongeschaeftlich'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PerTPersonalImport,
  $input: null as unknown as PerTPersonalImportInput
} as const;

// Table planner_event
export interface PlannerEvent {
  dtedit: string | null;
  b_allowproposals: boolean | null;
  b_mail: boolean | null;
  b_urgent: boolean | null;
  flt_dauer: number | null;
  str_location: string | null;
  txt_description: string | null;
  dtinsert: string | null;
  txt_distributor: string | null;
  b_important: boolean | null;
  luserid: number | null;
  b_distributor: boolean | null;
  luseridinsert: number | null;
  dt_enteredtime: string | null;
  str_title: string | null;
  strid: string;
  b_invitepersons: boolean | null;
  dt_dummydate: string | null;
  b_public: boolean | null;
  str_notification: string | null;
  str_status: string | null;
}
export interface PlannerEventInput {
  dtedit?: string | null;
  b_allowproposals?: boolean | null;
  b_mail?: boolean | null;
  b_urgent?: boolean | null;
  flt_dauer?: number | null;
  str_location?: string | null;
  txt_description?: string | null;
  dtinsert?: string | null;
  txt_distributor?: string | null;
  b_important?: boolean | null;
  luserid?: number | null;
  b_distributor?: boolean | null;
  luseridinsert?: number | null;
  dt_enteredtime?: string | null;
  str_title?: string | null;
  strid: string;
  b_invitepersons?: boolean | null;
  dt_dummydate?: string | null;
  b_public?: boolean | null;
  str_notification?: string | null;
  str_status?: string | null;
}
const planner_event = {
  tableName: 'planner_event',
  columns: ['dtedit', 'b_allowproposals', 'b_mail', 'b_urgent', 'flt_dauer', 'str_location', 'txt_description', 'dtinsert', 'txt_distributor', 'b_important', 'luserid', 'b_distributor', 'luseridinsert', 'dt_enteredtime', 'str_title', 'strid', 'b_invitepersons', 'dt_dummydate', 'b_public', 'str_notification', 'str_status'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as PlannerEvent,
  $input: null as unknown as PlannerEventInput
} as const;

// Table planner_member
export interface PlannerMember {
  luserid: number | null;
  dtinsert: string | null;
  l_status: number | null;
  strid: string;
  txt_times: string | null;
  fkid: string | null;
  luseridinsert: number | null;
  ref_59603d75: number | null;
  str_notification: string | null;
  dtedit: string | null;
  b_notification: boolean | null;
  str_member: string | null;
}
export interface PlannerMemberInput {
  luserid?: number | null;
  dtinsert?: string | null;
  l_status?: number | null;
  strid: string;
  txt_times?: string | null;
  fkid?: string | null;
  luseridinsert?: number | null;
  ref_59603d75?: number | null;
  str_notification?: string | null;
  dtedit?: string | null;
  b_notification?: boolean | null;
  str_member?: string | null;
}
const planner_member = {
  tableName: 'planner_member',
  columns: ['luserid', 'dtinsert', 'l_status', 'strid', 'txt_times', 'fkid', 'luseridinsert', 'ref_59603d75', 'str_notification', 'dtedit', 'b_notification', 'str_member'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkid: { table: 'planner_event', column: 'strid', $type: null as unknown as PlannerEvent }, },
  $type: null as unknown as PlannerMember,
  $input: null as unknown as PlannerMemberInput
} as const;

// Table planner_owners
export interface PlannerOwners {
  dtinsert: string | null;
  luseridinsert: number | null;
  ref_7b598041: number | null;
  fkid: string | null;
  luserid: number | null;
  strid: string;
  dtedit: string | null;
}
export interface PlannerOwnersInput {
  dtinsert?: string | null;
  luseridinsert?: number | null;
  ref_7b598041?: number | null;
  fkid?: string | null;
  luserid?: number | null;
  strid: string;
  dtedit?: string | null;
}
const planner_owners = {
  tableName: 'planner_owners',
  columns: ['dtinsert', 'luseridinsert', 'ref_7b598041', 'fkid', 'luserid', 'strid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkid: { table: 'planner_event', column: 'strid', $type: null as unknown as PlannerEvent }, },
  $type: null as unknown as PlannerOwners,
  $input: null as unknown as PlannerOwnersInput
} as const;

// Table planner_times
export interface PlannerTimes {
  dt_ende: string | null;
  l_accepted: number | null;
  fkid: string | null;
  luseridinsert: number | null;
  dt_time: string | null;
  flt_duration: number | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  b_fixed: boolean | null;
  strid: string;
}
export interface PlannerTimesInput {
  dt_ende?: string | null;
  l_accepted?: number | null;
  fkid?: string | null;
  luseridinsert?: number | null;
  dt_time?: string | null;
  flt_duration?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  b_fixed?: boolean | null;
  strid: string;
}
const planner_times = {
  tableName: 'planner_times',
  columns: ['dt_ende', 'l_accepted', 'fkid', 'luseridinsert', 'dt_time', 'flt_duration', 'luserid', 'dtinsert', 'dtedit', 'b_fixed', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkid: { table: 'planner_event', column: 'strid', $type: null as unknown as PlannerEvent }, },
  $type: null as unknown as PlannerTimes,
  $input: null as unknown as PlannerTimesInput
} as const;

// Table qu_categories
export interface QuCategories {
  luserid: number | null;
  dtedit: string | null;
  strid: string;
  luseridinsert: number | null;
  str_titel: string | null;
  dtinsert: string | null;
}
export interface QuCategoriesInput {
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
  luseridinsert?: number | null;
  str_titel?: string | null;
  dtinsert?: string | null;
}
const qu_categories = {
  tableName: 'qu_categories',
  columns: ['luserid', 'dtedit', 'strid', 'luseridinsert', 'str_titel', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as QuCategories,
  $input: null as unknown as QuCategoriesInput
} as const;

// Table qu_comment
export interface QuComment {
  dtedit: string | null;
  strid: string;
  txt_comment: string | null;
  luseridinsert: number | null;
  ref_answer_id: string | null;
  luserid: number | null;
  ref_question: string | null;
  txt_json: string | null;
  l_datei: number | null;
  dtinsert: string | null;
}
export interface QuCommentInput {
  dtedit?: string | null;
  strid: string;
  txt_comment?: string | null;
  luseridinsert?: number | null;
  ref_answer_id?: string | null;
  luserid?: number | null;
  ref_question?: string | null;
  txt_json?: string | null;
  l_datei?: number | null;
  dtinsert?: string | null;
}
const qu_comment = {
  tableName: 'qu_comment',
  columns: ['dtedit', 'strid', 'txt_comment', 'luseridinsert', 'ref_answer_id', 'luserid', 'ref_question', 'txt_json', 'l_datei', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_answer_id: { table: 'qu_question_answers', column: 'strid', $type: null as unknown as QuQuestionAnswers },
    ref_question: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions },
  },
  $type: null as unknown as QuComment,
  $input: null as unknown as QuCommentInput
} as const;

// Table qu_comment_files
export interface QuCommentFiles {
  dtedit: string | null;
  luseridinsert: number | null;
  luserid: number | null;
  fkstrid: string | null;
  lid: number;
  strfilename: string | null;
  dtlastmodify: string | null;
  strcontenttype: string | null;
  strmeta: string | null;
  strurl: string | null;
  lorder: number | null;
  dtinsert: string | null;
}
export interface QuCommentFilesInput {
  dtedit?: string | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  fkstrid?: string | null;
  lid: number;
  strfilename?: string | null;
  dtlastmodify?: string | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
  strurl?: string | null;
  lorder?: number | null;
  dtinsert?: string | null;
}
const qu_comment_files = {
  tableName: 'qu_comment_files',
  columns: ['dtedit', 'luseridinsert', 'luserid', 'fkstrid', 'lid', 'strfilename', 'dtlastmodify', 'strcontenttype', 'strmeta', 'strurl', 'lorder', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'qu_comment', column: 'strid', $type: null as unknown as QuComment }, },
  $type: null as unknown as QuCommentFiles,
  $input: null as unknown as QuCommentFilesInput
} as const;

// Table qu_persons
export interface QuPersons {
  luserid: number | null;
  b_invited: boolean | null;
  luseridinsert: number | null;
  ref_832bb543: number | null;
  str_notification: string | null;
  b_no_notification: boolean | null;
  dtedit: string | null;
  dtinsert: string | null;
  strid: string;
  fkstrid: string | null;
}
export interface QuPersonsInput {
  luserid?: number | null;
  b_invited?: boolean | null;
  luseridinsert?: number | null;
  ref_832bb543?: number | null;
  str_notification?: string | null;
  b_no_notification?: boolean | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strid: string;
  fkstrid?: string | null;
}
const qu_persons = {
  tableName: 'qu_persons',
  columns: ['luserid', 'b_invited', 'luseridinsert', 'ref_832bb543', 'str_notification', 'b_no_notification', 'dtedit', 'dtinsert', 'strid', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions }, },
  $type: null as unknown as QuPersons,
  $input: null as unknown as QuPersonsInput
} as const;

// Table qu_question_answers
export interface QuQuestionAnswers {
  luseridinsert: number | null;
  strid: string;
  dtedit: string | null;
  ref_user_id: number | null;
  b_helpfull: boolean | null;
  fkstrid: string | null;
  luserid: number | null;
  dtinsert: string | null;
  l_datei: number | null;
  txt_answer: string | null;
  txt_answer_media: string | null;
}
export interface QuQuestionAnswersInput {
  luseridinsert?: number | null;
  strid: string;
  dtedit?: string | null;
  ref_user_id?: number | null;
  b_helpfull?: boolean | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  l_datei?: number | null;
  txt_answer?: string | null;
  txt_answer_media?: string | null;
}
const qu_question_answers = {
  tableName: 'qu_question_answers',
  columns: ['luseridinsert', 'strid', 'dtedit', 'ref_user_id', 'b_helpfull', 'fkstrid', 'luserid', 'dtinsert', 'l_datei', 'txt_answer', 'txt_answer_media'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions }, },
  $type: null as unknown as QuQuestionAnswers,
  $input: null as unknown as QuQuestionAnswersInput
} as const;

// Table qu_question_cat
export interface QuQuestionCat {
  lid: number;
  fkstrid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  str_id: string | null;
  dtinsert: string | null;
  dtedit: string | null;
}
export interface QuQuestionCatInput {
  lid: number;
  fkstrid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  str_id?: string | null;
  dtinsert?: string | null;
  dtedit?: string | null;
}
const qu_question_cat = {
  tableName: 'qu_question_cat',
  columns: ['lid', 'fkstrid', 'luserid', 'luseridinsert', 'str_id', 'dtinsert', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions }, },
  $type: null as unknown as QuQuestionCat,
  $input: null as unknown as QuQuestionCatInput
} as const;

// Table qu_question_tags
export interface QuQuestionTags {
  fkstrid: string | null;
  dtinsert: string | null;
  ref_tag_id: string | null;
  dtedit: string | null;
  strid: string;
  luseridinsert: number | null;
  luserid: number | null;
}
export interface QuQuestionTagsInput {
  fkstrid?: string | null;
  dtinsert?: string | null;
  ref_tag_id?: string | null;
  dtedit?: string | null;
  strid: string;
  luseridinsert?: number | null;
  luserid?: number | null;
}
const qu_question_tags = {
  tableName: 'qu_question_tags',
  columns: ['fkstrid', 'dtinsert', 'ref_tag_id', 'dtedit', 'strid', 'luseridinsert', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions },
    ref_tag_id: { table: 'qu_tags', column: 'strid', $type: null as unknown as QuTags },
  },
  $type: null as unknown as QuQuestionTags,
  $input: null as unknown as QuQuestionTagsInput
} as const;

// Table qu_questions
export interface QuQuestions {
  strid: string;
  txt_questiondetails: string | null;
  str_question: string | null;
  l_fileinformation: string | null;
  luseridinsert: number | null;
  b_urgent: boolean | null;
  b_important: boolean | null;
  txt_mediadata: string | null;
  txt_answer: string | null;
  dtinsert: string | null;
  dt_date: string | null;
  txt_answermedia: string | null;
  txt_distributor: string | null;
  b_distributor: boolean | null;
  b_share: boolean | null;
  dtedit: string | null;
  b_sharegroup: boolean | null;
  str_sharegroup: string | null;
  txt_dummytags: string | null;
  l_release: number | null;
  l_antwortdatei: number | null;
  luserid: number | null;
  ref_user_id: number | null;
}
export interface QuQuestionsInput {
  strid: string;
  txt_questiondetails?: string | null;
  str_question?: string | null;
  l_fileinformation?: string | null;
  luseridinsert?: number | null;
  b_urgent?: boolean | null;
  b_important?: boolean | null;
  txt_mediadata?: string | null;
  txt_answer?: string | null;
  dtinsert?: string | null;
  dt_date?: string | null;
  txt_answermedia?: string | null;
  txt_distributor?: string | null;
  b_distributor?: boolean | null;
  b_share?: boolean | null;
  dtedit?: string | null;
  b_sharegroup?: boolean | null;
  str_sharegroup?: string | null;
  txt_dummytags?: string | null;
  l_release?: number | null;
  l_antwortdatei?: number | null;
  luserid?: number | null;
  ref_user_id?: number | null;
}
const qu_questions = {
  tableName: 'qu_questions',
  columns: ['strid', 'txt_questiondetails', 'str_question', 'l_fileinformation', 'luseridinsert', 'b_urgent', 'b_important', 'txt_mediadata', 'txt_answer', 'dtinsert', 'dt_date', 'txt_answermedia', 'txt_distributor', 'b_distributor', 'b_share', 'dtedit', 'b_sharegroup', 'str_sharegroup', 'txt_dummytags', 'l_release', 'l_antwortdatei', 'luserid', 'ref_user_id'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as QuQuestions,
  $input: null as unknown as QuQuestionsInput
} as const;

// Table qu_questions_files
export interface QuQuestionsFiles {
  strid: string;
  luseridinsert: number | null;
  strmeta: string | null;
  strfilename: string | null;
  dtlastmodify: string | null;
  fkstrid: string | null;
  lorder: number | null;
  dtedit: string | null;
  strcontenttype: string | null;
  strurl: string | null;
  dtinsert: string | null;
  luserid: number | null;
}
export interface QuQuestionsFilesInput {
  strid: string;
  luseridinsert?: number | null;
  strmeta?: string | null;
  strfilename?: string | null;
  dtlastmodify?: string | null;
  fkstrid?: string | null;
  lorder?: number | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  strurl?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
}
const qu_questions_files = {
  tableName: 'qu_questions_files',
  columns: ['strid', 'luseridinsert', 'strmeta', 'strfilename', 'dtlastmodify', 'fkstrid', 'lorder', 'dtedit', 'strcontenttype', 'strurl', 'dtinsert', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions }, },
  $type: null as unknown as QuQuestionsFiles,
  $input: null as unknown as QuQuestionsFilesInput
} as const;

// Table qu_tags
export interface QuTags {
  str_name: string | null;
  dtedit: string | null;
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
}
export interface QuTagsInput {
  str_name?: string | null;
  dtedit?: string | null;
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
}
const qu_tags = {
  tableName: 'qu_tags',
  columns: ['str_name', 'dtedit', 'strid', 'luserid', 'luseridinsert', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as QuTags,
  $input: null as unknown as QuTagsInput
} as const;

// Table qu_votes
export interface QuVotes {
  l_vote: number | null;
  luserid: number | null;
  dtinsert: string | null;
  strid: string;
  ref_answer_id: string | null;
  ref_user_id: number | null;
  dtedit: string | null;
  ref_question_id: string | null;
  luseridinsert: number | null;
}
export interface QuVotesInput {
  l_vote?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  strid: string;
  ref_answer_id?: string | null;
  ref_user_id?: number | null;
  dtedit?: string | null;
  ref_question_id?: string | null;
  luseridinsert?: number | null;
}
const qu_votes = {
  tableName: 'qu_votes',
  columns: ['l_vote', 'luserid', 'dtinsert', 'strid', 'ref_answer_id', 'ref_user_id', 'dtedit', 'ref_question_id', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_answer_id: { table: 'qu_question_answers', column: 'strid', $type: null as unknown as QuQuestionAnswers },
    ref_question_id: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions },
  },
  $type: null as unknown as QuVotes,
  $input: null as unknown as QuVotesInput
} as const;

// Table scbau_imp_eckdaten
export interface ScbauImpEckdaten {
  dtedit: string | null;
  dt_stichtag: string | null;
  luserid: number | null;
  strid: string;
  dtinsert: string | null;
  luseridinsert: number | null;
  l_fileinformation: number | null;
}
export interface ScbauImpEckdatenInput {
  dtedit?: string | null;
  dt_stichtag?: string | null;
  luserid?: number | null;
  strid: string;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  l_fileinformation?: number | null;
}
const scbau_imp_eckdaten = {
  tableName: 'scbau_imp_eckdaten',
  columns: ['dtedit', 'dt_stichtag', 'luserid', 'strid', 'dtinsert', 'luseridinsert', 'l_fileinformation'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauImpEckdaten,
  $input: null as unknown as ScbauImpEckdatenInput
} as const;

// Table scbau_imp_eckdaten_daten
export interface ScbauImpEckdatenDaten {
  luseridinsert: number | null;
  l_sw: number | null;
  str_traeger: string | null;
  str_schulart: string | null;
  l_k: number | null;
  l_sm: number | null;
  l_nw: number | null;
  l_n: number | null;
  luserid: number | null;
  l_s: number | null;
  str_bezirk: string | null;
  str_kst: string | null;
  str_name: string | null;
  str_jahrgangsstufe: string | null;
  str_klassenart: string | null;
  str_gemeinschaftsschule: string | null;
  l_faktor: number | null;
  dtedit: string | null;
  str_bsn: string | null;
  fkstrid: string | null;
  strid: string;
  dtinsert: string | null;
  l_nm: number | null;
}
export interface ScbauImpEckdatenDatenInput {
  luseridinsert?: number | null;
  l_sw?: number | null;
  str_traeger?: string | null;
  str_schulart?: string | null;
  l_k?: number | null;
  l_sm?: number | null;
  l_nw?: number | null;
  l_n?: number | null;
  luserid?: number | null;
  l_s?: number | null;
  str_bezirk?: string | null;
  str_kst?: string | null;
  str_name?: string | null;
  str_jahrgangsstufe?: string | null;
  str_klassenart?: string | null;
  str_gemeinschaftsschule?: string | null;
  l_faktor?: number | null;
  dtedit?: string | null;
  str_bsn?: string | null;
  fkstrid?: string | null;
  strid: string;
  dtinsert?: string | null;
  l_nm?: number | null;
}
const scbau_imp_eckdaten_daten = {
  tableName: 'scbau_imp_eckdaten_daten',
  columns: ['luseridinsert', 'l_sw', 'str_traeger', 'str_schulart', 'l_k', 'l_sm', 'l_nw', 'l_n', 'luserid', 'l_s', 'str_bezirk', 'str_kst', 'str_name', 'str_jahrgangsstufe', 'str_klassenart', 'str_gemeinschaftsschule', 'l_faktor', 'dtedit', 'str_bsn', 'fkstrid', 'strid', 'dtinsert', 'l_nm'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_imp_eckdaten', column: 'strid', $type: null as unknown as ScbauImpEckdaten }, },
  $type: null as unknown as ScbauImpEckdatenDaten,
  $input: null as unknown as ScbauImpEckdatenDatenInput
} as const;

// Table scbau_kat_aufgabentraeger
export interface ScbauKatAufgabentraeger {
  dtinsert: string | null;
  dtedit: string | null;
  str_aufgabentraeger: string | null;
  luseridinsert: number | null;
  strid: string;
  luserid: number | null;
}
export interface ScbauKatAufgabentraegerInput {
  dtinsert?: string | null;
  dtedit?: string | null;
  str_aufgabentraeger?: string | null;
  luseridinsert?: number | null;
  strid: string;
  luserid?: number | null;
}
const scbau_kat_aufgabentraeger = {
  tableName: 'scbau_kat_aufgabentraeger',
  columns: ['dtinsert', 'dtedit', 'str_aufgabentraeger', 'luseridinsert', 'strid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatAufgabentraeger,
  $input: null as unknown as ScbauKatAufgabentraegerInput
} as const;

// Table scbau_kat_bautyp
export interface ScbauKatBautyp {
  strid: string;
  dtinsert: string | null;
  luserid: number | null;
  str_bautyp: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
}
export interface ScbauKatBautypInput {
  strid: string;
  dtinsert?: string | null;
  luserid?: number | null;
  str_bautyp?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
}
const scbau_kat_bautyp = {
  tableName: 'scbau_kat_bautyp',
  columns: ['strid', 'dtinsert', 'luserid', 'str_bautyp', 'dtedit', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatBautyp,
  $input: null as unknown as ScbauKatBautypInput
} as const;

// Table scbau_kat_bedarfstraeger
export interface ScbauKatBedarfstraeger {
  dtinsert: string | null;
  strid: string;
  luseridinsert: number | null;
  luserid: number | null;
  dtedit: string | null;
  str_bedarfstraeger: string | null;
}
export interface ScbauKatBedarfstraegerInput {
  dtinsert?: string | null;
  strid: string;
  luseridinsert?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  str_bedarfstraeger?: string | null;
}
const scbau_kat_bedarfstraeger = {
  tableName: 'scbau_kat_bedarfstraeger',
  columns: ['dtinsert', 'strid', 'luseridinsert', 'luserid', 'dtedit', 'str_bedarfstraeger'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatBedarfstraeger,
  $input: null as unknown as ScbauKatBedarfstraegerInput
} as const;

// Table scbau_kat_massnahmeart
export interface ScbauKatMassnahmeart {
  dtedit: string | null;
  dtinsert: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  strid: string;
  str_massnahmeart: string | null;
}
export interface ScbauKatMassnahmeartInput {
  dtedit?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  strid: string;
  str_massnahmeart?: string | null;
}
const scbau_kat_massnahmeart = {
  tableName: 'scbau_kat_massnahmeart',
  columns: ['dtedit', 'dtinsert', 'luserid', 'luseridinsert', 'strid', 'str_massnahmeart'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatMassnahmeart,
  $input: null as unknown as ScbauKatMassnahmeartInput
} as const;

// Table scbau_kat_mittelherkunft
export interface ScbauKatMittelherkunft {
  luseridinsert: number | null;
  str_finanzmittelherkunft: string | null;
  l_kapitelvon: number | null;
  l_kapitelbis: number | null;
  l_titelbis: number | null;
  l_titelvon: number | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
}
export interface ScbauKatMittelherkunftInput {
  luseridinsert?: number | null;
  str_finanzmittelherkunft?: string | null;
  l_kapitelvon?: number | null;
  l_kapitelbis?: number | null;
  l_titelbis?: number | null;
  l_titelvon?: number | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
}
const scbau_kat_mittelherkunft = {
  tableName: 'scbau_kat_mittelherkunft',
  columns: ['luseridinsert', 'str_finanzmittelherkunft', 'l_kapitelvon', 'l_kapitelbis', 'l_titelbis', 'l_titelvon', 'strid', 'luserid', 'dtedit', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatMittelherkunft,
  $input: null as unknown as ScbauKatMittelherkunftInput
} as const;

// Table scbau_kat_phasen
export interface ScbauKatPhasen {
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  str_reihenfolge: string | null;
  str_phase: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
}
export interface ScbauKatPhasenInput {
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  str_reihenfolge?: string | null;
  str_phase?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
}
const scbau_kat_phasen = {
  tableName: 'scbau_kat_phasen',
  columns: ['strid', 'luserid', 'dtedit', 'str_reihenfolge', 'str_phase', 'luseridinsert', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatPhasen,
  $input: null as unknown as ScbauKatPhasenInput
} as const;

// Table scbau_kat_prioritaet
export interface ScbauKatPrioritaet {
  dtinsert: string | null;
  l_fileinformation: number | null;
  dtedit: string | null;
  str_prioritaet: string | null;
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  str_reihenfolge: string | null;
}
export interface ScbauKatPrioritaetInput {
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  dtedit?: string | null;
  str_prioritaet?: string | null;
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  str_reihenfolge?: string | null;
}
const scbau_kat_prioritaet = {
  tableName: 'scbau_kat_prioritaet',
  columns: ['dtinsert', 'l_fileinformation', 'dtedit', 'str_prioritaet', 'strid', 'luserid', 'luseridinsert', 'str_reihenfolge'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatPrioritaet,
  $input: null as unknown as ScbauKatPrioritaetInput
} as const;

// Table scbau_kat_schultraegertyp
export interface ScbauKatSchultraegertyp {
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  str_schultraegertyp: string | null;
  luserid: number | null;
  dtinsert: string | null;
}
export interface ScbauKatSchultraegertypInput {
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  str_schultraegertyp?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
}
const scbau_kat_schultraegertyp = {
  tableName: 'scbau_kat_schultraegertyp',
  columns: ['strid', 'luseridinsert', 'dtedit', 'str_schultraegertyp', 'luserid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatSchultraegertyp,
  $input: null as unknown as ScbauKatSchultraegertypInput
} as const;

// Table scbau_kat_schultyp
export interface ScbauKatSchultyp {
  strid: string;
  dtinsert: string | null;
  luseridinsert: number | null;
  str_code: string | null;
  dtedit: string | null;
  luserid: number | null;
  str_schultyp: string | null;
}
export interface ScbauKatSchultypInput {
  strid: string;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  str_code?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_schultyp?: string | null;
}
const scbau_kat_schultyp = {
  tableName: 'scbau_kat_schultyp',
  columns: ['strid', 'dtinsert', 'luseridinsert', 'str_code', 'dtedit', 'luserid', 'str_schultyp'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatSchultyp,
  $input: null as unknown as ScbauKatSchultypInput
} as const;

// Table scbau_kat_standardanpass
export interface ScbauKatStandardanpass {
  dtedit: string | null;
  str_standardanpassung: string | null;
  strid: string;
  luserid: number | null;
  dtinsert: string | null;
  luseridinsert: number | null;
}
export interface ScbauKatStandardanpassInput {
  dtedit?: string | null;
  str_standardanpassung?: string | null;
  strid: string;
  luserid?: number | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
}
const scbau_kat_standardanpass = {
  tableName: 'scbau_kat_standardanpass',
  columns: ['dtedit', 'str_standardanpassung', 'strid', 'luserid', 'dtinsert', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatStandardanpass,
  $input: null as unknown as ScbauKatStandardanpassInput
} as const;

// Table scbau_kat_verzoegerungen
export interface ScbauKatVerzoegerungen {
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  strid: string;
  str_verzoegerung: string | null;
  dtinsert: string | null;
}
export interface ScbauKatVerzoegerungenInput {
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  strid: string;
  str_verzoegerung?: string | null;
  dtinsert?: string | null;
}
const scbau_kat_verzoegerungen = {
  tableName: 'scbau_kat_verzoegerungen',
  columns: ['luseridinsert', 'dtedit', 'luserid', 'strid', 'str_verzoegerung', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatVerzoegerungen,
  $input: null as unknown as ScbauKatVerzoegerungenInput
} as const;

// Table scbau_kat_vorlage
export interface ScbauKatVorlage {
  str_vorlagentyp: string | null;
  strid: string;
  l_fileinformation: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface ScbauKatVorlageInput {
  str_vorlagentyp?: string | null;
  strid: string;
  l_fileinformation?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const scbau_kat_vorlage = {
  tableName: 'scbau_kat_vorlage',
  columns: ['str_vorlagentyp', 'strid', 'l_fileinformation', 'dtedit', 'dtinsert', 'luserid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauKatVorlage,
  $input: null as unknown as ScbauKatVorlageInput
} as const;

// Table scbau_t_berichte
export interface ScbauTBerichte {
  luserid: number | null;
  l_fileinformation: number | null;
  str_bsnnummer: string | null;
  b_allemassnahmen: boolean | null;
  str_datenfuehrendestelle: string | null;
  str_aufgabentraeger: string | null;
  txt_finanzmittelherkunft: string | null;
  dtedit: string | null;
  str_bezirksnummer: string | null;
  dtinsert: string | null;
  strid: string;
  luseridinsert: number | null;
}
export interface ScbauTBerichteInput {
  luserid?: number | null;
  l_fileinformation?: number | null;
  str_bsnnummer?: string | null;
  b_allemassnahmen?: boolean | null;
  str_datenfuehrendestelle?: string | null;
  str_aufgabentraeger?: string | null;
  txt_finanzmittelherkunft?: string | null;
  dtedit?: string | null;
  str_bezirksnummer?: string | null;
  dtinsert?: string | null;
  strid: string;
  luseridinsert?: number | null;
}
const scbau_t_berichte = {
  tableName: 'scbau_t_berichte',
  columns: ['luserid', 'l_fileinformation', 'str_bsnnummer', 'b_allemassnahmen', 'str_datenfuehrendestelle', 'str_aufgabentraeger', 'txt_finanzmittelherkunft', 'dtedit', 'str_bezirksnummer', 'dtinsert', 'strid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauTBerichte,
  $input: null as unknown as ScbauTBerichteInput
} as const;

// Table scbau_t_berichtswesen
export interface ScbauTBerichtswesen {
  luserid: number | null;
  dtedit: string | null;
  lid: number;
  ref_schule: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
}
export interface ScbauTBerichtswesenInput {
  luserid?: number | null;
  dtedit?: string | null;
  lid: number;
  ref_schule?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
}
const scbau_t_berichtswesen = {
  tableName: 'scbau_t_berichtswesen',
  columns: ['luserid', 'dtedit', 'lid', 'ref_schule', 'luseridinsert', 'dtinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { ref_schule: { table: 'katalog_schulen', column: 'strid', $type: null as unknown as KatalogSchulen }, },
  $type: null as unknown as ScbauTBerichtswesen,
  $input: null as unknown as ScbauTBerichtswesenInput
} as const;

// Table scbau_t_import
export interface ScbauTImport {
  dtinsert: string | null;
  dt_stichtag: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  str_typ: string | null;
  l_fileinformation: number | null;
  strid: string;
  luserid: number | null;
}
export interface ScbauTImportInput {
  dtinsert?: string | null;
  dt_stichtag?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  str_typ?: string | null;
  l_fileinformation?: number | null;
  strid: string;
  luserid?: number | null;
}
const scbau_t_import = {
  tableName: 'scbau_t_import',
  columns: ['dtinsert', 'dt_stichtag', 'luseridinsert', 'dtedit', 'str_typ', 'l_fileinformation', 'strid', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauTImport,
  $input: null as unknown as ScbauTImportInput
} as const;

// Table scbau_t_m_abfragen
export interface ScbauTMAbfragen {
  str_kostenschaetzungevusolldat: string | null;
  str_standortprobleme: string | null;
  flt_mittelabflussplan2022: number | null;
  flt_mittelabflussist2018landes: number | null;
  flt_mittelabflussplan2018: number | null;
  flt_mittelabflussist2018efre: number | null;
  str_beginnderbaumassnahme: string | null;
  flt_mittelabflussist2017bundes: number | null;
  str_namederschule: string | null;
  str_kostenschaetzungevuistdatu: string | null;
  str_nutzungsbeginn: string | null;
  dtinsert: string | null;
  flt_mittelabflussist2018sonsti: number | null;
  flt_mittelabflussplan2017: number | null;
  str_bearbeiterin: string | null;
  flt_gesamtkostenineuro: number | null;
  str_bezeichnungdermassnahme: string | null;
  str_titel: string | null;
  flt_kostenberechnungbpuineuro: number | null;
  flt_mittelabflussist2017: number | null;
  str_ggfeusolldatum: string | null;
  flt_mittelabflussist2017landes: number | null;
  flt_mittelabflussist2018: number | null;
  flt_kostenschaetzungevuineuro: number | null;
  flt_mittelabflussplan2020: number | null;
  str_unterkonto: string | null;
  str_kostenberechnungbpuistdatu: string | null;
  str_ggfeuistdatum: string | null;
  str_geprueftesbpistdatum: string | null;
  luserid: number | null;
  strid: string;
  str_aufgabentraeger: string | null;
  str_kapitel: string | null;
  flt_mittelabflussplan2019: number | null;
  str_bauart: string | null;
  flt_geprueftesbpineuro: number | null;
  flt_mittelabflussist2017efre: number | null;
  str_kostenberechnungbpusolldat: string | null;
  str_bsn: string | null;
  flt_mittelabflussplan2021: number | null;
  flt_sonstigedrittmittel: number | null;
  flt_mittelbflussist2018bundesm: number | null;
  str_foerderprogramm: string | null;
  str_id: string | null;
  luseridinsert: number | null;
  flt_bundesmittel: number | null;
  dtedit: string | null;
  str_artdermassnahme: string | null;
  str_geprueftesbpsolldatum: string | null;
  flt_ggfeuineuro: number | null;
  flt_mittelabflussist2017sonsti: number | null;
  flt_landesmittel: number | null;
  str_adressederschule: string | null;
  flt_efre: number | null;
}
export interface ScbauTMAbfragenInput {
  str_kostenschaetzungevusolldat?: string | null;
  str_standortprobleme?: string | null;
  flt_mittelabflussplan2022?: number | null;
  flt_mittelabflussist2018landes?: number | null;
  flt_mittelabflussplan2018?: number | null;
  flt_mittelabflussist2018efre?: number | null;
  str_beginnderbaumassnahme?: string | null;
  flt_mittelabflussist2017bundes?: number | null;
  str_namederschule?: string | null;
  str_kostenschaetzungevuistdatu?: string | null;
  str_nutzungsbeginn?: string | null;
  dtinsert?: string | null;
  flt_mittelabflussist2018sonsti?: number | null;
  flt_mittelabflussplan2017?: number | null;
  str_bearbeiterin?: string | null;
  flt_gesamtkostenineuro?: number | null;
  str_bezeichnungdermassnahme?: string | null;
  str_titel?: string | null;
  flt_kostenberechnungbpuineuro?: number | null;
  flt_mittelabflussist2017?: number | null;
  str_ggfeusolldatum?: string | null;
  flt_mittelabflussist2017landes?: number | null;
  flt_mittelabflussist2018?: number | null;
  flt_kostenschaetzungevuineuro?: number | null;
  flt_mittelabflussplan2020?: number | null;
  str_unterkonto?: string | null;
  str_kostenberechnungbpuistdatu?: string | null;
  str_ggfeuistdatum?: string | null;
  str_geprueftesbpistdatum?: string | null;
  luserid?: number | null;
  strid: string;
  str_aufgabentraeger?: string | null;
  str_kapitel?: string | null;
  flt_mittelabflussplan2019?: number | null;
  str_bauart?: string | null;
  flt_geprueftesbpineuro?: number | null;
  flt_mittelabflussist2017efre?: number | null;
  str_kostenberechnungbpusolldat?: string | null;
  str_bsn?: string | null;
  flt_mittelabflussplan2021?: number | null;
  flt_sonstigedrittmittel?: number | null;
  flt_mittelbflussist2018bundesm?: number | null;
  str_foerderprogramm?: string | null;
  str_id?: string | null;
  luseridinsert?: number | null;
  flt_bundesmittel?: number | null;
  dtedit?: string | null;
  str_artdermassnahme?: string | null;
  str_geprueftesbpsolldatum?: string | null;
  flt_ggfeuineuro?: number | null;
  flt_mittelabflussist2017sonsti?: number | null;
  flt_landesmittel?: number | null;
  str_adressederschule?: string | null;
  flt_efre?: number | null;
}
const scbau_t_m_abfragen = {
  tableName: 'scbau_t_m_abfragen',
  columns: ['str_kostenschaetzungevusolldat', 'str_standortprobleme', 'flt_mittelabflussplan2022', 'flt_mittelabflussist2018landes', 'flt_mittelabflussplan2018', 'flt_mittelabflussist2018efre', 'str_beginnderbaumassnahme', 'flt_mittelabflussist2017bundes', 'str_namederschule', 'str_kostenschaetzungevuistdatu', 'str_nutzungsbeginn', 'dtinsert', 'flt_mittelabflussist2018sonsti', 'flt_mittelabflussplan2017', 'str_bearbeiterin', 'flt_gesamtkostenineuro', 'str_bezeichnungdermassnahme', 'str_titel', 'flt_kostenberechnungbpuineuro', 'flt_mittelabflussist2017', 'str_ggfeusolldatum', 'flt_mittelabflussist2017landes', 'flt_mittelabflussist2018', 'flt_kostenschaetzungevuineuro', 'flt_mittelabflussplan2020', 'str_unterkonto', 'str_kostenberechnungbpuistdatu', 'str_ggfeuistdatum', 'str_geprueftesbpistdatum', 'luserid', 'strid', 'str_aufgabentraeger', 'str_kapitel', 'flt_mittelabflussplan2019', 'str_bauart', 'flt_geprueftesbpineuro', 'flt_mittelabflussist2017efre', 'str_kostenberechnungbpusolldat', 'str_bsn', 'flt_mittelabflussplan2021', 'flt_sonstigedrittmittel', 'flt_mittelbflussist2018bundesm', 'str_foerderprogramm', 'str_id', 'luseridinsert', 'flt_bundesmittel', 'dtedit', 'str_artdermassnahme', 'str_geprueftesbpsolldatum', 'flt_ggfeuineuro', 'flt_mittelabflussist2017sonsti', 'flt_landesmittel', 'str_adressederschule', 'flt_efre'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ScbauTMAbfragen,
  $input: null as unknown as ScbauTMAbfragenInput
} as const;

// Table scbau_t_massnahmen_drittm
export interface ScbauTMassnahmenDrittm {
  dtinsert: string | null;
  fkstrid: string | null;
  flt_drittmittelbene: number | null;
  flt_drittmittelsonstige: number | null;
  flt_drittmittelkostenbeteiligu: number | null;
  luserid: number | null;
  flt_drittmittelkinvfg: number | null;
  strid: string;
  flt_drittmittelstadtumbauwest: number | null;
  flt_drittmittelgrw: number | null;
  flt_drittmittelstadtumbauost: number | null;
  luseridinsert: number | null;
  l_jahr: number | null;
  dtedit: string | null;
}
export interface ScbauTMassnahmenDrittmInput {
  dtinsert?: string | null;
  fkstrid?: string | null;
  flt_drittmittelbene?: number | null;
  flt_drittmittelsonstige?: number | null;
  flt_drittmittelkostenbeteiligu?: number | null;
  luserid?: number | null;
  flt_drittmittelkinvfg?: number | null;
  strid: string;
  flt_drittmittelstadtumbauwest?: number | null;
  flt_drittmittelgrw?: number | null;
  flt_drittmittelstadtumbauost?: number | null;
  luseridinsert?: number | null;
  l_jahr?: number | null;
  dtedit?: string | null;
}
const scbau_t_massnahmen_drittm = {
  tableName: 'scbau_t_massnahmen_drittm',
  columns: ['dtinsert', 'fkstrid', 'flt_drittmittelbene', 'flt_drittmittelsonstige', 'flt_drittmittelkostenbeteiligu', 'luserid', 'flt_drittmittelkinvfg', 'strid', 'flt_drittmittelstadtumbauwest', 'flt_drittmittelgrw', 'flt_drittmittelstadtumbauost', 'luseridinsert', 'l_jahr', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen }, },
  $type: null as unknown as ScbauTMassnahmenDrittm,
  $input: null as unknown as ScbauTMassnahmenDrittmInput
} as const;

// Table scbau_t_massnahmen_finanz
export interface ScbauTMassnahmenFinanz {
  dtedit: string | null;
  dtinsert: string | null;
  strid: string;
  fkstrid: string | null;
  l_jahr: number | null;
  luserid: number | null;
  luseridinsert: number | null;
  flt_mittelabfluss: number | null;
  flt_ist: number | null;
}
export interface ScbauTMassnahmenFinanzInput {
  dtedit?: string | null;
  dtinsert?: string | null;
  strid: string;
  fkstrid?: string | null;
  l_jahr?: number | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  flt_mittelabfluss?: number | null;
  flt_ist?: number | null;
}
const scbau_t_massnahmen_finanz = {
  tableName: 'scbau_t_massnahmen_finanz',
  columns: ['dtedit', 'dtinsert', 'strid', 'fkstrid', 'l_jahr', 'luserid', 'luseridinsert', 'flt_mittelabfluss', 'flt_ist'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen }, },
  $type: null as unknown as ScbauTMassnahmenFinanz,
  $input: null as unknown as ScbauTMassnahmenFinanzInput
} as const;

// Table scbau_t_massnahmen_kapa
export interface ScbauTMassnahmenKapa {
  dtedit: string | null;
  luserid: number | null;
  strid: string;
  l_kapazitaetsveraenderungalt: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dt_datenstand: string | null;
  fkstrid: string | null;
}
export interface ScbauTMassnahmenKapaInput {
  dtedit?: string | null;
  luserid?: number | null;
  strid: string;
  l_kapazitaetsveraenderungalt?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dt_datenstand?: string | null;
  fkstrid?: string | null;
}
const scbau_t_massnahmen_kapa = {
  tableName: 'scbau_t_massnahmen_kapa',
  columns: ['dtedit', 'luserid', 'strid', 'l_kapazitaetsveraenderungalt', 'luseridinsert', 'dtinsert', 'dt_datenstand', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen }, },
  $type: null as unknown as ScbauTMassnahmenKapa,
  $input: null as unknown as ScbauTMassnahmenKapaInput
} as const;

// Table scbau_t_massnahmen_mittela
export interface ScbauTMassnahmenMittela {
  luseridinsert: number | null;
  fkstrid: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  strid: string;
  l_jahr: number | null;
  str_gruppe: string | null;
  luserid: number | null;
  flt_mittelabflussist: number | null;
  flt_mittelabflussplan: number | null;
  flt_mittelabfluss: number | null;
}
export interface ScbauTMassnahmenMittelaInput {
  luseridinsert?: number | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strid: string;
  l_jahr?: number | null;
  str_gruppe?: string | null;
  luserid?: number | null;
  flt_mittelabflussist?: number | null;
  flt_mittelabflussplan?: number | null;
  flt_mittelabfluss?: number | null;
}
const scbau_t_massnahmen_mittela = {
  tableName: 'scbau_t_massnahmen_mittela',
  columns: ['luseridinsert', 'fkstrid', 'dtedit', 'dtinsert', 'strid', 'l_jahr', 'str_gruppe', 'luserid', 'flt_mittelabflussist', 'flt_mittelabflussplan', 'flt_mittelabfluss'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen }, },
  $type: null as unknown as ScbauTMassnahmenMittela,
  $input: null as unknown as ScbauTMassnahmenMittelaInput
} as const;

// Table scbau_t_massnahmen_phase
export interface ScbauTMassnahmenPhase {
  dt_endesoll: string | null;
  flt_betrag: number | null;
  fkstrid: string | null;
  strid: string;
  dt_startsoll: string | null;
  dt_endeist: string | null;
  dt_startist: string | null;
  luserid: number | null;
  ref_phase: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
}
export interface ScbauTMassnahmenPhaseInput {
  dt_endesoll?: string | null;
  flt_betrag?: number | null;
  fkstrid?: string | null;
  strid: string;
  dt_startsoll?: string | null;
  dt_endeist?: string | null;
  dt_startist?: string | null;
  luserid?: number | null;
  ref_phase?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
}
const scbau_t_massnahmen_phase = {
  tableName: 'scbau_t_massnahmen_phase',
  columns: ['dt_endesoll', 'flt_betrag', 'fkstrid', 'strid', 'dt_startsoll', 'dt_endeist', 'dt_startist', 'luserid', 'ref_phase', 'dtinsert', 'luseridinsert', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen },
    ref_phase: { table: 'scbau_kat_phasen', column: 'strid', $type: null as unknown as ScbauKatPhasen },
  },
  $type: null as unknown as ScbauTMassnahmenPhase,
  $input: null as unknown as ScbauTMassnahmenPhaseInput
} as const;

// Table scbau_t_massnahmen_vermerk
export interface ScbauTMassnahmenVermerk {
  dtinsert: string | null;
  fkstrid: string | null;
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  txt_bearbeitungsvermerk: string | null;
  str_status: string | null;
  luserid: number | null;
}
export interface ScbauTMassnahmenVermerkInput {
  dtinsert?: string | null;
  fkstrid?: string | null;
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  txt_bearbeitungsvermerk?: string | null;
  str_status?: string | null;
  luserid?: number | null;
}
const scbau_t_massnahmen_vermerk = {
  tableName: 'scbau_t_massnahmen_vermerk',
  columns: ['dtinsert', 'fkstrid', 'strid', 'luseridinsert', 'dtedit', 'txt_bearbeitungsvermerk', 'str_status', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_massnamen', column: 'strid', $type: null as unknown as ScbauTMassnamen }, },
  $type: null as unknown as ScbauTMassnahmenVermerk,
  $input: null as unknown as ScbauTMassnahmenVermerkInput
} as const;

// Table scbau_t_massnamen
export interface ScbauTMassnamen {
  str_klassenstufe: string | null;
  dt_pruefungbpstartsoll: string | null;
  str_bsn: string | null;
  flt_ist2022: number | null;
  str_vergaberuegen: string | null;
  str_kapazitaetsveraenderunginz: string | null;
  flt_betrag51980: number | null;
  str_rotenummer: string | null;
  flt_kostenschaetzungevu: number | null;
  flt_drittmittelkostenbeteiligu: number | null;
  flt_geprueftebp: number | null;
  l_kapazitaetist: number | null;
  str_iktnummer: string | null;
  str_beschwerdeverfahren2instan: string | null;
  dt_ggfpruefungeuendesoll: string | null;
  dt_vorbereitungdervergabeundv: string | null;
  flt_drittmittelbene: number | null;
  str_finanzmittelherkunft: string | null;
  dt_baugenehmigungsverfahrens_1: string | null;
  flt_ist2025: number | null;
  flt_davonefre: number | null;
  strid: string;
  flt_ist2026: number | null;
  dt_pruefungbpchecksenbjf: string | null;
  str_insolvenz: string | null;
  ref_bedarfstraeger: string | null;
  ref_prioritaet: string | null;
  str_bedarfstraeger: string | null;
  dt_freigabenachnr27deraufla2: string | null;
  str_bereichzkennzahl: string | null;
  dt_bauuebergabeuebergabeschu_1: string | null;
  dt_erstellungbpchecksenbjf: string | null;
  dt_ggfpruefungeustartsoll: string | null;
  dt_pruefungevusenbjf: string | null;
  txt_standardanpassung: string | null;
  flt_mittelabfluss2022: number | null;
  flt_kostenberechnungbpu: number | null;
  dt_pruefungbpstartist: string | null;
  str_freigabenachnr27derauflage: string | null;
  str_anerkennungbpudurchsenbjf: string | null;
  dt_erstellungbpendesoll: string | null;
  dt_vergabeverfahrenderplanun_3: string | null;
  flt_ist2021: number | null;
  dt_planungsbeginnevusoll: string | null;
  dt_ggfergaenzungsunterlagene_1: string | null;
  ref_bautyp: string | null;
  dt_vergabeverfahrenderplanun_4: string | null;
  str_versionguid: string | null;
  flt_ist2023: number | null;
  str_typ: string | null;
  luserid: number | null;
  str_schultraeger: string | null;
  dt_fertigstellungevusoll: string | null;
  dt_baudurchfuehrungstartsoll: string | null;
  flt_drittmittelstadtumbauwest: number | null;
  dt_planungsbeginnevucheckbjf: string | null;
  txt_ergaenzendeinfosanmerkunge: string | null;
  str_datenfuehrendestelle: string | null;
  flt_aktuellegesamtkosten: number | null;
  str_kategorie: string | null;
  str_anerkennungevudurchsenbjf: string | null;
  str_unterkonto: string | null;
  str_senfinid: string | null;
  flt_mittelabfluss2025: number | null;
  dt_baudurchfuehrungstartist: string | null;
  str_bauart: string | null;
  flt_ist2020: number | null;
  dt_vorbereitungdervergabeund_1: string | null;
  dt_ggfergaenzungsunterlagene_3: string | null;
  flt_drittmittelstadtumbauost: number | null;
  flt_davonbundesmittel: number | null;
  flt_drittmittelkinvfg: number | null;
  str_freigabenachnr27deraufla_1: string | null;
  dt_ggfergaenzungsunterlageneu: string | null;
  b_versionaktuell: boolean | null;
  flt_kapazitaetsveraenderung: number | null;
  txt_bemerkungschulfachlichemas: string | null;
  flt_ist2017: number | null;
  flt_ist2018: number | null;
  dt_pruefungbpendesoll: string | null;
  luseridinsert: number | null;
  dt_vorbereitungdervergabeundve: string | null;
  dt_planungsbeginnbpuist: string | null;
  ref_verzoegerung: string | null;
  flt_mittelabfluss2021: number | null;
  flt_mittelabfluss2026: number | null;
  ref_schule: string | null;
  str_anerkennungbedarfdurchsenb: string | null;
  dt_ggfpruefungeuendeist: string | null;
  dt_erstellungbpendeist: string | null;
  str_bezeichnungdermassnahme: string | null;
  str_sporthallenteile: string | null;
  dt_fertigstellungbpusoll: string | null;
  flt_mittelabfluss2016: number | null;
  flt_mittelabfluss2019: number | null;
  str_bautyp: string | null;
  flt_aktuellegesamtkostenhhplan: number | null;
  txt_insolvenzbemerkung: string | null;
  dt_pruefungevuendesoll: string | null;
  dtinsert: string | null;
  ref_schultyp: string | null;
  dt_datenstand: string | null;
  l_kapazitaetsoll: number | null;
  dt_ggfergaenzungsunterlagene_2: string | null;
  flt_ist2024: number | null;
  dtedit: string | null;
  flt_davonsonstigedrittmittel: number | null;
  dt_baugenehmigungsverfahrene_1: string | null;
  str_projektumsetzung: string | null;
  flt_mittelabfluss2018: number | null;
  dt_fertigstellungbpuist: string | null;
  dt_vorbereitungdervergabeund_2: string | null;
  flt_davonlandesmittel: number | null;
  dt_planungsbeginnevuist: string | null;
  txt_anmerkungzuanerkennungevud: string | null;
  dt_ggfpruefungeustartist: string | null;
  str_strasse: string | null;
  l_umsetzungsjahr: number | null;
  dt_erstellungbpstartsoll: string | null;
  str_aufgabentraeger: string | null;
  ref_import: string | null;
  txt_anmerkungzuanerkennungbeda: string | null;
  dt_fertigstellungevuist: string | null;
  dt_erstellungbpstartist: string | null;
  ref_massnahmeart: string | null;
  dt_baugenehmigungsverfahrenen: string | null;
  str_kapazitaetaenderungerfolgt: string | null;
  dt_baudurchfuehrungendeist: string | null;
  str_massnmahmeart: string | null;
  ref_schultraegertyp: string | null;
  ref_aufgabentraeger: string | null;
  flt_drittmittelsonstige: number | null;
  flt_ist2019: number | null;
  flt_mittelabfluss2017: number | null;
  l_version: number | null;
  b_archiv: boolean | null;
  flt_mittelabfluss2024: number | null;
  flt_betrag51912: number | null;
  str_inventarnummer: string | null;
  flt_kostenanschlagzurbeauftrag: number | null;
  str_id: string | null;
  flt_drittmittelgrw: number | null;
  ref_bezirk: string | null;
  dt_pruefungevustartsoll: string | null;
  txt_anmerkungzuanerkennungbpud: string | null;
  dt_vergabeverfahrenderplanun_2: string | null;
  dt_baugenehmigungsverfahrenst: string | null;
  dt_vergabeverfahrenderplanung: string | null;
  dt_planungsbeginnbpusoll: string | null;
  str_kapitel: string | null;
  l_id: number | null;
  dt_bauuebergabeuebergabeschul: string | null;
  flt_mittelabfluss2023: number | null;
  str_titel: string | null;
  dt_pruefungevustartist: string | null;
  dt_vergabeverfahrenderplanun_1: string | null;
  flt_mittelabfluss2020: number | null;
  dt_pruefungevuendeist: string | null;
  ref_finanzmittelherkunft: string | null;
  str_import: string | null;
  dt_abnahmesoll: string | null;
  dt_baudurchfuehrungendesoll: string | null;
  dt_pruefungbpendeist: string | null;
  flt_ist2016: number | null;
  dt_abnahmeist: string | null;
  txt_verzoegerungenerlaeuterung: string | null;
}
export interface ScbauTMassnamenInput {
  str_klassenstufe?: string | null;
  dt_pruefungbpstartsoll?: string | null;
  str_bsn?: string | null;
  flt_ist2022?: number | null;
  str_vergaberuegen?: string | null;
  str_kapazitaetsveraenderunginz?: string | null;
  flt_betrag51980?: number | null;
  str_rotenummer?: string | null;
  flt_kostenschaetzungevu?: number | null;
  flt_drittmittelkostenbeteiligu?: number | null;
  flt_geprueftebp?: number | null;
  l_kapazitaetist?: number | null;
  str_iktnummer?: string | null;
  str_beschwerdeverfahren2instan?: string | null;
  dt_ggfpruefungeuendesoll?: string | null;
  dt_vorbereitungdervergabeundv?: string | null;
  flt_drittmittelbene?: number | null;
  str_finanzmittelherkunft?: string | null;
  dt_baugenehmigungsverfahrens_1?: string | null;
  flt_ist2025?: number | null;
  flt_davonefre?: number | null;
  strid: string;
  flt_ist2026?: number | null;
  dt_pruefungbpchecksenbjf?: string | null;
  str_insolvenz?: string | null;
  ref_bedarfstraeger?: string | null;
  ref_prioritaet?: string | null;
  str_bedarfstraeger?: string | null;
  dt_freigabenachnr27deraufla2?: string | null;
  str_bereichzkennzahl?: string | null;
  dt_bauuebergabeuebergabeschu_1?: string | null;
  dt_erstellungbpchecksenbjf?: string | null;
  dt_ggfpruefungeustartsoll?: string | null;
  dt_pruefungevusenbjf?: string | null;
  txt_standardanpassung?: string | null;
  flt_mittelabfluss2022?: number | null;
  flt_kostenberechnungbpu?: number | null;
  dt_pruefungbpstartist?: string | null;
  str_freigabenachnr27derauflage?: string | null;
  str_anerkennungbpudurchsenbjf?: string | null;
  dt_erstellungbpendesoll?: string | null;
  dt_vergabeverfahrenderplanun_3?: string | null;
  flt_ist2021?: number | null;
  dt_planungsbeginnevusoll?: string | null;
  dt_ggfergaenzungsunterlagene_1?: string | null;
  ref_bautyp?: string | null;
  dt_vergabeverfahrenderplanun_4?: string | null;
  str_versionguid?: string | null;
  flt_ist2023?: number | null;
  str_typ?: string | null;
  luserid?: number | null;
  str_schultraeger?: string | null;
  dt_fertigstellungevusoll?: string | null;
  dt_baudurchfuehrungstartsoll?: string | null;
  flt_drittmittelstadtumbauwest?: number | null;
  dt_planungsbeginnevucheckbjf?: string | null;
  txt_ergaenzendeinfosanmerkunge?: string | null;
  str_datenfuehrendestelle?: string | null;
  flt_aktuellegesamtkosten?: number | null;
  str_kategorie?: string | null;
  str_anerkennungevudurchsenbjf?: string | null;
  str_unterkonto?: string | null;
  str_senfinid?: string | null;
  flt_mittelabfluss2025?: number | null;
  dt_baudurchfuehrungstartist?: string | null;
  str_bauart?: string | null;
  flt_ist2020?: number | null;
  dt_vorbereitungdervergabeund_1?: string | null;
  dt_ggfergaenzungsunterlagene_3?: string | null;
  flt_drittmittelstadtumbauost?: number | null;
  flt_davonbundesmittel?: number | null;
  flt_drittmittelkinvfg?: number | null;
  str_freigabenachnr27deraufla_1?: string | null;
  dt_ggfergaenzungsunterlageneu?: string | null;
  b_versionaktuell?: boolean | null;
  flt_kapazitaetsveraenderung?: number | null;
  txt_bemerkungschulfachlichemas?: string | null;
  flt_ist2017?: number | null;
  flt_ist2018?: number | null;
  dt_pruefungbpendesoll?: string | null;
  luseridinsert?: number | null;
  dt_vorbereitungdervergabeundve?: string | null;
  dt_planungsbeginnbpuist?: string | null;
  ref_verzoegerung?: string | null;
  flt_mittelabfluss2021?: number | null;
  flt_mittelabfluss2026?: number | null;
  ref_schule?: string | null;
  str_anerkennungbedarfdurchsenb?: string | null;
  dt_ggfpruefungeuendeist?: string | null;
  dt_erstellungbpendeist?: string | null;
  str_bezeichnungdermassnahme?: string | null;
  str_sporthallenteile?: string | null;
  dt_fertigstellungbpusoll?: string | null;
  flt_mittelabfluss2016?: number | null;
  flt_mittelabfluss2019?: number | null;
  str_bautyp?: string | null;
  flt_aktuellegesamtkostenhhplan?: number | null;
  txt_insolvenzbemerkung?: string | null;
  dt_pruefungevuendesoll?: string | null;
  dtinsert?: string | null;
  ref_schultyp?: string | null;
  dt_datenstand?: string | null;
  l_kapazitaetsoll?: number | null;
  dt_ggfergaenzungsunterlagene_2?: string | null;
  flt_ist2024?: number | null;
  dtedit?: string | null;
  flt_davonsonstigedrittmittel?: number | null;
  dt_baugenehmigungsverfahrene_1?: string | null;
  str_projektumsetzung?: string | null;
  flt_mittelabfluss2018?: number | null;
  dt_fertigstellungbpuist?: string | null;
  dt_vorbereitungdervergabeund_2?: string | null;
  flt_davonlandesmittel?: number | null;
  dt_planungsbeginnevuist?: string | null;
  txt_anmerkungzuanerkennungevud?: string | null;
  dt_ggfpruefungeustartist?: string | null;
  str_strasse?: string | null;
  l_umsetzungsjahr?: number | null;
  dt_erstellungbpstartsoll?: string | null;
  str_aufgabentraeger?: string | null;
  ref_import?: string | null;
  txt_anmerkungzuanerkennungbeda?: string | null;
  dt_fertigstellungevuist?: string | null;
  dt_erstellungbpstartist?: string | null;
  ref_massnahmeart?: string | null;
  dt_baugenehmigungsverfahrenen?: string | null;
  str_kapazitaetaenderungerfolgt?: string | null;
  dt_baudurchfuehrungendeist?: string | null;
  str_massnmahmeart?: string | null;
  ref_schultraegertyp?: string | null;
  ref_aufgabentraeger?: string | null;
  flt_drittmittelsonstige?: number | null;
  flt_ist2019?: number | null;
  flt_mittelabfluss2017?: number | null;
  l_version?: number | null;
  b_archiv?: boolean | null;
  flt_mittelabfluss2024?: number | null;
  flt_betrag51912?: number | null;
  str_inventarnummer?: string | null;
  flt_kostenanschlagzurbeauftrag?: number | null;
  str_id?: string | null;
  flt_drittmittelgrw?: number | null;
  ref_bezirk?: string | null;
  dt_pruefungevustartsoll?: string | null;
  txt_anmerkungzuanerkennungbpud?: string | null;
  dt_vergabeverfahrenderplanun_2?: string | null;
  dt_baugenehmigungsverfahrenst?: string | null;
  dt_vergabeverfahrenderplanung?: string | null;
  dt_planungsbeginnbpusoll?: string | null;
  str_kapitel?: string | null;
  l_id?: number | null;
  dt_bauuebergabeuebergabeschul?: string | null;
  flt_mittelabfluss2023?: number | null;
  str_titel?: string | null;
  dt_pruefungevustartist?: string | null;
  dt_vergabeverfahrenderplanun_1?: string | null;
  flt_mittelabfluss2020?: number | null;
  dt_pruefungevuendeist?: string | null;
  ref_finanzmittelherkunft?: string | null;
  str_import?: string | null;
  dt_abnahmesoll?: string | null;
  dt_baudurchfuehrungendesoll?: string | null;
  dt_pruefungbpendeist?: string | null;
  flt_ist2016?: number | null;
  dt_abnahmeist?: string | null;
  txt_verzoegerungenerlaeuterung?: string | null;
}
const scbau_t_massnamen = {
  tableName: 'scbau_t_massnamen',
  columns: ['str_klassenstufe', 'dt_pruefungbpstartsoll', 'str_bsn', 'flt_ist2022', 'str_vergaberuegen', 'str_kapazitaetsveraenderunginz', 'flt_betrag51980', 'str_rotenummer', 'flt_kostenschaetzungevu', 'flt_drittmittelkostenbeteiligu', 'flt_geprueftebp', 'l_kapazitaetist', 'str_iktnummer', 'str_beschwerdeverfahren2instan', 'dt_ggfpruefungeuendesoll', 'dt_vorbereitungdervergabeundv', 'flt_drittmittelbene', 'str_finanzmittelherkunft', 'dt_baugenehmigungsverfahrens_1', 'flt_ist2025', 'flt_davonefre', 'strid', 'flt_ist2026', 'dt_pruefungbpchecksenbjf', 'str_insolvenz', 'ref_bedarfstraeger', 'ref_prioritaet', 'str_bedarfstraeger', 'dt_freigabenachnr27deraufla2', 'str_bereichzkennzahl', 'dt_bauuebergabeuebergabeschu_1', 'dt_erstellungbpchecksenbjf', 'dt_ggfpruefungeustartsoll', 'dt_pruefungevusenbjf', 'txt_standardanpassung', 'flt_mittelabfluss2022', 'flt_kostenberechnungbpu', 'dt_pruefungbpstartist', 'str_freigabenachnr27derauflage', 'str_anerkennungbpudurchsenbjf', 'dt_erstellungbpendesoll', 'dt_vergabeverfahrenderplanun_3', 'flt_ist2021', 'dt_planungsbeginnevusoll', 'dt_ggfergaenzungsunterlagene_1', 'ref_bautyp', 'dt_vergabeverfahrenderplanun_4', 'str_versionguid', 'flt_ist2023', 'str_typ', 'luserid', 'str_schultraeger', 'dt_fertigstellungevusoll', 'dt_baudurchfuehrungstartsoll', 'flt_drittmittelstadtumbauwest', 'dt_planungsbeginnevucheckbjf', 'txt_ergaenzendeinfosanmerkunge', 'str_datenfuehrendestelle', 'flt_aktuellegesamtkosten', 'str_kategorie', 'str_anerkennungevudurchsenbjf', 'str_unterkonto', 'str_senfinid', 'flt_mittelabfluss2025', 'dt_baudurchfuehrungstartist', 'str_bauart', 'flt_ist2020', 'dt_vorbereitungdervergabeund_1', 'dt_ggfergaenzungsunterlagene_3', 'flt_drittmittelstadtumbauost', 'flt_davonbundesmittel', 'flt_drittmittelkinvfg', 'str_freigabenachnr27deraufla_1', 'dt_ggfergaenzungsunterlageneu', 'b_versionaktuell', 'flt_kapazitaetsveraenderung', 'txt_bemerkungschulfachlichemas', 'flt_ist2017', 'flt_ist2018', 'dt_pruefungbpendesoll', 'luseridinsert', 'dt_vorbereitungdervergabeundve', 'dt_planungsbeginnbpuist', 'ref_verzoegerung', 'flt_mittelabfluss2021', 'flt_mittelabfluss2026', 'ref_schule', 'str_anerkennungbedarfdurchsenb', 'dt_ggfpruefungeuendeist', 'dt_erstellungbpendeist', 'str_bezeichnungdermassnahme', 'str_sporthallenteile', 'dt_fertigstellungbpusoll', 'flt_mittelabfluss2016', 'flt_mittelabfluss2019', 'str_bautyp', 'flt_aktuellegesamtkostenhhplan', 'txt_insolvenzbemerkung', 'dt_pruefungevuendesoll', 'dtinsert', 'ref_schultyp', 'dt_datenstand', 'l_kapazitaetsoll', 'dt_ggfergaenzungsunterlagene_2', 'flt_ist2024', 'dtedit', 'flt_davonsonstigedrittmittel', 'dt_baugenehmigungsverfahrene_1', 'str_projektumsetzung', 'flt_mittelabfluss2018', 'dt_fertigstellungbpuist', 'dt_vorbereitungdervergabeund_2', 'flt_davonlandesmittel', 'dt_planungsbeginnevuist', 'txt_anmerkungzuanerkennungevud', 'dt_ggfpruefungeustartist', 'str_strasse', 'l_umsetzungsjahr', 'dt_erstellungbpstartsoll', 'str_aufgabentraeger', 'ref_import', 'txt_anmerkungzuanerkennungbeda', 'dt_fertigstellungevuist', 'dt_erstellungbpstartist', 'ref_massnahmeart', 'dt_baugenehmigungsverfahrenen', 'str_kapazitaetaenderungerfolgt', 'dt_baudurchfuehrungendeist', 'str_massnmahmeart', 'ref_schultraegertyp', 'ref_aufgabentraeger', 'flt_drittmittelsonstige', 'flt_ist2019', 'flt_mittelabfluss2017', 'l_version', 'b_archiv', 'flt_mittelabfluss2024', 'flt_betrag51912', 'str_inventarnummer', 'flt_kostenanschlagzurbeauftrag', 'str_id', 'flt_drittmittelgrw', 'ref_bezirk', 'dt_pruefungevustartsoll', 'txt_anmerkungzuanerkennungbpud', 'dt_vergabeverfahrenderplanun_2', 'dt_baugenehmigungsverfahrenst', 'dt_vergabeverfahrenderplanung', 'dt_planungsbeginnbpusoll', 'str_kapitel', 'l_id', 'dt_bauuebergabeuebergabeschul', 'flt_mittelabfluss2023', 'str_titel', 'dt_pruefungevustartist', 'dt_vergabeverfahrenderplanun_1', 'flt_mittelabfluss2020', 'dt_pruefungevuendeist', 'ref_finanzmittelherkunft', 'str_import', 'dt_abnahmesoll', 'dt_baudurchfuehrungendesoll', 'dt_pruefungbpendeist', 'flt_ist2016', 'dt_abnahmeist', 'txt_verzoegerungenerlaeuterung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_bedarfstraeger: { table: 'scbau_kat_bedarfstraeger', column: 'strid', $type: null as unknown as ScbauKatBedarfstraeger },
    ref_prioritaet: { table: 'scbau_kat_prioritaet', column: 'strid', $type: null as unknown as ScbauKatPrioritaet },
    ref_bautyp: { table: 'scbau_kat_bautyp', column: 'strid', $type: null as unknown as ScbauKatBautyp },
    ref_verzoegerung: { table: 'scbau_kat_verzoegerungen', column: 'strid', $type: null as unknown as ScbauKatVerzoegerungen },
    ref_schule: { table: 'katalog_schulen', column: 'strid', $type: null as unknown as KatalogSchulen },
    ref_schultyp: { table: 'scbau_kat_schultyp', column: 'strid', $type: null as unknown as ScbauKatSchultyp },
    ref_import: { table: 'scbau_t_import', column: 'strid', $type: null as unknown as ScbauTImport },
    ref_massnahmeart: { table: 'scbau_kat_massnahmeart', column: 'strid', $type: null as unknown as ScbauKatMassnahmeart },
    ref_schultraegertyp: { table: 'scbau_kat_schultraegertyp', column: 'strid', $type: null as unknown as ScbauKatSchultraegertyp },
    ref_aufgabentraeger: { table: 'scbau_kat_aufgabentraeger', column: 'strid', $type: null as unknown as ScbauKatAufgabentraeger },
    ref_bezirk: { table: 'katalog_bezirke', column: 'strid', $type: null as unknown as KatalogBezirke },
    ref_finanzmittelherkunft: { table: 'scbau_kat_mittelherkunft', column: 'strid', $type: null as unknown as ScbauKatMittelherkunft },
  },
  $type: null as unknown as ScbauTMassnamen,
  $input: null as unknown as ScbauTMassnamenInput
} as const;

// Table scbau_t_schulstatistik
export interface ScbauTSchulstatistik {
  flt_ist07bis10: number | null;
  flt_ist11bis12bzw13: number | null;
  flt_soll07bis10: number | null;
  luserid: number | null;
  dtedit: string | null;
  flt_ist01bis06: number | null;
  ref_schule: string | null;
  flt_soll01bis06: number | null;
  str_zeitraum: string | null;
  strid: string;
  luseridinsert: number | null;
  flt_istgesamt: number | null;
  dtinsert: string | null;
  flt_soll05bis06: number | null;
  flt_soll11bis12bzw13: number | null;
}
export interface ScbauTSchulstatistikInput {
  flt_ist07bis10?: number | null;
  flt_ist11bis12bzw13?: number | null;
  flt_soll07bis10?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  flt_ist01bis06?: number | null;
  ref_schule?: string | null;
  flt_soll01bis06?: number | null;
  str_zeitraum?: string | null;
  strid: string;
  luseridinsert?: number | null;
  flt_istgesamt?: number | null;
  dtinsert?: string | null;
  flt_soll05bis06?: number | null;
  flt_soll11bis12bzw13?: number | null;
}
const scbau_t_schulstatistik = {
  tableName: 'scbau_t_schulstatistik',
  columns: ['flt_ist07bis10', 'flt_ist11bis12bzw13', 'flt_soll07bis10', 'luserid', 'dtedit', 'flt_ist01bis06', 'ref_schule', 'flt_soll01bis06', 'str_zeitraum', 'strid', 'luseridinsert', 'flt_istgesamt', 'dtinsert', 'flt_soll05bis06', 'flt_soll11bis12bzw13'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_schule: { table: 'katalog_schulen', column: 'strid', $type: null as unknown as KatalogSchulen }, },
  $type: null as unknown as ScbauTSchulstatistik,
  $input: null as unknown as ScbauTSchulstatistikInput
} as const;

// Table sf_t_schulferien
export interface SfTSchulferien {
  dt_beginn: string | null;
  str_schulferien: string | null;
  dt_ende: string | null;
  dtedit: string | null;
  l_jahr: number | null;
  luseridinsert: number | null;
  dt_ende2: string | null;
  strid: string;
  luserid: number | null;
  dtinsert: string | null;
}
export interface SfTSchulferienInput {
  dt_beginn?: string | null;
  str_schulferien?: string | null;
  dt_ende?: string | null;
  dtedit?: string | null;
  l_jahr?: number | null;
  luseridinsert?: number | null;
  dt_ende2?: string | null;
  strid: string;
  luserid?: number | null;
  dtinsert?: string | null;
}
const sf_t_schulferien = {
  tableName: 'sf_t_schulferien',
  columns: ['dt_beginn', 'str_schulferien', 'dt_ende', 'dtedit', 'l_jahr', 'luseridinsert', 'dt_ende2', 'strid', 'luserid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as SfTSchulferien,
  $input: null as unknown as SfTSchulferienInput
} as const;

// Table t_bilder
export interface TBilder {
  l_fileinformation: number | null;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  strid: string;
  luseridinsert: number | null;
  str_titel: string | null;
}
export interface TBilderInput {
  l_fileinformation?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strid: string;
  luseridinsert?: number | null;
  str_titel?: string | null;
}
const t_bilder = {
  tableName: 't_bilder',
  columns: ['l_fileinformation', 'luserid', 'dtedit', 'dtinsert', 'strid', 'luseridinsert', 'str_titel'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as TBilder,
  $input: null as unknown as TBilderInput
} as const;

// Table t_smapp
export interface TSmapp {
  txt_redaktion: string | null;
  b_freigabe: boolean | null;
  str_ersteller: string | null;
  str_titel: string | null;
  dtinsert: string | null;
  strid: string;
  luserid: number | null;
  b_veroeffentlicht: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  txt_einleitungstext: string | null;
  txt_leserechte: string | null;
  l_fileinformation: number | null;
}
export interface TSmappInput {
  txt_redaktion?: string | null;
  b_freigabe?: boolean | null;
  str_ersteller?: string | null;
  str_titel?: string | null;
  dtinsert?: string | null;
  strid: string;
  luserid?: number | null;
  b_veroeffentlicht?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  txt_einleitungstext?: string | null;
  txt_leserechte?: string | null;
  l_fileinformation?: number | null;
}
const t_smapp = {
  tableName: 't_smapp',
  columns: ['txt_redaktion', 'b_freigabe', 'str_ersteller', 'str_titel', 'dtinsert', 'strid', 'luserid', 'b_veroeffentlicht', 'luseridinsert', 'dtedit', 'txt_einleitungstext', 'txt_leserechte', 'l_fileinformation'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as TSmapp,
  $input: null as unknown as TSmappInput
} as const;

// Table t_smapp_absatz
export interface TSmappAbsatz {
  dtedit: string | null;
  strid: string;
  str_absatztitel: string | null;
  l_sortierung: number | null;
  fkstrid: string | null;
  luserid: number | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  txt_text: string | null;
}
export interface TSmappAbsatzInput {
  dtedit?: string | null;
  strid: string;
  str_absatztitel?: string | null;
  l_sortierung?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  txt_text?: string | null;
}
const t_smapp_absatz = {
  tableName: 't_smapp_absatz',
  columns: ['dtedit', 'strid', 'str_absatztitel', 'l_sortierung', 'fkstrid', 'luserid', 'dtinsert', 'luseridinsert', 'txt_text'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp_seite', column: 'strid', $type: null as unknown as TSmappSeite }, },
  $type: null as unknown as TSmappAbsatz,
  $input: null as unknown as TSmappAbsatzInput
} as const;

// Table t_smapp_asp
export interface TSmappAsp {
  str_sortierung: string | null;
  luseridinsert: number | null;
  strid: string;
  fkstrid: string | null;
  txt_seiten: string | null;
  dtedit: string | null;
  b_startseite: boolean | null;
  luserid: number | null;
  l_ansprechpartner: number | null;
  dtinsert: string | null;
  str_ansprechpartner: string | null;
}
export interface TSmappAspInput {
  str_sortierung?: string | null;
  luseridinsert?: number | null;
  strid: string;
  fkstrid?: string | null;
  txt_seiten?: string | null;
  dtedit?: string | null;
  b_startseite?: boolean | null;
  luserid?: number | null;
  l_ansprechpartner?: number | null;
  dtinsert?: string | null;
  str_ansprechpartner?: string | null;
}
const t_smapp_asp = {
  tableName: 't_smapp_asp',
  columns: ['str_sortierung', 'luseridinsert', 'strid', 'fkstrid', 'txt_seiten', 'dtedit', 'b_startseite', 'luserid', 'l_ansprechpartner', 'dtinsert', 'str_ansprechpartner'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp', column: 'strid', $type: null as unknown as TSmapp }, },
  $type: null as unknown as TSmappAsp,
  $input: null as unknown as TSmappAspInput
} as const;

// Table t_smapp_dokumente
export interface TSmappDokumente {
  dtinsert: string | null;
  l_fileinformation: number | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  str_titel: string | null;
  luserid: number | null;
  strid: string;
  dtedit: string | null;
  l_sortierung: number | null;
}
export interface TSmappDokumenteInput {
  dtinsert?: string | null;
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  str_titel?: string | null;
  luserid?: number | null;
  strid: string;
  dtedit?: string | null;
  l_sortierung?: number | null;
}
const t_smapp_dokumente = {
  tableName: 't_smapp_dokumente',
  columns: ['dtinsert', 'l_fileinformation', 'luseridinsert', 'fkstrid', 'str_titel', 'luserid', 'strid', 'dtedit', 'l_sortierung'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp_seite', column: 'strid', $type: null as unknown as TSmappSeite }, },
  $type: null as unknown as TSmappDokumente,
  $input: null as unknown as TSmappDokumenteInput
} as const;

// Table t_smapp_seite
export interface TSmappSeite {
  txt_zusammenfassung: string | null;
  str_farbe: string | null;
  str_ueberschrift: string | null;
  fkstrid: string | null;
  strid: string;
  luseridinsert: number | null;
  dtedit: string | null;
  ref_d96b27f2: string | null;
  luserid: number | null;
  l_sortierung: number | null;
  dtinsert: string | null;
}
export interface TSmappSeiteInput {
  txt_zusammenfassung?: string | null;
  str_farbe?: string | null;
  str_ueberschrift?: string | null;
  fkstrid?: string | null;
  strid: string;
  luseridinsert?: number | null;
  dtedit?: string | null;
  ref_d96b27f2?: string | null;
  luserid?: number | null;
  l_sortierung?: number | null;
  dtinsert?: string | null;
}
const t_smapp_seite = {
  tableName: 't_smapp_seite',
  columns: ['txt_zusammenfassung', 'str_farbe', 'str_ueberschrift', 'fkstrid', 'strid', 'luseridinsert', 'dtedit', 'ref_d96b27f2', 'luserid', 'l_sortierung', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 't_smapp', column: 'strid', $type: null as unknown as TSmapp },
    ref_d96b27f2: { table: 't_bilder', column: 'strid', $type: null as unknown as TBilder },
  },
  $type: null as unknown as TSmappSeite,
  $input: null as unknown as TSmappSeiteInput
} as const;

// Table t_smapp_seite_kapitel
export interface TSmappSeiteKapitel {
  dtinsert: string | null;
  dtedit: string | null;
  str_ueberschrift: string | null;
  fkstrid: string | null;
  strid: string;
  luseridinsert: number | null;
  l_sortierung: number | null;
  luserid: number | null;
  txt_inhalt: string | null;
}
export interface TSmappSeiteKapitelInput {
  dtinsert?: string | null;
  dtedit?: string | null;
  str_ueberschrift?: string | null;
  fkstrid?: string | null;
  strid: string;
  luseridinsert?: number | null;
  l_sortierung?: number | null;
  luserid?: number | null;
  txt_inhalt?: string | null;
}
const t_smapp_seite_kapitel = {
  tableName: 't_smapp_seite_kapitel',
  columns: ['dtinsert', 'dtedit', 'str_ueberschrift', 'fkstrid', 'strid', 'luseridinsert', 'l_sortierung', 'luserid', 'txt_inhalt'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp_seite', column: 'strid', $type: null as unknown as TSmappSeite }, },
  $type: null as unknown as TSmappSeiteKapitel,
  $input: null as unknown as TSmappSeiteKapitelInput
} as const;

// Table tsk_categories
export interface TskCategories {
  txt_description: string | null;
  dtinsert: string | null;
  str_color_back: string | null;
  b_create_sharegroup: boolean | null;
  txt_responsible: string | null;
  l_fileinformation: number | null;
  strid: string;
  dt_to: string | null;
  luserid: number | null;
  str_title: string | null;
  l_fileinformation_1: number | null;
  b_archiv: boolean | null;
  str_share_group: string | null;
  b_notify: boolean | null;
  b_change_distributor: boolean | null;
  dtedit: string | null;
  b_share_group: boolean | null;
  luseridinsert: number | null;
  b_change_resp: boolean | null;
  txt_distributor: string | null;
  dt_from: string | null;
  str_sichtbarkeit: string | null;
  str_color_text: string | null;
}
export interface TskCategoriesInput {
  txt_description?: string | null;
  dtinsert?: string | null;
  str_color_back?: string | null;
  b_create_sharegroup?: boolean | null;
  txt_responsible?: string | null;
  l_fileinformation?: number | null;
  strid: string;
  dt_to?: string | null;
  luserid?: number | null;
  str_title?: string | null;
  l_fileinformation_1?: number | null;
  b_archiv?: boolean | null;
  str_share_group?: string | null;
  b_notify?: boolean | null;
  b_change_distributor?: boolean | null;
  dtedit?: string | null;
  b_share_group?: boolean | null;
  luseridinsert?: number | null;
  b_change_resp?: boolean | null;
  txt_distributor?: string | null;
  dt_from?: string | null;
  str_sichtbarkeit?: string | null;
  str_color_text?: string | null;
}
const tsk_categories = {
  tableName: 'tsk_categories',
  columns: ['txt_description', 'dtinsert', 'str_color_back', 'b_create_sharegroup', 'txt_responsible', 'l_fileinformation', 'strid', 'dt_to', 'luserid', 'str_title', 'l_fileinformation_1', 'b_archiv', 'str_share_group', 'b_notify', 'b_change_distributor', 'dtedit', 'b_share_group', 'luseridinsert', 'b_change_resp', 'txt_distributor', 'dt_from', 'str_sichtbarkeit', 'str_color_text'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as TskCategories,
  $input: null as unknown as TskCategoriesInput
} as const;

// Table tsk_history
export interface TskHistory {
  dtedit: string | null;
  luseridinsert: number | null;
  txt_history: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  luserid: number | null;
  strid: string;
}
export interface TskHistoryInput {
  dtedit?: string | null;
  luseridinsert?: number | null;
  txt_history?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  strid: string;
}
const tsk_history = {
  tableName: 'tsk_history',
  columns: ['dtedit', 'luseridinsert', 'txt_history', 'fkstrid', 'dtinsert', 'luserid', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'tsk_task', column: 'strid', $type: null as unknown as TskTask }, },
  $type: null as unknown as TskHistory,
  $input: null as unknown as TskHistoryInput
} as const;

// Table tsk_projectmember
export interface TskProjectmember {
  l_userid: number | null;
  str_status: string | null;
  str_recid: string | null;
  lid: number;
  b_sent: boolean | null;
  str_username: string | null;
  fkstrid: string | null;
  str_notification: string | null;
  dtinsert: string | null;
  b_notification: boolean | null;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  ref_828655d8: number | null;
  str_verteiler: string | null;
  b_favorite: boolean | null;
}
export interface TskProjectmemberInput {
  l_userid?: number | null;
  str_status?: string | null;
  str_recid?: string | null;
  lid: number;
  b_sent?: boolean | null;
  str_username?: string | null;
  fkstrid?: string | null;
  str_notification?: string | null;
  dtinsert?: string | null;
  b_notification?: boolean | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  ref_828655d8?: number | null;
  str_verteiler?: string | null;
  b_favorite?: boolean | null;
}
const tsk_projectmember = {
  tableName: 'tsk_projectmember',
  columns: ['l_userid', 'str_status', 'str_recid', 'lid', 'b_sent', 'str_username', 'fkstrid', 'str_notification', 'dtinsert', 'b_notification', 'luseridinsert', 'dtedit', 'luserid', 'ref_828655d8', 'str_verteiler', 'b_favorite'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'tsk_categories', column: 'strid', $type: null as unknown as TskCategories }, },
  $type: null as unknown as TskProjectmember,
  $input: null as unknown as TskProjectmemberInput
} as const;

// Table tsk_task
export interface TskTask {
  str_state: string | null;
  dtedit: string | null;
  ref_c0c47245: number | null;
  luserid: number | null;
  txt_bemerkungen: string | null;
  str_title: string | null;
  str_share_group: string | null;
  b_email_sent: boolean | null;
  l_duration_min: number | null;
  b_change_share: boolean | null;
  l_closed: number | null;
  dt_tobedoneto: string | null;
  b_sharegroup: boolean | null;
  l_datei: number | null;
  strid: string;
  dt_from: string | null;
  ref_5af284d8: string | null;
  b_share: boolean | null;
  ref_91f93e92: string | null;
  b_change_responsible: boolean | null;
  ref_2648dfa5: number | null;
  luseridinsert: number | null;
  b_email_status: boolean | null;
  txt_closed: string | null;
  l_chart: number | null;
  dtinsert: string | null;
  dt_date: string | null;
  l_duration_h: number | null;
  str_project: string | null;
  str_importance: string | null;
  b_important: boolean | null;
  dt_closed: string | null;
  b_email_reminder: boolean | null;
}
export interface TskTaskInput {
  str_state?: string | null;
  dtedit?: string | null;
  ref_c0c47245?: number | null;
  luserid?: number | null;
  txt_bemerkungen?: string | null;
  str_title?: string | null;
  str_share_group?: string | null;
  b_email_sent?: boolean | null;
  l_duration_min?: number | null;
  b_change_share?: boolean | null;
  l_closed?: number | null;
  dt_tobedoneto?: string | null;
  b_sharegroup?: boolean | null;
  l_datei?: number | null;
  strid: string;
  dt_from?: string | null;
  ref_5af284d8?: string | null;
  b_share?: boolean | null;
  ref_91f93e92?: string | null;
  b_change_responsible?: boolean | null;
  ref_2648dfa5?: number | null;
  luseridinsert?: number | null;
  b_email_status?: boolean | null;
  txt_closed?: string | null;
  l_chart?: number | null;
  dtinsert?: string | null;
  dt_date?: string | null;
  l_duration_h?: number | null;
  str_project?: string | null;
  str_importance?: string | null;
  b_important?: boolean | null;
  dt_closed?: string | null;
  b_email_reminder?: boolean | null;
}
const tsk_task = {
  tableName: 'tsk_task',
  columns: ['str_state', 'dtedit', 'ref_c0c47245', 'luserid', 'txt_bemerkungen', 'str_title', 'str_share_group', 'b_email_sent', 'l_duration_min', 'b_change_share', 'l_closed', 'dt_tobedoneto', 'b_sharegroup', 'l_datei', 'strid', 'dt_from', 'ref_5af284d8', 'b_share', 'ref_91f93e92', 'b_change_responsible', 'ref_2648dfa5', 'luseridinsert', 'b_email_status', 'txt_closed', 'l_chart', 'dtinsert', 'dt_date', 'l_duration_h', 'str_project', 'str_importance', 'b_important', 'dt_closed', 'b_email_reminder'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_5af284d8: { table: 'tsk_task', column: 'strid', $type: null as unknown as TskTask },
    ref_91f93e92: { table: 'tsk_categories', column: 'strid', $type: null as unknown as TskCategories },
  },
  $type: null as unknown as TskTask,
  $input: null as unknown as TskTaskInput
} as const;

// Table val_kat_standorte
export interface ValKatStandorte {
  luseridinsert: number | null;
  strid: string;
  dtedit: string | null;
  dtinsert: string | null;
  luserid: number | null;
  str_standort: string | null;
}
export interface ValKatStandorteInput {
  luseridinsert?: number | null;
  strid: string;
  dtedit?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  str_standort?: string | null;
}
const val_kat_standorte = {
  tableName: 'val_kat_standorte',
  columns: ['luseridinsert', 'strid', 'dtedit', 'dtinsert', 'luserid', 'str_standort'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ValKatStandorte,
  $input: null as unknown as ValKatStandorteInput
} as const;

// Table vbluser
export interface Vbluser {
  lid: number | null;
  strfullname: string | null;
  strpwdhash: string | null;
  strmiddlename: string | null;
  strpobox: string | null;
  strimg_filename: string | null;
  lgender: number | null;
  kanbanmandant: string | null;
  strphonepager: string | null;
  strextlogin1: string | null;
  strlogin: string | null;
  strlastname: string | null;
  bshowuser: boolean | null;
  strloginlwr: string | null;
  lextprimgrpid: number | null;
  strphonefax: string | null;
  strimg_contenttype: string | null;
  lloginattempts: number | null;
  lproxyperson: number | null;
  strimg_url: string | null;
  strpostalcode: string | null;
  strphonemobilehome: string | null;
  strextpwd2: string | null;
  stremployeeno: string | null;
  strdefaultlang: string | null;
  bislockable: boolean | null;
  strstreet: string | null;
  strphonemobilebiz: string | null;
  dtpwdchanged: string | null;
  strdomainlwr: string | null;
  strfirstname: string | null;
  strisocountrycode: string | null;
  strextpwd1: string | null;
  lboss: number | null;
  strposcode: string | null;
  strtitle: string | null;
  strextlogin3: string | null;
  strextlogin2: string | null;
  dtbirth: string | null;
  bmustnotchangepass: boolean | null;
  dtenter: string | null;
  dtimg_lastmodified: string | null;
  strtimezone: string | null;
  strstate: string | null;
  strdefaultlayoutmobile: string | null;
  strcity: string | null;
  strdomain: string | null;
  strdefaultlocale: string | null;
  strphonehome: string | null;
  strextpwd3: string | null;
  strdefaultlayout: string | null;
  strinfo: string | null;
  strphonebiz: string | null;
  llocked: number | null;
  strofficenr: string | null;
  bmustchangepass: boolean | null;
  strmailhome: string | null;
  strmailbiz: string | null;
  bpwdexpires: boolean | null;
  strcompany: string | null;
  strimg_meta: string | null;
  strcountry: string | null;
  strsalt: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VbluserInput {
  lid?: number | null;
  strfullname?: string | null;
  strpwdhash?: string | null;
  strmiddlename?: string | null;
  strpobox?: string | null;
  strimg_filename?: string | null;
  lgender?: number | null;
  kanbanmandant?: string | null;
  strphonepager?: string | null;
  strextlogin1?: string | null;
  strlogin?: string | null;
  strlastname?: string | null;
  bshowuser?: boolean | null;
  strloginlwr?: string | null;
  lextprimgrpid?: number | null;
  strphonefax?: string | null;
  strimg_contenttype?: string | null;
  lloginattempts?: number | null;
  lproxyperson?: number | null;
  strimg_url?: string | null;
  strpostalcode?: string | null;
  strphonemobilehome?: string | null;
  strextpwd2?: string | null;
  stremployeeno?: string | null;
  strdefaultlang?: string | null;
  bislockable?: boolean | null;
  strstreet?: string | null;
  strphonemobilebiz?: string | null;
  dtpwdchanged?: string | null;
  strdomainlwr?: string | null;
  strfirstname?: string | null;
  strisocountrycode?: string | null;
  strextpwd1?: string | null;
  lboss?: number | null;
  strposcode?: string | null;
  strtitle?: string | null;
  strextlogin3?: string | null;
  strextlogin2?: string | null;
  dtbirth?: string | null;
  bmustnotchangepass?: boolean | null;
  dtenter?: string | null;
  dtimg_lastmodified?: string | null;
  strtimezone?: string | null;
  strstate?: string | null;
  strdefaultlayoutmobile?: string | null;
  strcity?: string | null;
  strdomain?: string | null;
  strdefaultlocale?: string | null;
  strphonehome?: string | null;
  strextpwd3?: string | null;
  strdefaultlayout?: string | null;
  strinfo?: string | null;
  strphonebiz?: string | null;
  llocked?: number | null;
  strofficenr?: string | null;
  bmustchangepass?: boolean | null;
  strmailhome?: string | null;
  strmailbiz?: string | null;
  bpwdexpires?: boolean | null;
  strcompany?: string | null;
  strimg_meta?: string | null;
  strcountry?: string | null;
  strsalt?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vbluser = {
  tableName: 'vbluser',
  columns: ['lid', 'strfullname', 'strpwdhash', 'strmiddlename', 'strpobox', 'strimg_filename', 'lgender', 'kanbanmandant', 'strphonepager', 'strextlogin1', 'strlogin', 'strlastname', 'bshowuser', 'strloginlwr', 'lextprimgrpid', 'strphonefax', 'strimg_contenttype', 'lloginattempts', 'lproxyperson', 'strimg_url', 'strpostalcode', 'strphonemobilehome', 'strextpwd2', 'stremployeeno', 'strdefaultlang', 'bislockable', 'strstreet', 'strphonemobilebiz', 'dtpwdchanged', 'strdomainlwr', 'strfirstname', 'strisocountrycode', 'strextpwd1', 'lboss', 'strposcode', 'strtitle', 'strextlogin3', 'strextlogin2', 'dtbirth', 'bmustnotchangepass', 'dtenter', 'dtimg_lastmodified', 'strtimezone', 'strstate', 'strdefaultlayoutmobile', 'strcity', 'strdomain', 'strdefaultlocale', 'strphonehome', 'strextpwd3', 'strdefaultlayout', 'strinfo', 'strphonebiz', 'llocked', 'strofficenr', 'bmustchangepass', 'strmailhome', 'strmailbiz', 'bpwdexpires', 'strcompany', 'strimg_meta', 'strcountry', 'strsalt', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vbluser,
  $input: null as unknown as VbluserInput
} as const;

// Table vdscontainer
export interface Vdscontainer {
  lid: number | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdscontainerInput {
  lid?: number | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdscontainer = {
  tableName: 'vdscontainer',
  columns: ['lid', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdscontainer,
  $input: null as unknown as VdscontainerInput
} as const;

// Table vdscountry
export interface Vdscountry {
  lid: number | null;
  strfriendlyname: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdscountryInput {
  lid?: number | null;
  strfriendlyname?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdscountry = {
  tableName: 'vdscountry',
  columns: ['lid', 'strfriendlyname', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdscountry,
  $input: null as unknown as VdscountryInput
} as const;

// Table vdsdistlist
export interface Vdsdistlist {
  lid: number | null;
  strmail: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsdistlistInput {
  lid?: number | null;
  strmail?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsdistlist = {
  tableName: 'vdsdistlist',
  columns: ['lid', 'strmail', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsdistlist,
  $input: null as unknown as VdsdistlistInput
} as const;

// Table vdsgroup
export interface Vdsgroup {
  lid: number | null;
  lextprimgrptkn: number | null;
  strmail: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsgroupInput {
  lid?: number | null;
  lextprimgrptkn?: number | null;
  strmail?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsgroup = {
  tableName: 'vdsgroup',
  columns: ['lid', 'lextprimgrptkn', 'strmail', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsgroup,
  $input: null as unknown as VdsgroupInput
} as const;

// Table vdslocality
export interface Vdslocality {
  lid: number | null;
  strstate: string | null;
  strstreet: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdslocalityInput {
  lid?: number | null;
  strstate?: string | null;
  strstreet?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdslocality = {
  tableName: 'vdslocality',
  columns: ['lid', 'strstate', 'strstreet', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdslocality,
  $input: null as unknown as VdslocalityInput
} as const;

// Table vdsobject
export interface Vdsobject {
  lid: number | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsobjectInput {
  lid?: number | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsobject = {
  tableName: 'vdsobject',
  columns: ['lid', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsobject,
  $input: null as unknown as VdsobjectInput
} as const;

// Table vdsorganization
export interface Vdsorganization {
  lid: number | null;
  strstate: string | null;
  strpobox: string | null;
  strstreet: string | null;
  strisocountrycode: string | null;
  strcity: string | null;
  strcountry: string | null;
  strpostalcode: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsorganizationInput {
  lid?: number | null;
  strstate?: string | null;
  strpobox?: string | null;
  strstreet?: string | null;
  strisocountrycode?: string | null;
  strcity?: string | null;
  strcountry?: string | null;
  strpostalcode?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsorganization = {
  tableName: 'vdsorganization',
  columns: ['lid', 'strstate', 'strpobox', 'strstreet', 'strisocountrycode', 'strcity', 'strcountry', 'strpostalcode', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsorganization,
  $input: null as unknown as VdsorganizationInput
} as const;

// Table vdsorgunit
export interface Vdsorgunit {
  lid: number | null;
  strstreet: string | null;
  strpobox: string | null;
  strisocountrycode: string | null;
  strpostalcode: string | null;
  strstate: string | null;
  strcity: string | null;
  strcountry: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsorgunitInput {
  lid?: number | null;
  strstreet?: string | null;
  strpobox?: string | null;
  strisocountrycode?: string | null;
  strpostalcode?: string | null;
  strstate?: string | null;
  strcity?: string | null;
  strcountry?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsorgunit = {
  tableName: 'vdsorgunit',
  columns: ['lid', 'strstreet', 'strpobox', 'strisocountrycode', 'strpostalcode', 'strstate', 'strcity', 'strcountry', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsorgunit,
  $input: null as unknown as VdsorgunitInput
} as const;

// Table vdsrole
export interface Vdsrole {
  lid: number | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsroleInput {
  lid?: number | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsrole = {
  tableName: 'vdsrole',
  columns: ['lid', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsrole,
  $input: null as unknown as VdsroleInput
} as const;

// Table vdsset
export interface Vdsset {
  lid: number | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdssetInput {
  lid?: number | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsset = {
  tableName: 'vdsset',
  columns: ['lid', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsset,
  $input: null as unknown as VdssetInput
} as const;

// Table vdstenant
export interface Vdstenant {
  lid: number | null;
  strpobox: string | null;
  strstreet: string | null;
  strisocountrycode: string | null;
  strcountry: string | null;
  strcity: string | null;
  strstate: string | null;
  strpostalcode: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdstenantInput {
  lid?: number | null;
  strpobox?: string | null;
  strstreet?: string | null;
  strisocountrycode?: string | null;
  strcountry?: string | null;
  strcity?: string | null;
  strstate?: string | null;
  strpostalcode?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdstenant = {
  tableName: 'vdstenant',
  columns: ['lid', 'strpobox', 'strstreet', 'strisocountrycode', 'strcountry', 'strcity', 'strstate', 'strpostalcode', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdstenant,
  $input: null as unknown as VdstenantInput
} as const;

// Table vdsuser
export interface Vdsuser {
  lid: number | null;
  strfullname: string | null;
  strpwdhash: string | null;
  strmiddlename: string | null;
  strpobox: string | null;
  strimg_filename: string | null;
  lgender: number | null;
  kanbanmandant: string | null;
  strphonepager: string | null;
  strextlogin1: string | null;
  strlogin: string | null;
  strlastname: string | null;
  bshowuser: boolean | null;
  strloginlwr: string | null;
  lextprimgrpid: number | null;
  strphonefax: string | null;
  strimg_contenttype: string | null;
  lloginattempts: number | null;
  lproxyperson: number | null;
  strimg_url: string | null;
  strpostalcode: string | null;
  strphonemobilehome: string | null;
  strextpwd2: string | null;
  stremployeeno: string | null;
  strdefaultlang: string | null;
  bislockable: boolean | null;
  strstreet: string | null;
  strphonemobilebiz: string | null;
  dtpwdchanged: string | null;
  strdomainlwr: string | null;
  strfirstname: string | null;
  strisocountrycode: string | null;
  strextpwd1: string | null;
  lboss: number | null;
  strposcode: string | null;
  strtitle: string | null;
  strextlogin3: string | null;
  strextlogin2: string | null;
  dtbirth: string | null;
  bmustnotchangepass: boolean | null;
  dtenter: string | null;
  dtimg_lastmodified: string | null;
  strtimezone: string | null;
  strstate: string | null;
  strdefaultlayoutmobile: string | null;
  strcity: string | null;
  strdomain: string | null;
  strdefaultlocale: string | null;
  strphonehome: string | null;
  strextpwd3: string | null;
  strdefaultlayout: string | null;
  strinfo: string | null;
  strphonebiz: string | null;
  llocked: number | null;
  strofficenr: string | null;
  bmustchangepass: boolean | null;
  strmailhome: string | null;
  strmailbiz: string | null;
  bpwdexpires: boolean | null;
  strcompany: string | null;
  strimg_meta: string | null;
  strcountry: string | null;
  strsalt: string | null;
  strexternalguid: string | null;
  lpriority: number | null;
  strdn: string | null;
  bdisabled: boolean | null;
  strdescription: string | null;
  strrplguid: string | null;
  bdeleted: boolean | null;
  strname: string | null;
  bdeletable: boolean | null;
  strguid: string | null;
  lclassid: number | null;
  lcontainerid: number | null;
  linternalusn: number | null;
}
export interface VdsuserInput {
  lid?: number | null;
  strfullname?: string | null;
  strpwdhash?: string | null;
  strmiddlename?: string | null;
  strpobox?: string | null;
  strimg_filename?: string | null;
  lgender?: number | null;
  kanbanmandant?: string | null;
  strphonepager?: string | null;
  strextlogin1?: string | null;
  strlogin?: string | null;
  strlastname?: string | null;
  bshowuser?: boolean | null;
  strloginlwr?: string | null;
  lextprimgrpid?: number | null;
  strphonefax?: string | null;
  strimg_contenttype?: string | null;
  lloginattempts?: number | null;
  lproxyperson?: number | null;
  strimg_url?: string | null;
  strpostalcode?: string | null;
  strphonemobilehome?: string | null;
  strextpwd2?: string | null;
  stremployeeno?: string | null;
  strdefaultlang?: string | null;
  bislockable?: boolean | null;
  strstreet?: string | null;
  strphonemobilebiz?: string | null;
  dtpwdchanged?: string | null;
  strdomainlwr?: string | null;
  strfirstname?: string | null;
  strisocountrycode?: string | null;
  strextpwd1?: string | null;
  lboss?: number | null;
  strposcode?: string | null;
  strtitle?: string | null;
  strextlogin3?: string | null;
  strextlogin2?: string | null;
  dtbirth?: string | null;
  bmustnotchangepass?: boolean | null;
  dtenter?: string | null;
  dtimg_lastmodified?: string | null;
  strtimezone?: string | null;
  strstate?: string | null;
  strdefaultlayoutmobile?: string | null;
  strcity?: string | null;
  strdomain?: string | null;
  strdefaultlocale?: string | null;
  strphonehome?: string | null;
  strextpwd3?: string | null;
  strdefaultlayout?: string | null;
  strinfo?: string | null;
  strphonebiz?: string | null;
  llocked?: number | null;
  strofficenr?: string | null;
  bmustchangepass?: boolean | null;
  strmailhome?: string | null;
  strmailbiz?: string | null;
  bpwdexpires?: boolean | null;
  strcompany?: string | null;
  strimg_meta?: string | null;
  strcountry?: string | null;
  strsalt?: string | null;
  strexternalguid?: string | null;
  lpriority?: number | null;
  strdn?: string | null;
  bdisabled?: boolean | null;
  strdescription?: string | null;
  strrplguid?: string | null;
  bdeleted?: boolean | null;
  strname?: string | null;
  bdeletable?: boolean | null;
  strguid?: string | null;
  lclassid?: number | null;
  lcontainerid?: number | null;
  linternalusn?: number | null;
}
const vdsuser = {
  tableName: 'vdsuser',
  columns: ['lid', 'strfullname', 'strpwdhash', 'strmiddlename', 'strpobox', 'strimg_filename', 'lgender', 'kanbanmandant', 'strphonepager', 'strextlogin1', 'strlogin', 'strlastname', 'bshowuser', 'strloginlwr', 'lextprimgrpid', 'strphonefax', 'strimg_contenttype', 'lloginattempts', 'lproxyperson', 'strimg_url', 'strpostalcode', 'strphonemobilehome', 'strextpwd2', 'stremployeeno', 'strdefaultlang', 'bislockable', 'strstreet', 'strphonemobilebiz', 'dtpwdchanged', 'strdomainlwr', 'strfirstname', 'strisocountrycode', 'strextpwd1', 'lboss', 'strposcode', 'strtitle', 'strextlogin3', 'strextlogin2', 'dtbirth', 'bmustnotchangepass', 'dtenter', 'dtimg_lastmodified', 'strtimezone', 'strstate', 'strdefaultlayoutmobile', 'strcity', 'strdomain', 'strdefaultlocale', 'strphonehome', 'strextpwd3', 'strdefaultlayout', 'strinfo', 'strphonebiz', 'llocked', 'strofficenr', 'bmustchangepass', 'strmailhome', 'strmailbiz', 'bpwdexpires', 'strcompany', 'strimg_meta', 'strcountry', 'strsalt', 'strexternalguid', 'lpriority', 'strdn', 'bdisabled', 'strdescription', 'strrplguid', 'bdeleted', 'strname', 'bdeletable', 'strguid', 'lclassid', 'lcontainerid', 'linternalusn'],
  requiredForInsert: [],
  primaryKey: null,
  foreignKeys: {},
  $type: null as unknown as Vdsuser,
  $input: null as unknown as VdsuserInput
} as const;

// Table xcalendarrule
export interface Xcalendarrule {
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  str_rule: string | null;
}
export interface XcalendarruleInput {
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  str_rule?: string | null;
}
const xcalendarrule = {
  tableName: 'xcalendarrule',
  columns: ['strid', 'luserid', 'luseridinsert', 'dtedit', 'dtinsert', 'str_rule'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Xcalendarrule,
  $input: null as unknown as XcalendarruleInput
} as const;

// Table xcalpersonal
export interface Xcalpersonal {
  lid: number;
  luserid: number | null;
  dtedit: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dtfrom: string | null;
  dtto: string | null;
  strheadline: string | null;
  lrecurrencetype: number | null;
  lrecurrencemaster: number | null;
  txtbody: string | null;
  ref_ffe0ea60: number | null;
  str_type: string | null;
  ref_rule_id: string | null;
}
export interface XcalpersonalInput {
  lid: number;
  luserid?: number | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dtfrom?: string | null;
  dtto?: string | null;
  strheadline?: string | null;
  lrecurrencetype?: number | null;
  lrecurrencemaster?: number | null;
  txtbody?: string | null;
  ref_ffe0ea60?: number | null;
  str_type?: string | null;
  ref_rule_id?: string | null;
}
const xcalpersonal = {
  tableName: 'xcalpersonal',
  columns: ['lid', 'luserid', 'dtedit', 'luseridinsert', 'dtinsert', 'dtfrom', 'dtto', 'strheadline', 'lrecurrencetype', 'lrecurrencemaster', 'txtbody', 'ref_ffe0ea60', 'str_type', 'ref_rule_id'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_ffe0ea60: { table: 'xcalpersonal_categoryddb', column: 'lid', $type: null as unknown as XcalpersonalCategoryddb },
    ref_rule_id: { table: 'xcalendarrule', column: 'strid', $type: null as unknown as Xcalendarrule },
  },
  $type: null as unknown as Xcalpersonal,
  $input: null as unknown as XcalpersonalInput
} as const;

// Table xcalpersonal_categoryddb
export interface XcalpersonalCategoryddb {
  lid: number;
  dtedit: string | null;
  dtinsert: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  str_farbe_543a95f2: string | null;
  str_kategorie_c0fb163d: string | null;
  str_schriftfarbe_73f25213: string | null;
}
export interface XcalpersonalCategoryddbInput {
  lid: number;
  dtedit?: string | null;
  dtinsert?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  str_farbe_543a95f2?: string | null;
  str_kategorie_c0fb163d?: string | null;
  str_schriftfarbe_73f25213?: string | null;
}
const xcalpersonal_categoryddb = {
  tableName: 'xcalpersonal_categoryddb',
  columns: ['lid', 'dtedit', 'dtinsert', 'luserid', 'luseridinsert', 'str_farbe_543a95f2', 'str_kategorie_c0fb163d', 'str_schriftfarbe_73f25213'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as XcalpersonalCategoryddb,
  $input: null as unknown as XcalpersonalCategoryddbInput
} as const;

// Table xcalrule12
export interface Xcalrule12 {
  luseridinsert: number | null;
  luserid: number | null;
  str_rule: string | null;
  dtedit: string | null;
  strid: string;
  dtinsert: string | null;
}
export interface Xcalrule12Input {
  luseridinsert?: number | null;
  luserid?: number | null;
  str_rule?: string | null;
  dtedit?: string | null;
  strid: string;
  dtinsert?: string | null;
}
const xcalrule12 = {
  tableName: 'xcalrule12',
  columns: ['luseridinsert', 'luserid', 'str_rule', 'dtedit', 'strid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Xcalrule12,
  $input: null as unknown as Xcalrule12Input
} as const;

// Table xdatagroup72f3902c
export interface Xdatagroup72f3902c {
  l_fileinformation: number | null;
  dtedit: string | null;
  strid: string;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
}
export interface Xdatagroup72f3902cInput {
  l_fileinformation?: number | null;
  dtedit?: string | null;
  strid: string;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
}
const xdatagroup72f3902c = {
  tableName: 'xdatagroup72f3902c',
  columns: ['l_fileinformation', 'dtedit', 'strid', 'luserid', 'luseridinsert', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Xdatagroup72f3902c,
  $input: null as unknown as Xdatagroup72f3902cInput
} as const;

// Table xdatagroup931228fd
export interface Xdatagroup931228fd {
  fkstrid: string | null;
  dtedit: string | null;
  ref_4dfd1fea: string | null;
  strid: string;
  dtinsert: string | null;
  luserid: number | null;
  luseridinsert: number | null;
}
export interface Xdatagroup931228fdInput {
  fkstrid?: string | null;
  dtedit?: string | null;
  ref_4dfd1fea?: string | null;
  strid: string;
  dtinsert?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
}
const xdatagroup931228fd = {
  tableName: 'xdatagroup931228fd',
  columns: ['fkstrid', 'dtedit', 'ref_4dfd1fea', 'strid', 'dtinsert', 'luserid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine },
    ref_4dfd1fea: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
  },
  $type: null as unknown as Xdatagroup931228fd,
  $input: null as unknown as Xdatagroup931228fdInput
} as const;

// Table xdatagroup97e2428e
export interface Xdatagroup97e2428e {
  l_fileinformation: number | null;
  luseridinsert: number | null;
  str_typ: string | null;
  strid: string;
  dtinsert: string | null;
  dtedit: string | null;
  luserid: number | null;
}
export interface Xdatagroup97e2428eInput {
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  str_typ?: string | null;
  strid: string;
  dtinsert?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
}
const xdatagroup97e2428e = {
  tableName: 'xdatagroup97e2428e',
  columns: ['l_fileinformation', 'luseridinsert', 'str_typ', 'strid', 'dtinsert', 'dtedit', 'luserid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as Xdatagroup97e2428e,
  $input: null as unknown as Xdatagroup97e2428eInput
} as const;

// Table xdatagroup9c4ca29b
export interface Xdatagroup9c4ca29b {
  strid: string;
  dtinsert: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  luserid: number | null;
  ref_cf096af6: string | null;
}
export interface Xdatagroup9c4ca29bInput {
  strid: string;
  dtinsert?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  ref_cf096af6?: string | null;
}
const xdatagroup9c4ca29b = {
  tableName: 'xdatagroup9c4ca29b',
  columns: ['strid', 'dtinsert', 'dtedit', 'luseridinsert', 'fkstrid', 'luserid', 'ref_cf096af6'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    fkstrid: { table: 'cal_t_termine', column: 'strid', $type: null as unknown as CalTTermine },
    ref_cf096af6: { table: 'cal_kat_zusatzleistungen', column: 'strid', $type: null as unknown as CalKatZusatzleistungen },
  },
  $type: null as unknown as Xdatagroup9c4ca29b,
  $input: null as unknown as Xdatagroup9c4ca29bInput
} as const;

// Table xdatagroup9d1d5e1a
export interface Xdatagroup9d1d5e1a {
  luseridinsert: number | null;
  ref_f107fea5: string | null;
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  lid: number;
  fkstrid: string | null;
}
export interface Xdatagroup9d1d5e1aInput {
  luseridinsert?: number | null;
  ref_f107fea5?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  lid: number;
  fkstrid?: string | null;
}
const xdatagroup9d1d5e1a = {
  tableName: 'xdatagroup9d1d5e1a',
  columns: ['luseridinsert', 'ref_f107fea5', 'luserid', 'dtinsert', 'dtedit', 'lid', 'fkstrid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_f107fea5: { table: 'cal_kat_zusatzleistungen', column: 'strid', $type: null as unknown as CalKatZusatzleistungen },
    fkstrid: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen },
  },
  $type: null as unknown as Xdatagroup9d1d5e1a,
  $input: null as unknown as Xdatagroup9d1d5e1aInput
} as const;

// Table xfiledatagroup
export interface Xfiledatagroup {
  fkstrid: string | null;
  dtlastmodify: string | null;
  strurl: string | null;
  lorder: number | null;
  dtedit: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  luserid: number | null;
  strid: string;
  strcontenttype: string | null;
  strmeta: string | null;
  strfilename: string | null;
}
export interface XfiledatagroupInput {
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  strurl?: string | null;
  lorder?: number | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  strid: string;
  strcontenttype?: string | null;
  strmeta?: string | null;
  strfilename?: string | null;
}
const xfiledatagroup = {
  tableName: 'xfiledatagroup',
  columns: ['fkstrid', 'dtlastmodify', 'strurl', 'lorder', 'dtedit', 'luseridinsert', 'dtinsert', 'luserid', 'strid', 'strcontenttype', 'strmeta', 'strfilename'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'xdatagroup72f3902c', column: 'strid', $type: null as unknown as Xdatagroup72f3902c }, },
  $type: null as unknown as Xfiledatagroup,
  $input: null as unknown as XfiledatagroupInput
} as const;

// Table xfiledatagroup1
export interface Xfiledatagroup1 {
  lid: number;
  strfilename: string | null;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  strurl: string | null;
  lorder: number | null;
  fklid: number | null;
  luseridinsert: number | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup1Input {
  lid: number;
  strfilename?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strurl?: string | null;
  lorder?: number | null;
  fklid?: number | null;
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  strcontenttype?: string | null;
}
const xfiledatagroup1 = {
  tableName: 'xfiledatagroup1',
  columns: ['lid', 'strfilename', 'luserid', 'dtedit', 'dtinsert', 'strurl', 'lorder', 'fklid', 'luseridinsert', 'dtlastmodify', 'strmeta', 'strcontenttype'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'xpoll_option94d01acc', column: 'lid', $type: null as unknown as XpollOption94d01acc }, },
  $type: null as unknown as Xfiledatagroup1,
  $input: null as unknown as Xfiledatagroup1Input
} as const;

// Table xfiledatagroup10
export interface Xfiledatagroup10 {
  strcontenttype: string | null;
  strurl: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strfilename: string | null;
  dtedit: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  fkstrid: string | null;
  lid: number;
  lorder: number | null;
}
export interface Xfiledatagroup10Input {
  strcontenttype?: string | null;
  strurl?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  dtedit?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  fkstrid?: string | null;
  lid: number;
  lorder?: number | null;
}
const xfiledatagroup10 = {
  tableName: 'xfiledatagroup10',
  columns: ['strcontenttype', 'strurl', 'luserid', 'luseridinsert', 'dtinsert', 'strfilename', 'dtedit', 'dtlastmodify', 'strmeta', 'fkstrid', 'lid', 'lorder'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'is_message', column: 'strid', $type: null as unknown as IsMessage }, },
  $type: null as unknown as Xfiledatagroup10,
  $input: null as unknown as Xfiledatagroup10Input
} as const;

// Table xfiledatagroup11
export interface Xfiledatagroup11 {
  luserid: number | null;
  dtedit: string | null;
  strid: string;
  lorder: number | null;
  dtinsert: string | null;
  strurl: string | null;
  strmeta: string | null;
  strfilename: string | null;
  fkstrid: string | null;
  dtlastmodify: string | null;
  luseridinsert: number | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup11Input {
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
  lorder?: number | null;
  dtinsert?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
  strfilename?: string | null;
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
}
const xfiledatagroup11 = {
  tableName: 'xfiledatagroup11',
  columns: ['luserid', 'dtedit', 'strid', 'lorder', 'dtinsert', 'strurl', 'strmeta', 'strfilename', 'fkstrid', 'dtlastmodify', 'luseridinsert', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as Xfiledatagroup11,
  $input: null as unknown as Xfiledatagroup11Input
} as const;

// Table xfiledatagroup111
export interface Xfiledatagroup111 {
  strid: string;
  luserid: number | null;
  strcontenttype: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  dtinsert: string | null;
  strfilename: string | null;
  strurl: string | null;
  fkstrid: string | null;
}
export interface Xfiledatagroup111Input {
  strid: string;
  luserid?: number | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  strurl?: string | null;
  fkstrid?: string | null;
}
const xfiledatagroup111 = {
  tableName: 'xfiledatagroup111',
  columns: ['strid', 'luserid', 'strcontenttype', 'lorder', 'luseridinsert', 'dtedit', 'dtlastmodify', 'strmeta', 'dtinsert', 'strfilename', 'strurl', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_karte', column: 'strid', $type: null as unknown as KbTBKarte }, },
  $type: null as unknown as Xfiledatagroup111,
  $input: null as unknown as Xfiledatagroup111Input
} as const;

// Table xfiledatagroup12
export interface Xfiledatagroup12 {
  dtinsert: string | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  strcontenttype: string | null;
  luserid: number | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  strurl: string | null;
  strid: string;
  strmeta: string | null;
  lorder: number | null;
}
export interface Xfiledatagroup12Input {
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  strurl?: string | null;
  strid: string;
  strmeta?: string | null;
  lorder?: number | null;
}
const xfiledatagroup12 = {
  tableName: 'xfiledatagroup12',
  columns: ['dtinsert', 'dtlastmodify', 'strfilename', 'strcontenttype', 'luserid', 'fkstrid', 'luseridinsert', 'dtedit', 'strurl', 'strid', 'strmeta', 'lorder'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'xdatagroup97e2428e', column: 'strid', $type: null as unknown as Xdatagroup97e2428e }, },
  $type: null as unknown as Xfiledatagroup12,
  $input: null as unknown as Xfiledatagroup12Input
} as const;

// Table xfiledatagroup123
export interface Xfiledatagroup123 {
  luseridinsert: number | null;
  strfilename: string | null;
  strurl: string | null;
  strid: string;
  dtedit: string | null;
  strmeta: string | null;
  luserid: number | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  dtlastmodify: string | null;
  lorder: number | null;
}
export interface Xfiledatagroup123Input {
  luseridinsert?: number | null;
  strfilename?: string | null;
  strurl?: string | null;
  strid: string;
  dtedit?: string | null;
  strmeta?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  lorder?: number | null;
}
const xfiledatagroup123 = {
  tableName: 'xfiledatagroup123',
  columns: ['luseridinsert', 'strfilename', 'strurl', 'strid', 'dtedit', 'strmeta', 'luserid', 'dtinsert', 'strcontenttype', 'fkstrid', 'dtlastmodify', 'lorder'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal }, },
  $type: null as unknown as Xfiledatagroup123,
  $input: null as unknown as Xfiledatagroup123Input
} as const;

// Table xfiledatagroup1234
export interface Xfiledatagroup1234 {
  dtinsert: string | null;
  strurl: string | null;
  strmeta: string | null;
  luserid: number | null;
  dtedit: string | null;
  strcontenttype: string | null;
  luseridinsert: number | null;
  dtlastmodify: string | null;
  lorder: number | null;
  strid: string;
  fkstrid: string | null;
  strfilename: string | null;
}
export interface Xfiledatagroup1234Input {
  dtinsert?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  lorder?: number | null;
  strid: string;
  fkstrid?: string | null;
  strfilename?: string | null;
}
const xfiledatagroup1234 = {
  tableName: 'xfiledatagroup1234',
  columns: ['dtinsert', 'strurl', 'strmeta', 'luserid', 'dtedit', 'strcontenttype', 'luseridinsert', 'dtlastmodify', 'lorder', 'strid', 'fkstrid', 'strfilename'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'h_t_anwendung', column: 'strid', $type: null as unknown as HTAnwendung }, },
  $type: null as unknown as Xfiledatagroup1234,
  $input: null as unknown as Xfiledatagroup1234Input
} as const;

// Table xfiledatagroup12345
export interface Xfiledatagroup12345 {
  dtedit: string | null;
  strurl: string | null;
  lorder: number | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  luserid: number | null;
  strmeta: string | null;
  strid: string;
  strcontenttype: string | null;
}
export interface Xfiledatagroup12345Input {
  dtedit?: string | null;
  strurl?: string | null;
  lorder?: number | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  luserid?: number | null;
  strmeta?: string | null;
  strid: string;
  strcontenttype?: string | null;
}
const xfiledatagroup12345 = {
  tableName: 'xfiledatagroup12345',
  columns: ['dtedit', 'strurl', 'lorder', 'fkstrid', 'luseridinsert', 'dtinsert', 'dtlastmodify', 'strfilename', 'luserid', 'strmeta', 'strid', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'ze_kat_saldenkontrolle', column: 'strid', $type: null as unknown as ZeKatSaldenkontrolle }, },
  $type: null as unknown as Xfiledatagroup12345,
  $input: null as unknown as Xfiledatagroup12345Input
} as const;

// Table xfiledatagroup13
export interface Xfiledatagroup13 {
  strfilename: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  strurl: string | null;
  strid: string;
  lorder: number | null;
  fkstrid: string | null;
  dtedit: string | null;
  luseridinsert: number | null;
}
export interface Xfiledatagroup13Input {
  strfilename?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  strurl?: string | null;
  strid: string;
  lorder?: number | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
}
const xfiledatagroup13 = {
  tableName: 'xfiledatagroup13',
  columns: ['strfilename', 'luserid', 'dtlastmodify', 'strmeta', 'dtinsert', 'strcontenttype', 'strurl', 'strid', 'lorder', 'fkstrid', 'dtedit', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'tsk_categories', column: 'strid', $type: null as unknown as TskCategories }, },
  $type: null as unknown as Xfiledatagroup13,
  $input: null as unknown as Xfiledatagroup13Input
} as const;

// Table xfiledatagroup14
export interface Xfiledatagroup14 {
  dtedit: string | null;
  lorder: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  strfilename: string | null;
  luseridinsert: number | null;
  strurl: string | null;
  strmeta: string | null;
  dtlastmodify: string | null;
  strid: string;
  luserid: number | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup14Input {
  dtedit?: string | null;
  lorder?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  strmeta?: string | null;
  dtlastmodify?: string | null;
  strid: string;
  luserid?: number | null;
  strcontenttype?: string | null;
}
const xfiledatagroup14 = {
  tableName: 'xfiledatagroup14',
  columns: ['dtedit', 'lorder', 'fkstrid', 'dtinsert', 'strfilename', 'luseridinsert', 'strurl', 'strmeta', 'dtlastmodify', 'strid', 'luserid', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_backup', column: 'strid', $type: null as unknown as KbTBackup }, },
  $type: null as unknown as Xfiledatagroup14,
  $input: null as unknown as Xfiledatagroup14Input
} as const;

// Table xfiledatagroup15
export interface Xfiledatagroup15 {
  strurl: string | null;
  luseridinsert: number | null;
  strcontenttype: string | null;
  strid: string;
  dtlastmodify: string | null;
  strmeta: string | null;
  dtedit: string | null;
  fkstrid: string | null;
  strfilename: string | null;
  luserid: number | null;
  dtinsert: string | null;
  lorder: number | null;
}
export interface Xfiledatagroup15Input {
  strurl?: string | null;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  strid: string;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  strfilename?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  lorder?: number | null;
}
const xfiledatagroup15 = {
  tableName: 'xfiledatagroup15',
  columns: ['strurl', 'luseridinsert', 'strcontenttype', 'strid', 'dtlastmodify', 'strmeta', 'dtedit', 'fkstrid', 'strfilename', 'luserid', 'dtinsert', 'lorder'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_bilder', column: 'strid', $type: null as unknown as TBilder }, },
  $type: null as unknown as Xfiledatagroup15,
  $input: null as unknown as Xfiledatagroup15Input
} as const;

// Table xfiledatagroup151
export interface Xfiledatagroup151 {
  luseridinsert: number | null;
  fkstrid: string | null;
  luserid: number | null;
  strmeta: string | null;
  dtedit: string | null;
  strurl: string | null;
  lorder: number | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  strid: string;
}
export interface Xfiledatagroup151Input {
  luseridinsert?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  strmeta?: string | null;
  dtedit?: string | null;
  strurl?: string | null;
  lorder?: number | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  strid: string;
}
const xfiledatagroup151 = {
  tableName: 'xfiledatagroup151',
  columns: ['luseridinsert', 'fkstrid', 'luserid', 'strmeta', 'dtedit', 'strurl', 'lorder', 'dtinsert', 'strcontenttype', 'dtlastmodify', 'strfilename', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'ix_doc_document', column: 'strid', $type: null as unknown as IxDocDocument }, },
  $type: null as unknown as Xfiledatagroup151,
  $input: null as unknown as Xfiledatagroup151Input
} as const;

// Table xfiledatagroup1512
export interface Xfiledatagroup1512 {
  strfilename: string | null;
  lid: number;
  fklid: number | null;
  dtlastmodify: string | null;
  luserid: number | null;
  dtedit: string | null;
  strmeta: string | null;
  dtinsert: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  strurl: string | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup1512Input {
  strfilename?: string | null;
  lid: number;
  fklid?: number | null;
  dtlastmodify?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strmeta?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  strcontenttype?: string | null;
}
const xfiledatagroup1512 = {
  tableName: 'xfiledatagroup1512',
  columns: ['strfilename', 'lid', 'fklid', 'dtlastmodify', 'luserid', 'dtedit', 'strmeta', 'dtinsert', 'lorder', 'luseridinsert', 'strurl', 'strcontenttype'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'xpoll353cde18', column: 'lid', $type: null as unknown as Xpoll353cde18 }, },
  $type: null as unknown as Xfiledatagroup1512,
  $input: null as unknown as Xfiledatagroup1512Input
} as const;

// Table xfiledatagroup161
export interface Xfiledatagroup161 {
  strfilename: string | null;
  strmeta: string | null;
  lorder: number | null;
  dtedit: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  strid: string;
  luseridinsert: number | null;
  strurl: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup161Input {
  strfilename?: string | null;
  strmeta?: string | null;
  lorder?: number | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  strid: string;
  luseridinsert?: number | null;
  strurl?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup161 = {
  tableName: 'xfiledatagroup161',
  columns: ['strfilename', 'strmeta', 'lorder', 'dtedit', 'strcontenttype', 'fkstrid', 'luserid', 'dtlastmodify', 'strid', 'luseridinsert', 'strurl', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp_dokumente', column: 'strid', $type: null as unknown as TSmappDokumente }, },
  $type: null as unknown as Xfiledatagroup161,
  $input: null as unknown as Xfiledatagroup161Input
} as const;

// Table xfiledatagroup18
export interface Xfiledatagroup18 {
  strfilename: string | null;
  strcontenttype: string | null;
  luserid: number | null;
  lorder: number | null;
  strurl: string | null;
  strid: string;
  dtinsert: string | null;
  strmeta: string | null;
  dtlastmodify: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  dtedit: string | null;
}
export interface Xfiledatagroup18Input {
  strfilename?: string | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  strurl?: string | null;
  strid: string;
  dtinsert?: string | null;
  strmeta?: string | null;
  dtlastmodify?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  dtedit?: string | null;
}
const xfiledatagroup18 = {
  tableName: 'xfiledatagroup18',
  columns: ['strfilename', 'strcontenttype', 'luserid', 'lorder', 'strurl', 'strid', 'dtinsert', 'strmeta', 'dtlastmodify', 'luseridinsert', 'fkstrid', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_kat_prioritaet', column: 'strid', $type: null as unknown as ScbauKatPrioritaet }, },
  $type: null as unknown as Xfiledatagroup18,
  $input: null as unknown as Xfiledatagroup18Input
} as const;

// Table xfiledatagroup191
export interface Xfiledatagroup191 {
  strfilename: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  strmeta: string | null;
  strid: string;
  lorder: number | null;
  luseridinsert: number | null;
  strurl: string | null;
  dtlastmodify: string | null;
  dtedit: string | null;
  luserid: number | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup191Input {
  strfilename?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  strmeta?: string | null;
  strid: string;
  lorder?: number | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  dtlastmodify?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  strcontenttype?: string | null;
}
const xfiledatagroup191 = {
  tableName: 'xfiledatagroup191',
  columns: ['strfilename', 'fkstrid', 'dtinsert', 'strmeta', 'strid', 'lorder', 'luseridinsert', 'strurl', 'dtlastmodify', 'dtedit', 'luserid', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_imp_eckdaten', column: 'strid', $type: null as unknown as ScbauImpEckdaten }, },
  $type: null as unknown as Xfiledatagroup191,
  $input: null as unknown as Xfiledatagroup191Input
} as const;

// Table xfiledatagroup2
export interface Xfiledatagroup2 {
  luseridinsert: number | null;
  dtlastmodify: string | null;
  strurl: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  strfilename: string | null;
  lorder: number | null;
  lid: number;
  strcontenttype: string | null;
  luserid: number | null;
  strmeta: string | null;
  fklid: number | null;
}
export interface Xfiledatagroup2Input {
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  lorder?: number | null;
  lid: number;
  strcontenttype?: string | null;
  luserid?: number | null;
  strmeta?: string | null;
  fklid?: number | null;
}
const xfiledatagroup2 = {
  tableName: 'xfiledatagroup2',
  columns: ['luseridinsert', 'dtlastmodify', 'strurl', 'dtedit', 'dtinsert', 'strfilename', 'lorder', 'lid', 'strcontenttype', 'luserid', 'strmeta', 'fklid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'bixv_t_archiv2', column: 'lid', $type: null as unknown as BixvTArchiv2 }, },
  $type: null as unknown as Xfiledatagroup2,
  $input: null as unknown as Xfiledatagroup2Input
} as const;

// Table xfiledatagroup21
export interface Xfiledatagroup21 {
  dtinsert: string | null;
  lorder: number | null;
  strid: string;
  dtlastmodify: string | null;
  strurl: string | null;
  strcontenttype: string | null;
  strmeta: string | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  luseridinsert: number | null;
  strfilename: string | null;
}
export interface Xfiledatagroup21Input {
  dtinsert?: string | null;
  lorder?: number | null;
  strid: string;
  dtlastmodify?: string | null;
  strurl?: string | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
}
const xfiledatagroup21 = {
  tableName: 'xfiledatagroup21',
  columns: ['dtinsert', 'lorder', 'strid', 'dtlastmodify', 'strurl', 'strcontenttype', 'strmeta', 'fkstrid', 'luserid', 'dtedit', 'luseridinsert', 'strfilename'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_board', column: 'strid', $type: null as unknown as KbTBoard }, },
  $type: null as unknown as Xfiledatagroup21,
  $input: null as unknown as Xfiledatagroup21Input
} as const;

// Table xfiledatagroup221
export interface Xfiledatagroup221 {
  strid: string;
  luserid: number | null;
  dtlastmodify: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  strurl: string | null;
  lorder: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  strmeta: string | null;
  strfilename: string | null;
}
export interface Xfiledatagroup221Input {
  strid: string;
  luserid?: number | null;
  dtlastmodify?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  lorder?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strmeta?: string | null;
  strfilename?: string | null;
}
const xfiledatagroup221 = {
  tableName: 'xfiledatagroup221',
  columns: ['strid', 'luserid', 'dtlastmodify', 'strcontenttype', 'fkstrid', 'luseridinsert', 'strurl', 'lorder', 'dtedit', 'dtinsert', 'strmeta', 'strfilename'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_t_ressourcen', column: 'strid', $type: null as unknown as CalTRessourcen }, },
  $type: null as unknown as Xfiledatagroup221,
  $input: null as unknown as Xfiledatagroup221Input
} as const;

// Table xfiledatagroup2212
export interface Xfiledatagroup2212 {
  luserid: number | null;
  dtinsert: string | null;
  dtedit: string | null;
  lorder: number | null;
  strfilename: string | null;
  strmeta: string | null;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  strid: string;
  strurl: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
}
export interface Xfiledatagroup2212Input {
  luserid?: number | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  lorder?: number | null;
  strfilename?: string | null;
  strmeta?: string | null;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  strid: string;
  strurl?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
}
const xfiledatagroup2212 = {
  tableName: 'xfiledatagroup2212',
  columns: ['luserid', 'dtinsert', 'dtedit', 'lorder', 'strfilename', 'strmeta', 'strcontenttype', 'dtlastmodify', 'strid', 'strurl', 'fkstrid', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_kat_abwesenheitsart', column: 'strid', $type: null as unknown as AbwKatAbwesenheitsart }, },
  $type: null as unknown as Xfiledatagroup2212,
  $input: null as unknown as Xfiledatagroup2212Input
} as const;

// Table xfiledatagroup231
export interface Xfiledatagroup231 {
  luseridinsert: number | null;
  lorder: number | null;
  dtinsert: string | null;
  dtlastmodify: string | null;
  strurl: string | null;
  dtedit: string | null;
  fkstrid: string | null;
  luserid: number | null;
  strfilename: string | null;
  strid: string;
  strmeta: string | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup231Input {
  luseridinsert?: number | null;
  lorder?: number | null;
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  strfilename?: string | null;
  strid: string;
  strmeta?: string | null;
  strcontenttype?: string | null;
}
const xfiledatagroup231 = {
  tableName: 'xfiledatagroup231',
  columns: ['luseridinsert', 'lorder', 'dtinsert', 'dtlastmodify', 'strurl', 'dtedit', 'fkstrid', 'luserid', 'strfilename', 'strid', 'strmeta', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_kat_antragsstatus', column: 'strid', $type: null as unknown as AbwKatAntragsstatus }, },
  $type: null as unknown as Xfiledatagroup231,
  $input: null as unknown as Xfiledatagroup231Input
} as const;

// Table xfiledatagroup232
export interface Xfiledatagroup232 {
  luserid: number | null;
  strurl: string | null;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  fkstrid: string | null;
  lorder: number | null;
  strmeta: string | null;
  strid: string;
  strfilename: string | null;
  luseridinsert: number | null;
}
export interface Xfiledatagroup232Input {
  luserid?: number | null;
  strurl?: string | null;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
  lorder?: number | null;
  strmeta?: string | null;
  strid: string;
  strfilename?: string | null;
  luseridinsert?: number | null;
}
const xfiledatagroup232 = {
  tableName: 'xfiledatagroup232',
  columns: ['luserid', 'strurl', 'strcontenttype', 'dtlastmodify', 'dtedit', 'dtinsert', 'fkstrid', 'lorder', 'strmeta', 'strid', 'strfilename', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_kat_kategorien', column: 'strid', $type: null as unknown as CalKatKategorien }, },
  $type: null as unknown as Xfiledatagroup232,
  $input: null as unknown as Xfiledatagroup232Input
} as const;

// Table xfiledatagroup241
export interface Xfiledatagroup241 {
  dtlastmodify: string | null;
  strurl: string | null;
  luseridinsert: number | null;
  strcontenttype: string | null;
  strmeta: string | null;
  lorder: number | null;
  strfilename: string | null;
  strid: string;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup241Input {
  dtlastmodify?: string | null;
  strurl?: string | null;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
  lorder?: number | null;
  strfilename?: string | null;
  strid: string;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup241 = {
  tableName: 'xfiledatagroup241',
  columns: ['dtlastmodify', 'strurl', 'luseridinsert', 'strcontenttype', 'strmeta', 'lorder', 'strfilename', 'strid', 'fkstrid', 'luserid', 'dtedit', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_kat_kategorien', column: 'strid', $type: null as unknown as CalKatKategorien }, },
  $type: null as unknown as Xfiledatagroup241,
  $input: null as unknown as Xfiledatagroup241Input
} as const;

// Table xfiledatagroup244b4cdd
export interface Xfiledatagroup244b4cdd {
  fkstrid: string | null;
  dtinsert: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  lid: number;
  strurl: string | null;
  strmeta: string | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup244b4cddInput {
  fkstrid?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  lid: number;
  strurl?: string | null;
  strmeta?: string | null;
  strcontenttype?: string | null;
}
const xfiledatagroup244b4cdd = {
  tableName: 'xfiledatagroup244b4cdd',
  columns: ['fkstrid', 'dtinsert', 'lorder', 'luseridinsert', 'dtedit', 'luserid', 'dtlastmodify', 'strfilename', 'lid', 'strurl', 'strmeta', 'strcontenttype'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'qu_questions', column: 'strid', $type: null as unknown as QuQuestions }, },
  $type: null as unknown as Xfiledatagroup244b4cdd,
  $input: null as unknown as Xfiledatagroup244b4cddInput
} as const;

// Table xfiledatagroup25
export interface Xfiledatagroup25 {
  fkstrid: string | null;
  dtinsert: string | null;
  lorder: number | null;
  strid: string;
  strurl: string | null;
  luserid: number | null;
  strmeta: string | null;
  luseridinsert: number | null;
  strfilename: string | null;
  dtlastmodify: string | null;
  dtedit: string | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup25Input {
  fkstrid?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  strid: string;
  strurl?: string | null;
  luserid?: number | null;
  strmeta?: string | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
  dtlastmodify?: string | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
}
const xfiledatagroup25 = {
  tableName: 'xfiledatagroup25',
  columns: ['fkstrid', 'dtinsert', 'lorder', 'strid', 'strurl', 'luserid', 'strmeta', 'luseridinsert', 'strfilename', 'dtlastmodify', 'dtedit', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'cal_kat_bestuhlung', column: 'strid', $type: null as unknown as CalKatBestuhlung }, },
  $type: null as unknown as Xfiledatagroup25,
  $input: null as unknown as Xfiledatagroup25Input
} as const;

// Table xfiledatagroup26
export interface Xfiledatagroup26 {
  dtinsert: string | null;
  dtlastmodify: string | null;
  strid: string;
  lorder: number | null;
  luseridinsert: number | null;
  strfilename: string | null;
  strcontenttype: string | null;
  luserid: number | null;
  dtedit: string | null;
  fkstrid: string | null;
  strurl: string | null;
  strmeta: string | null;
}
export interface Xfiledatagroup26Input {
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  strid: string;
  lorder?: number | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  fkstrid?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
}
const xfiledatagroup26 = {
  tableName: 'xfiledatagroup26',
  columns: ['dtinsert', 'dtlastmodify', 'strid', 'lorder', 'luseridinsert', 'strfilename', 'strcontenttype', 'luserid', 'dtedit', 'fkstrid', 'strurl', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_import', column: 'strid', $type: null as unknown as ScbauTImport }, },
  $type: null as unknown as Xfiledatagroup26,
  $input: null as unknown as Xfiledatagroup26Input
} as const;

// Table xfiledatagroup27
export interface Xfiledatagroup27 {
  strfilename: string | null;
  fkstrid: string | null;
  dtlastmodify: string | null;
  strurl: string | null;
  luseridinsert: number | null;
  strcontenttype: string | null;
  lorder: number | null;
  luserid: number | null;
  strmeta: string | null;
  strid: string;
  dtinsert: string | null;
  dtedit: string | null;
}
export interface Xfiledatagroup27Input {
  strfilename?: string | null;
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  strurl?: string | null;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  strmeta?: string | null;
  strid: string;
  dtinsert?: string | null;
  dtedit?: string | null;
}
const xfiledatagroup27 = {
  tableName: 'xfiledatagroup27',
  columns: ['strfilename', 'fkstrid', 'dtlastmodify', 'strurl', 'luseridinsert', 'strcontenttype', 'lorder', 'luserid', 'strmeta', 'strid', 'dtinsert', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_t_berichte', column: 'strid', $type: null as unknown as ScbauTBerichte }, },
  $type: null as unknown as Xfiledatagroup27,
  $input: null as unknown as Xfiledatagroup27Input
} as const;

// Table xfiledatagroup272
export interface Xfiledatagroup272 {
  dtedit: string | null;
  dtinsert: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  strurl: string | null;
  strcontenttype: string | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  lorder: number | null;
  luserid: number | null;
  strid: string;
  strmeta: string | null;
}
export interface Xfiledatagroup272Input {
  dtedit?: string | null;
  dtinsert?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  strcontenttype?: string | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  strid: string;
  strmeta?: string | null;
}
const xfiledatagroup272 = {
  tableName: 'xfiledatagroup272',
  columns: ['dtedit', 'dtinsert', 'fkstrid', 'luseridinsert', 'strurl', 'strcontenttype', 'dtlastmodify', 'strfilename', 'lorder', 'luserid', 'strid', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_t_antrag', column: 'strid', $type: null as unknown as AbwTAntrag }, },
  $type: null as unknown as Xfiledatagroup272,
  $input: null as unknown as Xfiledatagroup272Input
} as const;

// Table xfiledatagroup292
export interface Xfiledatagroup292 {
  strurl: string | null;
  dtedit: string | null;
  luserid: number | null;
  lorder: number | null;
  luseridinsert: number | null;
  strfilename: string | null;
  strcontenttype: string | null;
  strmeta: string | null;
  dtlastmodify: string | null;
  strid: string;
  fkstrid: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup292Input {
  strurl?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
  dtlastmodify?: string | null;
  strid: string;
  fkstrid?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup292 = {
  tableName: 'xfiledatagroup292',
  columns: ['strurl', 'dtedit', 'luserid', 'lorder', 'luseridinsert', 'strfilename', 'strcontenttype', 'strmeta', 'dtlastmodify', 'strid', 'fkstrid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_t_antrag', column: 'strid', $type: null as unknown as AbwTAntrag }, },
  $type: null as unknown as Xfiledatagroup292,
  $input: null as unknown as Xfiledatagroup292Input
} as const;

// Table xfiledatagroup3
export interface Xfiledatagroup3 {
  fkstrid: string | null;
  dtinsert: string | null;
  strfilename: string | null;
  strmeta: string | null;
  luseridinsert: number | null;
  strid: string;
  dtlastmodify: string | null;
  lorder: number | null;
  strcontenttype: string | null;
  luserid: number | null;
  dtedit: string | null;
  strurl: string | null;
}
export interface Xfiledatagroup3Input {
  fkstrid?: string | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  strmeta?: string | null;
  luseridinsert?: number | null;
  strid: string;
  dtlastmodify?: string | null;
  lorder?: number | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strurl?: string | null;
}
const xfiledatagroup3 = {
  tableName: 'xfiledatagroup3',
  columns: ['fkstrid', 'dtinsert', 'strfilename', 'strmeta', 'luseridinsert', 'strid', 'dtlastmodify', 'lorder', 'strcontenttype', 'luserid', 'dtedit', 'strurl'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as Xfiledatagroup3,
  $input: null as unknown as Xfiledatagroup3Input
} as const;

// Table xfiledatagroup30
export interface Xfiledatagroup30 {
  dtedit: string | null;
  luseridinsert: number | null;
  strfilename: string | null;
  strurl: string | null;
  dtlastmodify: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  dtinsert: string | null;
  luserid: number | null;
  strid: string;
  fkstrid: string | null;
  strmeta: string | null;
}
export interface Xfiledatagroup30Input {
  dtedit?: string | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
  strurl?: string | null;
  dtlastmodify?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  strid: string;
  fkstrid?: string | null;
  strmeta?: string | null;
}
const xfiledatagroup30 = {
  tableName: 'xfiledatagroup30',
  columns: ['dtedit', 'luseridinsert', 'strfilename', 'strurl', 'dtlastmodify', 'strcontenttype', 'lorder', 'dtinsert', 'luserid', 'strid', 'fkstrid', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_kat_planungsprozess', column: 'strid', $type: null as unknown as AbwKatPlanungsprozess }, },
  $type: null as unknown as Xfiledatagroup30,
  $input: null as unknown as Xfiledatagroup30Input
} as const;

// Table xfiledatagroup31
export interface Xfiledatagroup31 {
  dtlastmodify: string | null;
  strurl: string | null;
  strfilename: string | null;
  strcontenttype: string | null;
  luseridinsert: number | null;
  strmeta: string | null;
  fkstrid: string | null;
  luserid: number | null;
  lorder: number | null;
  strid: string;
  dtinsert: string | null;
  dtedit: string | null;
}
export interface Xfiledatagroup31Input {
  dtlastmodify?: string | null;
  strurl?: string | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  luseridinsert?: number | null;
  strmeta?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  strid: string;
  dtinsert?: string | null;
  dtedit?: string | null;
}
const xfiledatagroup31 = {
  tableName: 'xfiledatagroup31',
  columns: ['dtlastmodify', 'strurl', 'strfilename', 'strcontenttype', 'luseridinsert', 'strmeta', 'fkstrid', 'luserid', 'lorder', 'strid', 'dtinsert', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_status', column: 'strid', $type: null as unknown as KbTBStatus }, },
  $type: null as unknown as Xfiledatagroup31,
  $input: null as unknown as Xfiledatagroup31Input
} as const;

// Table xfiledatagroup3123
export interface Xfiledatagroup3123 {
  strid: string;
  strurl: string | null;
  strfilename: string | null;
  dtlastmodify: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  strmeta: string | null;
  luserid: number | null;
  fkstrid: string | null;
  lorder: number | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup3123Input {
  strid: string;
  strurl?: string | null;
  strfilename?: string | null;
  dtlastmodify?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  strmeta?: string | null;
  luserid?: number | null;
  fkstrid?: string | null;
  lorder?: number | null;
  strcontenttype?: string | null;
}
const xfiledatagroup3123 = {
  tableName: 'xfiledatagroup3123',
  columns: ['strid', 'strurl', 'strfilename', 'dtlastmodify', 'luseridinsert', 'dtedit', 'dtinsert', 'strmeta', 'luserid', 'fkstrid', 'lorder', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_archiv', column: 'strid', $type: null as unknown as BixvTArchiv }, },
  $type: null as unknown as Xfiledatagroup3123,
  $input: null as unknown as Xfiledatagroup3123Input
} as const;

// Table xfiledatagroup33
export interface Xfiledatagroup33 {
  fkstrid: string | null;
  dtlastmodify: string | null;
  strid: string;
  strcontenttype: string | null;
  luseridinsert: number | null;
  strmeta: string | null;
  lorder: number | null;
  dtinsert: string | null;
  strfilename: string | null;
  luserid: number | null;
  dtedit: string | null;
  strurl: string | null;
}
export interface Xfiledatagroup33Input {
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  strid: string;
  strcontenttype?: string | null;
  luseridinsert?: number | null;
  strmeta?: string | null;
  lorder?: number | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strurl?: string | null;
}
const xfiledatagroup33 = {
  tableName: 'xfiledatagroup33',
  columns: ['fkstrid', 'dtlastmodify', 'strid', 'strcontenttype', 'luseridinsert', 'strmeta', 'lorder', 'dtinsert', 'strfilename', 'luserid', 'dtedit', 'strurl'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'scbau_kat_vorlage', column: 'strid', $type: null as unknown as ScbauKatVorlage }, },
  $type: null as unknown as Xfiledatagroup33,
  $input: null as unknown as Xfiledatagroup33Input
} as const;

// Table xfiledatagroup331
export interface Xfiledatagroup331 {
  fkstrid: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  strid: string;
  luserid: number | null;
  dtinsert: string | null;
  strfilename: string | null;
  strurl: string | null;
}
export interface Xfiledatagroup331Input {
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  strid: string;
  luserid?: number | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  strurl?: string | null;
}
const xfiledatagroup331 = {
  tableName: 'xfiledatagroup331',
  columns: ['fkstrid', 'luseridinsert', 'dtedit', 'strcontenttype', 'lorder', 'dtlastmodify', 'strmeta', 'strid', 'luserid', 'dtinsert', 'strfilename', 'strurl'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'per_t_pers_profil', column: 'strid', $type: null as unknown as PerTPersProfil }, },
  $type: null as unknown as Xfiledatagroup331,
  $input: null as unknown as Xfiledatagroup331Input
} as const;

// Table xfiledatagroup341
export interface Xfiledatagroup341 {
  strfilename: string | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  strurl: string | null;
  strid: string;
  dtlastmodify: string | null;
  lorder: number | null;
  strmeta: string | null;
}
export interface Xfiledatagroup341Input {
  strfilename?: string | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strurl?: string | null;
  strid: string;
  dtlastmodify?: string | null;
  lorder?: number | null;
  strmeta?: string | null;
}
const xfiledatagroup341 = {
  tableName: 'xfiledatagroup341',
  columns: ['strfilename', 'dtinsert', 'strcontenttype', 'luseridinsert', 'fkstrid', 'luserid', 'dtedit', 'strurl', 'strid', 'dtlastmodify', 'lorder', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'abw_t_antrag', column: 'strid', $type: null as unknown as AbwTAntrag }, },
  $type: null as unknown as Xfiledatagroup341,
  $input: null as unknown as Xfiledatagroup341Input
} as const;

// Table xfiledatagroup38
export interface Xfiledatagroup38 {
  strmeta: string | null;
  strid: string;
  strurl: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtlastmodify: string | null;
  strcontenttype: string | null;
  dtedit: string | null;
  strfilename: string | null;
  lorder: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup38Input {
  strmeta?: string | null;
  strid: string;
  strurl?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  strcontenttype?: string | null;
  dtedit?: string | null;
  strfilename?: string | null;
  lorder?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup38 = {
  tableName: 'xfiledatagroup38',
  columns: ['strmeta', 'strid', 'strurl', 'luserid', 'luseridinsert', 'dtlastmodify', 'strcontenttype', 'dtedit', 'strfilename', 'lorder', 'fkstrid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as Xfiledatagroup38,
  $input: null as unknown as Xfiledatagroup38Input
} as const;

// Table xfiledatagroup39
export interface Xfiledatagroup39 {
  strmeta: string | null;
  strid: string;
  strurl: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  luserid: number | null;
  dtedit: string | null;
  strfilename: string | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  dtlastmodify: string | null;
}
export interface Xfiledatagroup39Input {
  strmeta?: string | null;
  strid: string;
  strurl?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  strfilename?: string | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  dtlastmodify?: string | null;
}
const xfiledatagroup39 = {
  tableName: 'xfiledatagroup39',
  columns: ['strmeta', 'strid', 'strurl', 'luseridinsert', 'fkstrid', 'luserid', 'dtedit', 'strfilename', 'dtinsert', 'strcontenttype', 'lorder', 'dtlastmodify'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as Xfiledatagroup39,
  $input: null as unknown as Xfiledatagroup39Input
} as const;

// Table xfiledatagroup4
export interface Xfiledatagroup4 {
  strurl: string | null;
  luseridinsert: number | null;
  strid: string;
  strfilename: string | null;
  lorder: number | null;
  luserid: number | null;
  dtinsert: string | null;
  dtlastmodify: string | null;
  fkstrid: string | null;
  dtedit: string | null;
  strcontenttype: string | null;
  strmeta: string | null;
}
export interface Xfiledatagroup4Input {
  strurl?: string | null;
  luseridinsert?: number | null;
  strid: string;
  strfilename?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  fkstrid?: string | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
}
const xfiledatagroup4 = {
  tableName: 'xfiledatagroup4',
  columns: ['strurl', 'luseridinsert', 'strid', 'strfilename', 'lorder', 'luserid', 'dtinsert', 'dtlastmodify', 'fkstrid', 'dtedit', 'strcontenttype', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_prioritaet', column: 'strid', $type: null as unknown as KbTBPrioritaet }, },
  $type: null as unknown as Xfiledatagroup4,
  $input: null as unknown as Xfiledatagroup4Input
} as const;

// Table xfiledatagroup40
export interface Xfiledatagroup40 {
  strurl: string | null;
  strid: string;
  luseridinsert: number | null;
  dtlastmodify: string | null;
  strfilename: string | null;
  lorder: number | null;
  fkstrid: string | null;
  luserid: number | null;
  strmeta: string | null;
  dtedit: string | null;
  strcontenttype: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup40Input {
  strurl?: string | null;
  strid: string;
  luseridinsert?: number | null;
  dtlastmodify?: string | null;
  strfilename?: string | null;
  lorder?: number | null;
  fkstrid?: string | null;
  luserid?: number | null;
  strmeta?: string | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup40 = {
  tableName: 'xfiledatagroup40',
  columns: ['strurl', 'strid', 'luseridinsert', 'dtlastmodify', 'strfilename', 'lorder', 'fkstrid', 'luserid', 'strmeta', 'dtedit', 'strcontenttype', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_kat_settings', column: 'strid', $type: null as unknown as BixvKatSettings }, },
  $type: null as unknown as Xfiledatagroup40,
  $input: null as unknown as Xfiledatagroup40Input
} as const;

// Table xfiledatagroup421
export interface Xfiledatagroup421 {
  dtlastmodify: string | null;
  strurl: string | null;
  dtedit: string | null;
  luserid: number | null;
  lorder: number | null;
  fkstrid: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strcontenttype: string | null;
  strfilename: string | null;
  strmeta: string | null;
  strid: string;
}
export interface Xfiledatagroup421Input {
  dtlastmodify?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  strfilename?: string | null;
  strmeta?: string | null;
  strid: string;
}
const xfiledatagroup421 = {
  tableName: 'xfiledatagroup421',
  columns: ['dtlastmodify', 'strurl', 'dtedit', 'luserid', 'lorder', 'fkstrid', 'dtinsert', 'luseridinsert', 'strcontenttype', 'strfilename', 'strmeta', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_kat_settings', column: 'strid', $type: null as unknown as BixvKatSettings }, },
  $type: null as unknown as Xfiledatagroup421,
  $input: null as unknown as Xfiledatagroup421Input
} as const;

// Table xfiledatagroup43
export interface Xfiledatagroup43 {
  dtlastmodify: string | null;
  strurl: string | null;
  strid: string;
  dtedit: string | null;
  fkstrid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strfilename: string | null;
  strmeta: string | null;
  lorder: number | null;
  strcontenttype: string | null;
}
export interface Xfiledatagroup43Input {
  dtlastmodify?: string | null;
  strurl?: string | null;
  strid: string;
  dtedit?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strfilename?: string | null;
  strmeta?: string | null;
  lorder?: number | null;
  strcontenttype?: string | null;
}
const xfiledatagroup43 = {
  tableName: 'xfiledatagroup43',
  columns: ['dtlastmodify', 'strurl', 'strid', 'dtedit', 'fkstrid', 'luserid', 'luseridinsert', 'dtinsert', 'strfilename', 'strmeta', 'lorder', 'strcontenttype'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'bixv_t_inbox', column: 'strid', $type: null as unknown as BixvTInbox }, },
  $type: null as unknown as Xfiledatagroup43,
  $input: null as unknown as Xfiledatagroup43Input
} as const;

// Table xfiledatagroup5
export interface Xfiledatagroup5 {
  strcontenttype: string | null;
  fkstrid: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
  dtinsert: string | null;
  lorder: number | null;
  luseridinsert: number | null;
  luserid: number | null;
  strfilename: string | null;
  strid: string;
  strurl: string | null;
  dtedit: string | null;
}
export interface Xfiledatagroup5Input {
  strcontenttype?: string | null;
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  luserid?: number | null;
  strfilename?: string | null;
  strid: string;
  strurl?: string | null;
  dtedit?: string | null;
}
const xfiledatagroup5 = {
  tableName: 'xfiledatagroup5',
  columns: ['strcontenttype', 'fkstrid', 'dtlastmodify', 'strmeta', 'dtinsert', 'lorder', 'luseridinsert', 'luserid', 'strfilename', 'strid', 'strurl', 'dtedit'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'benv_t_u_zusatzdaten', column: 'strid', $type: null as unknown as BenvTUZusatzdaten }, },
  $type: null as unknown as Xfiledatagroup5,
  $input: null as unknown as Xfiledatagroup5Input
} as const;

// Table xfiledatagroup54e9853f
export interface Xfiledatagroup54e9853f {
  luserid: number | null;
  lorder: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strmeta: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  dtlastmodify: string | null;
  lid: number;
  strfilename: string | null;
  strurl: string | null;
  dtedit: string | null;
}
export interface Xfiledatagroup54e9853fInput {
  luserid?: number | null;
  lorder?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strmeta?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  dtlastmodify?: string | null;
  lid: number;
  strfilename?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
}
const xfiledatagroup54e9853f = {
  tableName: 'xfiledatagroup54e9853f',
  columns: ['luserid', 'lorder', 'luseridinsert', 'dtinsert', 'strmeta', 'strcontenttype', 'fkstrid', 'dtlastmodify', 'lid', 'strfilename', 'strurl', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'qu_question_answers', column: 'strid', $type: null as unknown as QuQuestionAnswers }, },
  $type: null as unknown as Xfiledatagroup54e9853f,
  $input: null as unknown as Xfiledatagroup54e9853fInput
} as const;

// Table xfiledatagroup6
export interface Xfiledatagroup6 {
  strurl: string | null;
  dtedit: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  strid: string;
  strfilename: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  strmeta: string | null;
  luseridinsert: number | null;
}
export interface Xfiledatagroup6Input {
  strurl?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  strid: string;
  strfilename?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  strmeta?: string | null;
  luseridinsert?: number | null;
}
const xfiledatagroup6 = {
  tableName: 'xfiledatagroup6',
  columns: ['strurl', 'dtedit', 'luserid', 'dtlastmodify', 'strcontenttype', 'lorder', 'strid', 'strfilename', 'fkstrid', 'dtinsert', 'strmeta', 'luseridinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'tsk_categories', column: 'strid', $type: null as unknown as TskCategories }, },
  $type: null as unknown as Xfiledatagroup6,
  $input: null as unknown as Xfiledatagroup6Input
} as const;

// Table xfiledatagroup61
export interface Xfiledatagroup61 {
  luserid: number | null;
  strcontenttype: string | null;
  strfilename: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  strurl: string | null;
  lorder: number | null;
  strid: string;
  fkstrid: string | null;
  dtedit: string | null;
  dtlastmodify: string | null;
  strmeta: string | null;
}
export interface Xfiledatagroup61Input {
  luserid?: number | null;
  strcontenttype?: string | null;
  strfilename?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  strurl?: string | null;
  lorder?: number | null;
  strid: string;
  fkstrid?: string | null;
  dtedit?: string | null;
  dtlastmodify?: string | null;
  strmeta?: string | null;
}
const xfiledatagroup61 = {
  tableName: 'xfiledatagroup61',
  columns: ['luserid', 'strcontenttype', 'strfilename', 'dtinsert', 'luseridinsert', 'strurl', 'lorder', 'strid', 'fkstrid', 'dtedit', 'dtlastmodify', 'strmeta'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 't_smapp', column: 'strid', $type: null as unknown as TSmapp }, },
  $type: null as unknown as Xfiledatagroup61,
  $input: null as unknown as Xfiledatagroup61Input
} as const;

// Table xfiledatagroup7
export interface Xfiledatagroup7 {
  strid: string;
  luseridinsert: number | null;
  strfilename: string | null;
  strurl: string | null;
  dtedit: string | null;
  strcontenttype: string | null;
  fkstrid: string | null;
  lorder: number | null;
  strmeta: string | null;
  luserid: number | null;
  dtlastmodify: string | null;
  dtinsert: string | null;
}
export interface Xfiledatagroup7Input {
  strid: string;
  luseridinsert?: number | null;
  strfilename?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  strcontenttype?: string | null;
  fkstrid?: string | null;
  lorder?: number | null;
  strmeta?: string | null;
  luserid?: number | null;
  dtlastmodify?: string | null;
  dtinsert?: string | null;
}
const xfiledatagroup7 = {
  tableName: 'xfiledatagroup7',
  columns: ['strid', 'luseridinsert', 'strfilename', 'strurl', 'dtedit', 'strcontenttype', 'fkstrid', 'lorder', 'strmeta', 'luserid', 'dtlastmodify', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'chat_message', column: 'strid', $type: null as unknown as ChatMessage }, },
  $type: null as unknown as Xfiledatagroup7,
  $input: null as unknown as Xfiledatagroup7Input
} as const;

// Table xfiledatagroup7111
export interface Xfiledatagroup7111 {
  luseridinsert: number | null;
  strcontenttype: string | null;
  strurl: string | null;
  strfilename: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
  dtedit: string | null;
  dtlastmodify: string | null;
  luserid: number | null;
  lorder: number | null;
  strmeta: string | null;
  strid: string;
}
export interface Xfiledatagroup7111Input {
  luseridinsert?: number | null;
  strcontenttype?: string | null;
  strurl?: string | null;
  strfilename?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
  dtedit?: string | null;
  dtlastmodify?: string | null;
  luserid?: number | null;
  lorder?: number | null;
  strmeta?: string | null;
  strid: string;
}
const xfiledatagroup7111 = {
  tableName: 'xfiledatagroup7111',
  columns: ['luseridinsert', 'strcontenttype', 'strurl', 'strfilename', 'fkstrid', 'dtinsert', 'dtedit', 'dtlastmodify', 'luserid', 'lorder', 'strmeta', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'h_t_a_hilfetexte', column: 'strid', $type: null as unknown as HTAHilfetexte }, },
  $type: null as unknown as Xfiledatagroup7111,
  $input: null as unknown as Xfiledatagroup7111Input
} as const;

// Table xfiledatagroup79a09da0
export interface Xfiledatagroup79a09da0 {
  fkstrid: string | null;
  lid: number;
  luseridinsert: number | null;
  strfilename: string | null;
  dtlastmodify: string | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  strurl: string | null;
  strmeta: string | null;
  dtedit: string | null;
  luserid: number | null;
  lorder: number | null;
}
export interface Xfiledatagroup79a09da0Input {
  fkstrid?: string | null;
  lid: number;
  luseridinsert?: number | null;
  strfilename?: string | null;
  dtlastmodify?: string | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  strurl?: string | null;
  strmeta?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  lorder?: number | null;
}
const xfiledatagroup79a09da0 = {
  tableName: 'xfiledatagroup79a09da0',
  columns: ['fkstrid', 'lid', 'luseridinsert', 'strfilename', 'dtlastmodify', 'dtinsert', 'strcontenttype', 'strurl', 'strmeta', 'dtedit', 'luserid', 'lorder'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkstrid: { table: 'tsk_task', column: 'strid', $type: null as unknown as TskTask }, },
  $type: null as unknown as Xfiledatagroup79a09da0,
  $input: null as unknown as Xfiledatagroup79a09da0Input
} as const;

// Table xfiledatagroup8
export interface Xfiledatagroup8 {
  dtlastmodify: string | null;
  luseridinsert: number | null;
  strfilename: string | null;
  strcontenttype: string | null;
  fklid: number | null;
  strurl: string | null;
  lid: number;
  strmeta: string | null;
  dtinsert: string | null;
  lorder: number | null;
  luserid: number | null;
  dtedit: string | null;
}
export interface Xfiledatagroup8Input {
  dtlastmodify?: string | null;
  luseridinsert?: number | null;
  strfilename?: string | null;
  strcontenttype?: string | null;
  fklid?: number | null;
  strurl?: string | null;
  lid: number;
  strmeta?: string | null;
  dtinsert?: string | null;
  lorder?: number | null;
  luserid?: number | null;
  dtedit?: string | null;
}
const xfiledatagroup8 = {
  tableName: 'xfiledatagroup8',
  columns: ['dtlastmodify', 'luseridinsert', 'strfilename', 'strcontenttype', 'fklid', 'strurl', 'lid', 'strmeta', 'dtinsert', 'lorder', 'luserid', 'dtedit'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fklid: { table: 'is_advertising', column: 'lid', $type: null as unknown as IsAdvertising }, },
  $type: null as unknown as Xfiledatagroup8,
  $input: null as unknown as Xfiledatagroup8Input
} as const;

// Table xfiledatagroup81
export interface Xfiledatagroup81 {
  dtedit: string | null;
  strurl: string | null;
  strid: string;
  dtinsert: string | null;
  dtlastmodify: string | null;
  fkstrid: string | null;
  luseridinsert: number | null;
  strmeta: string | null;
  strcontenttype: string | null;
  luserid: number | null;
  strfilename: string | null;
  lorder: number | null;
}
export interface Xfiledatagroup81Input {
  dtedit?: string | null;
  strurl?: string | null;
  strid: string;
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  strmeta?: string | null;
  strcontenttype?: string | null;
  luserid?: number | null;
  strfilename?: string | null;
  lorder?: number | null;
}
const xfiledatagroup81 = {
  tableName: 'xfiledatagroup81',
  columns: ['dtedit', 'strurl', 'strid', 'dtinsert', 'dtlastmodify', 'fkstrid', 'luseridinsert', 'strmeta', 'strcontenttype', 'luserid', 'strfilename', 'lorder'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_kat_boardstatus', column: 'strid', $type: null as unknown as KbKatBoardstatus }, },
  $type: null as unknown as Xfiledatagroup81,
  $input: null as unknown as Xfiledatagroup81Input
} as const;

// Table xfiledatagroup9
export interface Xfiledatagroup9 {
  strurl: string | null;
  lorder: number | null;
  strfilename: string | null;
  fkstrid: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  strcontenttype: string | null;
  strmeta: string | null;
  strid: string;
  dtedit: string | null;
  dtlastmodify: string | null;
}
export interface Xfiledatagroup9Input {
  strurl?: string | null;
  lorder?: number | null;
  strfilename?: string | null;
  fkstrid?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  strcontenttype?: string | null;
  strmeta?: string | null;
  strid: string;
  dtedit?: string | null;
  dtlastmodify?: string | null;
}
const xfiledatagroup9 = {
  tableName: 'xfiledatagroup9',
  columns: ['strurl', 'lorder', 'strfilename', 'fkstrid', 'luserid', 'luseridinsert', 'dtinsert', 'strcontenttype', 'strmeta', 'strid', 'dtedit', 'dtlastmodify'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'kb_t_b_k_nachrichten', column: 'strid', $type: null as unknown as KbTBKNachrichten }, },
  $type: null as unknown as Xfiledatagroup9,
  $input: null as unknown as Xfiledatagroup9Input
} as const;

// Table xfiledatagroup_ch1
export interface XfiledatagroupCh1 {
  strmeta: string | null;
  strcontenttype: string | null;
  lorder: number | null;
  strid: string;
  strfilename: string | null;
  strurl: string | null;
  dtedit: string | null;
  dtinsert: string | null;
  dtlastmodify: string | null;
  luserid: number | null;
  luseridinsert: number | null;
  fkstrid: string | null;
}
export interface XfiledatagroupCh1Input {
  strmeta?: string | null;
  strcontenttype?: string | null;
  lorder?: number | null;
  strid: string;
  strfilename?: string | null;
  strurl?: string | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  dtlastmodify?: string | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
}
const xfiledatagroup_ch1 = {
  tableName: 'xfiledatagroup_ch1',
  columns: ['strmeta', 'strcontenttype', 'lorder', 'strid', 'strfilename', 'strurl', 'dtedit', 'dtinsert', 'dtlastmodify', 'luserid', 'luseridinsert', 'fkstrid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'chat', column: 'strid', $type: null as unknown as Chat }, },
  $type: null as unknown as XfiledatagroupCh1,
  $input: null as unknown as XfiledatagroupCh1Input
} as const;

// Table xpoll353cde18
export interface Xpoll353cde18 {
  l_order: number | null;
  b_appointment: boolean | null;
  lid: number;
  b_add_options: boolean | null;
  luserinsert: number | null;
  b_multiple_selection: boolean | null;
  l_fileinformation: number | null;
  dtinsert: string | null;
  luserid: number | null;
  dt_start: string | null;
  refdatafield51b21ae8: number | null;
  txt_question: string | null;
  b_sharegroup: boolean | null;
  b_invitations: boolean | null;
  b_editanonymous: boolean | null;
  b_share_event: boolean | null;
  l_release: number | null;
  b_urgent: boolean | null;
  b_share: boolean | null;
  b_archived: boolean | null;
  l_chart: number | null;
  l_set: number | null;
  str_share_group: string | null;
  ref_3efa5f16: number | null;
  str_title: string | null;
  txt_distributor: string | null;
  b_release: boolean | null;
  dt_end: string | null;
  b_important: boolean | null;
  dtedit: string | null;
  b_distributor: boolean | null;
}
export interface Xpoll353cde18Input {
  l_order?: number | null;
  b_appointment?: boolean | null;
  lid: number;
  b_add_options?: boolean | null;
  luserinsert?: number | null;
  b_multiple_selection?: boolean | null;
  l_fileinformation?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  dt_start?: string | null;
  refdatafield51b21ae8?: number | null;
  txt_question?: string | null;
  b_sharegroup?: boolean | null;
  b_invitations?: boolean | null;
  b_editanonymous?: boolean | null;
  b_share_event?: boolean | null;
  l_release?: number | null;
  b_urgent?: boolean | null;
  b_share?: boolean | null;
  b_archived?: boolean | null;
  l_chart?: number | null;
  l_set?: number | null;
  str_share_group?: string | null;
  ref_3efa5f16?: number | null;
  str_title?: string | null;
  txt_distributor?: string | null;
  b_release?: boolean | null;
  dt_end?: string | null;
  b_important?: boolean | null;
  dtedit?: string | null;
  b_distributor?: boolean | null;
}
const xpoll353cde18 = {
  tableName: 'xpoll353cde18',
  columns: ['l_order', 'b_appointment', 'lid', 'b_add_options', 'luserinsert', 'b_multiple_selection', 'l_fileinformation', 'dtinsert', 'luserid', 'dt_start', 'refdatafield51b21ae8', 'txt_question', 'b_sharegroup', 'b_invitations', 'b_editanonymous', 'b_share_event', 'l_release', 'b_urgent', 'b_share', 'b_archived', 'l_chart', 'l_set', 'str_share_group', 'ref_3efa5f16', 'str_title', 'txt_distributor', 'b_release', 'dt_end', 'b_important', 'dtedit', 'b_distributor'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { refdatafield51b21ae8: { table: 'xpoll_categorycac0fc67', column: 'lid', $type: null as unknown as XpollCategorycac0fc67 }, },
  $type: null as unknown as Xpoll353cde18,
  $input: null as unknown as Xpoll353cde18Input
} as const;

// Table xpoll_categorycac0fc67
export interface XpollCategorycac0fc67 {
  dtinsert: string | null;
  str_category: string | null;
  luserid: number | null;
  dtedit: string | null;
  lid: number;
  luseridinsert: number | null;
}
export interface XpollCategorycac0fc67Input {
  dtinsert?: string | null;
  str_category?: string | null;
  luserid?: number | null;
  dtedit?: string | null;
  lid: number;
  luseridinsert?: number | null;
}
const xpoll_categorycac0fc67 = {
  tableName: 'xpoll_categorycac0fc67',
  columns: ['dtinsert', 'str_category', 'luserid', 'dtedit', 'lid', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {},
  $type: null as unknown as XpollCategorycac0fc67,
  $input: null as unknown as XpollCategorycac0fc67Input
} as const;

// Table xpoll_distributor
export interface XpollDistributor {
  b_has_answered: boolean | null;
  str_notification: string | null;
  b_notification: boolean | null;
  fklid: number | null;
  dtedit: string | null;
  b_sent: boolean | null;
  strid: string;
  str_status: string | null;
  ref_user_id: number | null;
  luserid: number | null;
  luseridinsert: number | null;
  b_by_user: boolean | null;
  dtinsert: string | null;
  str_guid: string | null;
}
export interface XpollDistributorInput {
  b_has_answered?: boolean | null;
  str_notification?: string | null;
  b_notification?: boolean | null;
  fklid?: number | null;
  dtedit?: string | null;
  b_sent?: boolean | null;
  strid: string;
  str_status?: string | null;
  ref_user_id?: number | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  b_by_user?: boolean | null;
  dtinsert?: string | null;
  str_guid?: string | null;
}
const xpoll_distributor = {
  tableName: 'xpoll_distributor',
  columns: ['b_has_answered', 'str_notification', 'b_notification', 'fklid', 'dtedit', 'b_sent', 'strid', 'str_status', 'ref_user_id', 'luserid', 'luseridinsert', 'b_by_user', 'dtinsert', 'str_guid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fklid: { table: 'xpoll353cde18', column: 'lid', $type: null as unknown as Xpoll353cde18 }, },
  $type: null as unknown as XpollDistributor,
  $input: null as unknown as XpollDistributorInput
} as const;

// Table xpoll_option94d01acc
export interface XpollOption94d01acc {
  dt_end: string | null;
  flt_duration: number | null;
  fkid: number | null;
  str_option: string | null;
  txt_description: string | null;
  b_set: boolean | null;
  flt_vote_percent: number | null;
  l_fileinformation: number | null;
  luseridinsert: number | null;
  lorder: number | null;
  lid: number;
  dt_date: string | null;
  dtedit: string | null;
  l_vote_count: number | null;
  dtinsert: string | null;
  str_color: string | null;
  luserid: number | null;
}
export interface XpollOption94d01accInput {
  dt_end?: string | null;
  flt_duration?: number | null;
  fkid?: number | null;
  str_option?: string | null;
  txt_description?: string | null;
  b_set?: boolean | null;
  flt_vote_percent?: number | null;
  l_fileinformation?: number | null;
  luseridinsert?: number | null;
  lorder?: number | null;
  lid: number;
  dt_date?: string | null;
  dtedit?: string | null;
  l_vote_count?: number | null;
  dtinsert?: string | null;
  str_color?: string | null;
  luserid?: number | null;
}
const xpoll_option94d01acc = {
  tableName: 'xpoll_option94d01acc',
  columns: ['dt_end', 'flt_duration', 'fkid', 'str_option', 'txt_description', 'b_set', 'flt_vote_percent', 'l_fileinformation', 'luseridinsert', 'lorder', 'lid', 'dt_date', 'dtedit', 'l_vote_count', 'dtinsert', 'str_color', 'luserid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkid: { table: 'xpoll353cde18', column: 'lid', $type: null as unknown as Xpoll353cde18 }, },
  $type: null as unknown as XpollOption94d01acc,
  $input: null as unknown as XpollOption94d01accInput
} as const;

// Table xpoll_vote00bb5bc6
export interface XpollVote00bb5bc6 {
  dtedit: string | null;
  dtinsert: string | null;
  txt_options: string | null;
  lid: number;
  luserid: number | null;
  fkid: number | null;
  luseridinsert: number | null;
}
export interface XpollVote00bb5bc6Input {
  dtedit?: string | null;
  dtinsert?: string | null;
  txt_options?: string | null;
  lid: number;
  luserid?: number | null;
  fkid?: number | null;
  luseridinsert?: number | null;
}
const xpoll_vote00bb5bc6 = {
  tableName: 'xpoll_vote00bb5bc6',
  columns: ['dtedit', 'dtinsert', 'txt_options', 'lid', 'luserid', 'fkid', 'luseridinsert'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: { fkid: { table: 'xpoll353cde18', column: 'lid', $type: null as unknown as Xpoll353cde18 }, },
  $type: null as unknown as XpollVote00bb5bc6,
  $input: null as unknown as XpollVote00bb5bc6Input
} as const;

// Table ze_kat_buchungsart
export interface ZeKatBuchungsart {
  dtinsert: string | null;
  str_kuerzel: string | null;
  str_hintergrundfarbe: string | null;
  luserid: number | null;
  str_schriftfarbe: string | null;
  str_anoderabwesenheit: string | null;
  luseridinsert: number | null;
  b_nurganzertagbuchbar: boolean | null;
  strid: string;
  b_buchbar: boolean | null;
  str_reihenfolge: string | null;
  str_berechnungsaldo: string | null;
  str_buchungsart: string | null;
  dtedit: string | null;
  str_id: string | null;
  b_erfassungzeitraum: boolean | null;
  b_kompletterzeitraumbereich: boolean | null;
  b_default: boolean | null;
  b_alszusatzzeitnichtbuchbar: boolean | null;
  b_pflicht: boolean | null;
}
export interface ZeKatBuchungsartInput {
  dtinsert?: string | null;
  str_kuerzel?: string | null;
  str_hintergrundfarbe?: string | null;
  luserid?: number | null;
  str_schriftfarbe?: string | null;
  str_anoderabwesenheit?: string | null;
  luseridinsert?: number | null;
  b_nurganzertagbuchbar?: boolean | null;
  strid: string;
  b_buchbar?: boolean | null;
  str_reihenfolge?: string | null;
  str_berechnungsaldo?: string | null;
  str_buchungsart?: string | null;
  dtedit?: string | null;
  str_id?: string | null;
  b_erfassungzeitraum?: boolean | null;
  b_kompletterzeitraumbereich?: boolean | null;
  b_default?: boolean | null;
  b_alszusatzzeitnichtbuchbar?: boolean | null;
  b_pflicht?: boolean | null;
}
const ze_kat_buchungsart = {
  tableName: 'ze_kat_buchungsart',
  columns: ['dtinsert', 'str_kuerzel', 'str_hintergrundfarbe', 'luserid', 'str_schriftfarbe', 'str_anoderabwesenheit', 'luseridinsert', 'b_nurganzertagbuchbar', 'strid', 'b_buchbar', 'str_reihenfolge', 'str_berechnungsaldo', 'str_buchungsart', 'dtedit', 'str_id', 'b_erfassungzeitraum', 'b_kompletterzeitraumbereich', 'b_default', 'b_alszusatzzeitnichtbuchbar', 'b_pflicht'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatBuchungsart,
  $input: null as unknown as ZeKatBuchungsartInput
} as const;

// Table ze_kat_einstellungen
export interface ZeKatEinstellungen {
  l_kappungsgrenze: number | null;
  dtedit: string | null;
  l_maximalesgleitzeitguthaben: number | null;
  strid: string;
  l_standardbeginnstunde: number | null;
  l_maximalesgleitzeitdefizit: number | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtinsert: string | null;
  l_standardendestunde: number | null;
  l_maximaletaeglichearbeitsze: number | null;
}
export interface ZeKatEinstellungenInput {
  l_kappungsgrenze?: number | null;
  dtedit?: string | null;
  l_maximalesgleitzeitguthaben?: number | null;
  strid: string;
  l_standardbeginnstunde?: number | null;
  l_maximalesgleitzeitdefizit?: number | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtinsert?: string | null;
  l_standardendestunde?: number | null;
  l_maximaletaeglichearbeitsze?: number | null;
}
const ze_kat_einstellungen = {
  tableName: 'ze_kat_einstellungen',
  columns: ['l_kappungsgrenze', 'dtedit', 'l_maximalesgleitzeitguthaben', 'strid', 'l_standardbeginnstunde', 'l_maximalesgleitzeitdefizit', 'luserid', 'luseridinsert', 'dtinsert', 'l_standardendestunde', 'l_maximaletaeglichearbeitsze'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatEinstellungen,
  $input: null as unknown as ZeKatEinstellungenInput
} as const;

// Table ze_kat_erfassungsstatus
export interface ZeKatErfassungsstatus {
  luseridinsert: number | null;
  str_id: string | null;
  dtinsert: string | null;
  str_sortierung: string | null;
  dtedit: string | null;
  luserid: number | null;
  str_erfassungsstatus: string | null;
  strid: string;
}
export interface ZeKatErfassungsstatusInput {
  luseridinsert?: number | null;
  str_id?: string | null;
  dtinsert?: string | null;
  str_sortierung?: string | null;
  dtedit?: string | null;
  luserid?: number | null;
  str_erfassungsstatus?: string | null;
  strid: string;
}
const ze_kat_erfassungsstatus = {
  tableName: 'ze_kat_erfassungsstatus',
  columns: ['luseridinsert', 'str_id', 'dtinsert', 'str_sortierung', 'dtedit', 'luserid', 'str_erfassungsstatus', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatErfassungsstatus,
  $input: null as unknown as ZeKatErfassungsstatusInput
} as const;

// Table ze_kat_freigabestatus
export interface ZeKatFreigabestatus {
  luserid: number | null;
  dtedit: string | null;
  str_id: string | null;
  str_sortierung: string | null;
  strid: string;
  dtinsert: string | null;
  luseridinsert: number | null;
  str_freigabestatus: string | null;
}
export interface ZeKatFreigabestatusInput {
  luserid?: number | null;
  dtedit?: string | null;
  str_id?: string | null;
  str_sortierung?: string | null;
  strid: string;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  str_freigabestatus?: string | null;
}
const ze_kat_freigabestatus = {
  tableName: 'ze_kat_freigabestatus',
  columns: ['luserid', 'dtedit', 'str_id', 'str_sortierung', 'strid', 'dtinsert', 'luseridinsert', 'str_freigabestatus'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatFreigabestatus,
  $input: null as unknown as ZeKatFreigabestatusInput
} as const;

// Table ze_kat_kostenstellen
export interface ZeKatKostenstellen {
  luserid: number | null;
  dtedit: string | null;
  strid: string;
  luseridinsert: number | null;
  str_kostenstelle: string | null;
  dtinsert: string | null;
}
export interface ZeKatKostenstellenInput {
  luserid?: number | null;
  dtedit?: string | null;
  strid: string;
  luseridinsert?: number | null;
  str_kostenstelle?: string | null;
  dtinsert?: string | null;
}
const ze_kat_kostenstellen = {
  tableName: 'ze_kat_kostenstellen',
  columns: ['luserid', 'dtedit', 'strid', 'luseridinsert', 'str_kostenstelle', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatKostenstellen,
  $input: null as unknown as ZeKatKostenstellenInput
} as const;

// Table ze_kat_pausen
export interface ZeKatPausen {
  strid: string;
  str_titel: string | null;
  l_artderbeschaeftigung: number | null;
  b_sonderdienstvertrag: boolean | null;
  l_pauseinminuten: number | null;
  luserid: number | null;
  luseridinsert: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  b_minderjaehrig: boolean | null;
  l_abarbeitsdauerinminuten: number | null;
  ref_beschaeftigungsart: number | null;
}
export interface ZeKatPausenInput {
  strid: string;
  str_titel?: string | null;
  l_artderbeschaeftigung?: number | null;
  b_sonderdienstvertrag?: boolean | null;
  l_pauseinminuten?: number | null;
  luserid?: number | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  b_minderjaehrig?: boolean | null;
  l_abarbeitsdauerinminuten?: number | null;
  ref_beschaeftigungsart?: number | null;
}
const ze_kat_pausen = {
  tableName: 'ze_kat_pausen',
  columns: ['strid', 'str_titel', 'l_artderbeschaeftigung', 'b_sonderdienstvertrag', 'l_pauseinminuten', 'luserid', 'luseridinsert', 'dtedit', 'dtinsert', 'b_minderjaehrig', 'l_abarbeitsdauerinminuten', 'ref_beschaeftigungsart'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { ref_beschaeftigungsart: { table: 'per_kat_art', column: 'lid', $type: null as unknown as PerKatArt }, },
  $type: null as unknown as ZeKatPausen,
  $input: null as unknown as ZeKatPausenInput
} as const;

// Table ze_kat_saldenkontrolle
export interface ZeKatSaldenkontrolle {
  dtedit: string | null;
  flt_obergrenze: number | null;
  strid: string;
  l_fileinformation: number | null;
  dtinsert: string | null;
  luserid: number | null;
  str_status: string | null;
  luseridinsert: number | null;
  flt_untergrenze: number | null;
  txt_hinweistext: string | null;
  b_kappungsgrenze: boolean | null;
  str_alternativtextfuerbarriere: string | null;
}
export interface ZeKatSaldenkontrolleInput {
  dtedit?: string | null;
  flt_obergrenze?: number | null;
  strid: string;
  l_fileinformation?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  str_status?: string | null;
  luseridinsert?: number | null;
  flt_untergrenze?: number | null;
  txt_hinweistext?: string | null;
  b_kappungsgrenze?: boolean | null;
  str_alternativtextfuerbarriere?: string | null;
}
const ze_kat_saldenkontrolle = {
  tableName: 'ze_kat_saldenkontrolle',
  columns: ['dtedit', 'flt_obergrenze', 'strid', 'l_fileinformation', 'dtinsert', 'luserid', 'str_status', 'luseridinsert', 'flt_untergrenze', 'txt_hinweistext', 'b_kappungsgrenze', 'str_alternativtextfuerbarriere'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatSaldenkontrolle,
  $input: null as unknown as ZeKatSaldenkontrolleInput
} as const;

// Table ze_kat_zeittyp
export interface ZeKatZeittyp {
  str_schriftfarbe: string | null;
  str_id: string | null;
  dtedit: string | null;
  str_hintergrundfarbe: string | null;
  luserid: number | null;
  dtinsert: string | null;
  str_zeittyp: string | null;
  luseridinsert: number | null;
  strid: string;
}
export interface ZeKatZeittypInput {
  str_schriftfarbe?: string | null;
  str_id?: string | null;
  dtedit?: string | null;
  str_hintergrundfarbe?: string | null;
  luserid?: number | null;
  dtinsert?: string | null;
  str_zeittyp?: string | null;
  luseridinsert?: number | null;
  strid: string;
}
const ze_kat_zeittyp = {
  tableName: 'ze_kat_zeittyp',
  columns: ['str_schriftfarbe', 'str_id', 'dtedit', 'str_hintergrundfarbe', 'luserid', 'dtinsert', 'str_zeittyp', 'luseridinsert', 'strid'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeKatZeittyp,
  $input: null as unknown as ZeKatZeittypInput
} as const;

// Table ze_t_m_d_zeiten
export interface ZeTMDZeiten {
  dt_bis: string | null;
  l_dauersekunden: number | null;
  dtinsert: string | null;
  luserid: number | null;
  ref_buchungsart: string | null;
  str_guidabwesenheitsantrag: string | null;
  fkstrid: string | null;
  dt_dauer: string | null;
  str_dauer: string | null;
  ref_kostenstelle: string | null;
  dt_pause: string | null;
  str_pauseminuten: string | null;
  strid: string;
  dtedit: string | null;
  dt_von: string | null;
  luseridinsert: number | null;
  b_standardeintrag: boolean | null;
  l_pausesekunden: number | null;
}
export interface ZeTMDZeitenInput {
  dt_bis?: string | null;
  l_dauersekunden?: number | null;
  dtinsert?: string | null;
  luserid?: number | null;
  ref_buchungsart?: string | null;
  str_guidabwesenheitsantrag?: string | null;
  fkstrid?: string | null;
  dt_dauer?: string | null;
  str_dauer?: string | null;
  ref_kostenstelle?: string | null;
  dt_pause?: string | null;
  str_pauseminuten?: string | null;
  strid: string;
  dtedit?: string | null;
  dt_von?: string | null;
  luseridinsert?: number | null;
  b_standardeintrag?: boolean | null;
  l_pausesekunden?: number | null;
}
const ze_t_m_d_zeiten = {
  tableName: 'ze_t_m_d_zeiten',
  columns: ['dt_bis', 'l_dauersekunden', 'dtinsert', 'luserid', 'ref_buchungsart', 'str_guidabwesenheitsantrag', 'fkstrid', 'dt_dauer', 'str_dauer', 'ref_kostenstelle', 'dt_pause', 'str_pauseminuten', 'strid', 'dtedit', 'dt_von', 'luseridinsert', 'b_standardeintrag', 'l_pausesekunden'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_buchungsart: { table: 'ze_kat_buchungsart', column: 'strid', $type: null as unknown as ZeKatBuchungsart },
    fkstrid: { table: 'ze_t_m_datum', column: 'strid', $type: null as unknown as ZeTMDatum },
    ref_kostenstelle: { table: 'ze_kat_kostenstellen', column: 'strid', $type: null as unknown as ZeKatKostenstellen },
  },
  $type: null as unknown as ZeTMDZeiten,
  $input: null as unknown as ZeTMDZeitenInput
} as const;

// Table ze_t_m_datum
export interface ZeTMDatum {
  dtedit: string | null;
  l_arbeitszeitsollsekunden: number | null;
  str_zusatzdaten: string | null;
  ref_buchungsart: string | null;
  fkstrid: string | null;
  strid: string;
  l_arbeitszeitsollminuten: number | null;
  dt_von: string | null;
  str_unterbrechung: string | null;
  str_wochentag: string | null;
  dt_datum: string | null;
  dt_pause: string | null;
  luserid: number | null;
  l_arbeitszeitistsekunden: number | null;
  str_arbeitszeitsaldo: string | null;
  dtinsert: string | null;
  l_arbeitszeitistminuten: number | null;
  str_guidabwesenheitsantrag: string | null;
  txt_bemerkungen: string | null;
  dt_arbeitszeitist: string | null;
  str_arbeitszeitist: string | null;
  l_arbeitszeitsaldosekunden: number | null;
  ref_zeittyp: string | null;
  dt_arbeitszeitsaldo: string | null;
  dt_bis: string | null;
  l_arbeitszeitsaldominuten: number | null;
  str_hinweis: string | null;
  l_kw: number | null;
  str_pause: string | null;
  luseridinsert: number | null;
  str_arbeitszeitsoll: string | null;
  txt_buchungsarten: string | null;
}
export interface ZeTMDatumInput {
  dtedit?: string | null;
  l_arbeitszeitsollsekunden?: number | null;
  str_zusatzdaten?: string | null;
  ref_buchungsart?: string | null;
  fkstrid?: string | null;
  strid: string;
  l_arbeitszeitsollminuten?: number | null;
  dt_von?: string | null;
  str_unterbrechung?: string | null;
  str_wochentag?: string | null;
  dt_datum?: string | null;
  dt_pause?: string | null;
  luserid?: number | null;
  l_arbeitszeitistsekunden?: number | null;
  str_arbeitszeitsaldo?: string | null;
  dtinsert?: string | null;
  l_arbeitszeitistminuten?: number | null;
  str_guidabwesenheitsantrag?: string | null;
  txt_bemerkungen?: string | null;
  dt_arbeitszeitist?: string | null;
  str_arbeitszeitist?: string | null;
  l_arbeitszeitsaldosekunden?: number | null;
  ref_zeittyp?: string | null;
  dt_arbeitszeitsaldo?: string | null;
  dt_bis?: string | null;
  l_arbeitszeitsaldominuten?: number | null;
  str_hinweis?: string | null;
  l_kw?: number | null;
  str_pause?: string | null;
  luseridinsert?: number | null;
  str_arbeitszeitsoll?: string | null;
  txt_buchungsarten?: string | null;
}
const ze_t_m_datum = {
  tableName: 'ze_t_m_datum',
  columns: ['dtedit', 'l_arbeitszeitsollsekunden', 'str_zusatzdaten', 'ref_buchungsart', 'fkstrid', 'strid', 'l_arbeitszeitsollminuten', 'dt_von', 'str_unterbrechung', 'str_wochentag', 'dt_datum', 'dt_pause', 'luserid', 'l_arbeitszeitistsekunden', 'str_arbeitszeitsaldo', 'dtinsert', 'l_arbeitszeitistminuten', 'str_guidabwesenheitsantrag', 'txt_bemerkungen', 'dt_arbeitszeitist', 'str_arbeitszeitist', 'l_arbeitszeitsaldosekunden', 'ref_zeittyp', 'dt_arbeitszeitsaldo', 'dt_bis', 'l_arbeitszeitsaldominuten', 'str_hinweis', 'l_kw', 'str_pause', 'luseridinsert', 'str_arbeitszeitsoll', 'txt_buchungsarten'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_buchungsart: { table: 'ze_kat_buchungsart', column: 'strid', $type: null as unknown as ZeKatBuchungsart },
    fkstrid: { table: 'ze_t_monat', column: 'strid', $type: null as unknown as ZeTMonat },
    ref_zeittyp: { table: 'ze_kat_zeittyp', column: 'strid', $type: null as unknown as ZeKatZeittyp },
  },
  $type: null as unknown as ZeTMDatum,
  $input: null as unknown as ZeTMDatumInput
} as const;

// Table ze_t_m_journal
export interface ZeTMJournal {
  luserid: number | null;
  str_aktion: string | null;
  strid: string;
  dtedit: string | null;
  dtinsert: string | null;
  luseridinsert: number | null;
  fkstrid: string | null;
  txt_notiz: string | null;
}
export interface ZeTMJournalInput {
  luserid?: number | null;
  str_aktion?: string | null;
  strid: string;
  dtedit?: string | null;
  dtinsert?: string | null;
  luseridinsert?: number | null;
  fkstrid?: string | null;
  txt_notiz?: string | null;
}
const ze_t_m_journal = {
  tableName: 'ze_t_m_journal',
  columns: ['luserid', 'str_aktion', 'strid', 'dtedit', 'dtinsert', 'luseridinsert', 'fkstrid', 'txt_notiz'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'ze_t_monat', column: 'strid', $type: null as unknown as ZeTMonat }, },
  $type: null as unknown as ZeTMJournal,
  $input: null as unknown as ZeTMJournalInput
} as const;

// Table ze_t_m_massnahmen
export interface ZeTMMassnahmen {
  luseridinsert: number | null;
  txt_massnahmen: string | null;
  luserid: number | null;
  strid: string;
  dtedit: string | null;
  fkstrid: string | null;
  dtinsert: string | null;
}
export interface ZeTMMassnahmenInput {
  luseridinsert?: number | null;
  txt_massnahmen?: string | null;
  luserid?: number | null;
  strid: string;
  dtedit?: string | null;
  fkstrid?: string | null;
  dtinsert?: string | null;
}
const ze_t_m_massnahmen = {
  tableName: 'ze_t_m_massnahmen',
  columns: ['luseridinsert', 'txt_massnahmen', 'luserid', 'strid', 'dtedit', 'fkstrid', 'dtinsert'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: { fkstrid: { table: 'ze_t_monat', column: 'strid', $type: null as unknown as ZeTMonat }, },
  $type: null as unknown as ZeTMMassnahmen,
  $input: null as unknown as ZeTMMassnahmenInput
} as const;

// Table ze_t_monat
export interface ZeTMonat {
  l_jahr: number | null;
  str_zeitist: string | null;
  ref_freigabestatus: string | null;
  l_zeitsaldosekunden: number | null;
  l_zeitistsekunden: number | null;
  str_monat: string | null;
  l_zeituebertragsekunden: number | null;
  dtinsert: string | null;
  strid: string;
  ref_benutzer: number | null;
  str_mitarbeiterin: string | null;
  ref_personal: string | null;
  str_fuehrungskraft: string | null;
  l_kappungsgrenze: number | null;
  luserid: number | null;
  l_monat: number | null;
  str_zeituebertrag: string | null;
  luseridinsert: number | null;
  b_kappungsgrenzeein: boolean | null;
  str_zeitsaldo: string | null;
  ref_fk_benutzer: number | null;
  str_ampel: string | null;
  ref_status: string | null;
  ref_bl: string | null;
  dtedit: string | null;
  ref_fk_personal: string | null;
  b_archiv: boolean | null;
  ref_saldenkontrolle: string | null;
  str_stellenzeichen: string | null;
  str_referat: string | null;
  txt_begruendungbeiablehnung: string | null;
  dt_loeschdatum: string | null;
  b_geloescht: boolean | null;
  str_zeitraumbuchungsart: string | null;
  dt_zeitraumvon: string | null;
  dt_zeitraumbis: string | null;
}
export interface ZeTMonatInput {
  l_jahr?: number | null;
  str_zeitist?: string | null;
  ref_freigabestatus?: string | null;
  l_zeitsaldosekunden?: number | null;
  l_zeitistsekunden?: number | null;
  str_monat?: string | null;
  l_zeituebertragsekunden?: number | null;
  dtinsert?: string | null;
  strid: string;
  ref_benutzer?: number | null;
  str_mitarbeiterin?: string | null;
  ref_personal?: string | null;
  str_fuehrungskraft?: string | null;
  l_kappungsgrenze?: number | null;
  luserid?: number | null;
  l_monat?: number | null;
  str_zeituebertrag?: string | null;
  luseridinsert?: number | null;
  b_kappungsgrenzeein?: boolean | null;
  str_zeitsaldo?: string | null;
  ref_fk_benutzer?: number | null;
  str_ampel?: string | null;
  ref_status?: string | null;
  ref_bl?: string | null;
  dtedit?: string | null;
  ref_fk_personal?: string | null;
  b_archiv?: boolean | null;
  ref_saldenkontrolle?: string | null;
  str_stellenzeichen?: string | null;
  str_referat?: string | null;
  txt_begruendungbeiablehnung?: string | null;
  dt_loeschdatum?: string | null;
  b_geloescht?: boolean | null;
  str_zeitraumbuchungsart?: string | null;
  dt_zeitraumvon?: string | null;
  dt_zeitraumbis?: string | null;
}
const ze_t_monat = {
  tableName: 'ze_t_monat',
  columns: ['l_jahr', 'str_zeitist', 'ref_freigabestatus', 'l_zeitsaldosekunden', 'l_zeitistsekunden', 'str_monat', 'l_zeituebertragsekunden', 'dtinsert', 'strid', 'ref_benutzer', 'str_mitarbeiterin', 'ref_personal', 'str_fuehrungskraft', 'l_kappungsgrenze', 'luserid', 'l_monat', 'str_zeituebertrag', 'luseridinsert', 'b_kappungsgrenzeein', 'str_zeitsaldo', 'ref_fk_benutzer', 'str_ampel', 'ref_status', 'ref_bl', 'dtedit', 'ref_fk_personal', 'b_archiv', 'ref_saldenkontrolle', 'str_stellenzeichen', 'str_referat', 'txt_begruendungbeiablehnung', 'dt_loeschdatum', 'b_geloescht', 'str_zeitraumbuchungsart', 'dt_zeitraumvon', 'dt_zeitraumbis'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_freigabestatus: { table: 'ze_kat_freigabestatus', column: 'strid', $type: null as unknown as ZeKatFreigabestatus },
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_status: { table: 'ze_kat_erfassungsstatus', column: 'strid', $type: null as unknown as ZeKatErfassungsstatus },
    ref_bl: { table: 'per_kat_bueroleitung', column: 'strid', $type: null as unknown as PerKatBueroleitung },
    ref_fk_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_saldenkontrolle: { table: 'ze_kat_saldenkontrolle', column: 'strid', $type: null as unknown as ZeKatSaldenkontrolle },
  },
  $type: null as unknown as ZeTMonat,
  $input: null as unknown as ZeTMonatInput
} as const;

// Table ze_t_perssettings
export interface ZeTPerssettings {
  str_startwert: string | null;
  dt_vorgabefuerendezeit: string | null;
  l_startwertinminuten: number | null;
  dt_vorgabefuerbeginnzeit: string | null;
  luseridinsert: number | null;
  strid: string;
  luserid: number | null;
  dtedit: string | null;
  dtinsert: string | null;
  txt_buchungsarten: string | null;
}
export interface ZeTPerssettingsInput {
  str_startwert?: string | null;
  dt_vorgabefuerendezeit?: string | null;
  l_startwertinminuten?: number | null;
  dt_vorgabefuerbeginnzeit?: string | null;
  luseridinsert?: number | null;
  strid: string;
  luserid?: number | null;
  dtedit?: string | null;
  dtinsert?: string | null;
  txt_buchungsarten?: string | null;
}
const ze_t_perssettings = {
  tableName: 'ze_t_perssettings',
  columns: ['str_startwert', 'dt_vorgabefuerendezeit', 'l_startwertinminuten', 'dt_vorgabefuerbeginnzeit', 'luseridinsert', 'strid', 'luserid', 'dtedit', 'dtinsert', 'txt_buchungsarten'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {},
  $type: null as unknown as ZeTPerssettings,
  $input: null as unknown as ZeTPerssettingsInput
} as const;

// Table ze_t_perssettings_art
export interface ZeTPerssettingsArt {
  ref_buchungsart: string | null;
  dtinsert: string | null;
  lid: number;
  fkstrid: string | null;
  luseridinsert: number | null;
  dtedit: string | null;
  luserid: number | null;
}
export interface ZeTPerssettingsArtInput {
  ref_buchungsart?: string | null;
  dtinsert?: string | null;
  lid: number;
  fkstrid?: string | null;
  luseridinsert?: number | null;
  dtedit?: string | null;
  luserid?: number | null;
}
const ze_t_perssettings_art = {
  tableName: 'ze_t_perssettings_art',
  columns: ['ref_buchungsart', 'dtinsert', 'lid', 'fkstrid', 'luseridinsert', 'dtedit', 'luserid'],
  requiredForInsert: ['lid'],
  primaryKey: 'lid',
  foreignKeys: {
    ref_buchungsart: { table: 'ze_kat_buchungsart', column: 'strid', $type: null as unknown as ZeKatBuchungsart },
    fkstrid: { table: 'ze_t_perssettings', column: 'strid', $type: null as unknown as ZeTPerssettings },
  },
  $type: null as unknown as ZeTPerssettingsArt,
  $input: null as unknown as ZeTPerssettingsArtInput
} as const;

// Table ze_t_quartalsbericht
export interface ZeTQuartalsbericht {
  dtedit: string | null;
  ref_personal: string | null;
  luserid: number | null;
  ref_saldenkontrolle: string | null;
  dtinsert: string | null;
  l_jahr: number | null;
  strid: string;
  luseridinsert: number | null;
  str_saldo: string | null;
  str_quartal: string | null;
  str_monat3: string | null;
  str_abteilung: string | null;
  str_monat1: string | null;
  str_monat2: string | null;
  str_referat: string | null;
}
export interface ZeTQuartalsberichtInput {
  dtedit?: string | null;
  ref_personal?: string | null;
  luserid?: number | null;
  ref_saldenkontrolle?: string | null;
  dtinsert?: string | null;
  l_jahr?: number | null;
  strid: string;
  luseridinsert?: number | null;
  str_saldo?: string | null;
  str_quartal?: string | null;
  str_monat3?: string | null;
  str_abteilung?: string | null;
  str_monat1?: string | null;
  str_monat2?: string | null;
  str_referat?: string | null;
}
const ze_t_quartalsbericht = {
  tableName: 'ze_t_quartalsbericht',
  columns: ['dtedit', 'ref_personal', 'luserid', 'ref_saldenkontrolle', 'dtinsert', 'l_jahr', 'strid', 'luseridinsert', 'str_saldo', 'str_quartal', 'str_monat3', 'str_abteilung', 'str_monat1', 'str_monat2', 'str_referat'],
  requiredForInsert: ['strid'],
  primaryKey: 'strid',
  foreignKeys: {
    ref_personal: { table: 'per_t_personal', column: 'strid', $type: null as unknown as PerTPersonal },
    ref_saldenkontrolle: { table: 'ze_kat_saldenkontrolle', column: 'strid', $type: null as unknown as ZeKatSaldenkontrolle },
  },
  $type: null as unknown as ZeTQuartalsbericht,
  $input: null as unknown as ZeTQuartalsberichtInput
} as const;


export interface TableTypes {
  abp_kat_freigabestatus: {
    select: AbpKatFreigabestatus;
    input: AbpKatFreigabestatusInput;
  };
  abp_kat_kategorie: {
    select: AbpKatKategorie;
    input: AbpKatKategorieInput;
  };
  abp_kat_planungsstatus: {
    select: AbpKatPlanungsstatus;
    input: AbpKatPlanungsstatusInput;
  };
  abp_kat_zustimmungsstatus: {
    select: AbpKatZustimmungsstatus;
    input: AbpKatZustimmungsstatusInput;
  };
  abp_t_abp: {
    select: AbpTAbp;
    input: AbpTAbpInput;
  };
  abp_t_abp_ma: {
    select: AbpTAbpMa;
    input: AbpTAbpMaInput;
  };
  abp_t_abp_ma_details: {
    select: AbpTAbpMaDetails;
    input: AbpTAbpMaDetailsInput;
  };
  abp_t_abp_status: {
    select: AbpTAbpStatus;
    input: AbpTAbpStatusInput;
  };
  abp_t_abp_zstatus: {
    select: AbpTAbpZstatus;
    input: AbpTAbpZstatusInput;
  };
  abw_kat_abwesenheitsart: {
    select: AbwKatAbwesenheitsart;
    input: AbwKatAbwesenheitsartInput;
  };
  abw_kat_antragsstatus: {
    select: AbwKatAntragsstatus;
    input: AbwKatAntragsstatusInput;
  };
  abw_kat_planungsprozess: {
    select: AbwKatPlanungsprozess;
    input: AbwKatPlanungsprozessInput;
  };
  abw_t_antrag: {
    select: AbwTAntrag;
    input: AbwTAntragInput;
  };
  abw_t_antrag_abwesenheit: {
    select: AbwTAntragAbwesenheit;
    input: AbwTAntragAbwesenheitInput;
  };
  benv_t_u_apps: {
    select: BenvTUApps;
    input: BenvTUAppsInput;
  };
  benv_t_u_gruppen: {
    select: BenvTUGruppen;
    input: BenvTUGruppenInput;
  };
  benv_t_u_zusatzdaten: {
    select: BenvTUZusatzdaten;
    input: BenvTUZusatzdatenInput;
  };
  bixv_kat_matching: {
    select: BixvKatMatching;
    input: BixvKatMatchingInput;
  };
  bixv_kat_matching_metadat: {
    select: BixvKatMatchingMetadat;
    input: BixvKatMatchingMetadatInput;
  };
  bixv_kat_settings: {
    select: BixvKatSettings;
    input: BixvKatSettingsInput;
  };
  bixv_kat_status: {
    select: BixvKatStatus;
    input: BixvKatStatusInput;
  };
  bixv_kat_vismetadaten: {
    select: BixvKatVismetadaten;
    input: BixvKatVismetadatenInput;
  };
  bixv_t_archiv: {
    select: BixvTArchiv;
    input: BixvTArchivInput;
  };
  bixv_t_archiv2: {
    select: BixvTArchiv2;
    input: BixvTArchiv2Input;
  };
  bixv_t_inbox: {
    select: BixvTInbox;
    input: BixvTInboxInput;
  };
  bixv_t_inbox_md: {
    select: BixvTInboxMd;
    input: BixvTInboxMdInput;
  };
  bixv_t_journal: {
    select: BixvTJournal;
    input: BixvTJournalInput;
  };
  bixv_t_log: {
    select: BixvTLog;
    input: BixvTLogInput;
  };
  bixv_t_suchtrefferakten: {
    select: BixvTSuchtrefferakten;
    input: BixvTSuchtrefferaktenInput;
  };
  cal_kat_bestuhlung: {
    select: CalKatBestuhlung;
    input: CalKatBestuhlungInput;
  };
  cal_kat_kategorien: {
    select: CalKatKategorien;
    input: CalKatKategorienInput;
  };
  cal_kat_status: {
    select: CalKatStatus;
    input: CalKatStatusInput;
  };
  cal_kat_veranstaltungsart: {
    select: CalKatVeranstaltungsart;
    input: CalKatVeranstaltungsartInput;
  };
  cal_kat_zusatzleistungen: {
    select: CalKatZusatzleistungen;
    input: CalKatZusatzleistungenInput;
  };
  cal_set_personal: {
    select: CalSetPersonal;
    input: CalSetPersonalInput;
  };
  cal_t_externe_verwalter: {
    select: CalTExterneVerwalter;
    input: CalTExterneVerwalterInput;
  };
  cal_t_ressource_standard: {
    select: CalTRessourceStandard;
    input: CalTRessourceStandardInput;
  };
  cal_t_ressourcen: {
    select: CalTRessourcen;
    input: CalTRessourcenInput;
  };
  cal_t_ressourcen_bestuhl: {
    select: CalTRessourcenBestuhl;
    input: CalTRessourcenBestuhlInput;
  };
  cal_t_ressourcen_equipment: {
    select: CalTRessourcenEquipment;
    input: CalTRessourcenEquipmentInput;
  };
  cal_t_termine: {
    select: CalTTermine;
    input: CalTTermineInput;
  };
  cal_t_termine_journal: {
    select: CalTTermineJournal;
    input: CalTTermineJournalInput;
  };
  cal_t_termine_nachrichten: {
    select: CalTTermineNachrichten;
    input: CalTTermineNachrichtenInput;
  };
  cal_t_termine_reservierer: {
    select: CalTTermineReservierer;
    input: CalTTermineReserviererInput;
  };
  chat: {
    select: Chat;
    input: ChatInput;
  };
  chat_document: {
    select: ChatDocument;
    input: ChatDocumentInput;
  };
  chat_message: {
    select: ChatMessage;
    input: ChatMessageInput;
  };
  chat_recipient: {
    select: ChatRecipient;
    input: ChatRecipientInput;
  };
  chat_reffiles: {
    select: ChatReffiles;
    input: ChatReffilesInput;
  };
  chat_usersettings: {
    select: ChatUsersettings;
    input: ChatUsersettingsInput;
  };
  dsattribute: {
    select: Dsattribute;
    input: DsattributeInput;
  };
  dsattributetitle: {
    select: Dsattributetitle;
    input: DsattributetitleInput;
  };
  dsclass: {
    select: Dsclass;
    input: DsclassInput;
  };
  dsclasstitle: {
    select: Dsclasstitle;
    input: DsclasstitleInput;
  };
  dscontainer: {
    select: Dscontainer;
    input: DscontainerInput;
  };
  dscountry: {
    select: Dscountry;
    input: DscountryInput;
  };
  dsdistlist: {
    select: Dsdistlist;
    input: DsdistlistInput;
  };
  dsgroup: {
    select: Dsgroup;
    input: DsgroupInput;
  };
  dslocality: {
    select: Dslocality;
    input: DslocalityInput;
  };
  dsmember: {
    select: Dsmember;
    input: DsmemberInput;
  };
  dsobject: {
    select: Dsobject;
    input: DsobjectInput;
  };
  dsorganization: {
    select: Dsorganization;
    input: DsorganizationInput;
  };
  dsorgunit: {
    select: Dsorgunit;
    input: DsorgunitInput;
  };
  dspasswordhistory: {
    select: Dspasswordhistory;
    input: DspasswordhistoryInput;
  };
  dsrole: {
    select: Dsrole;
    input: DsroleInput;
  };
  dsset: {
    select: Dsset;
    input: DssetInput;
  };
  dsstatus: {
    select: Dsstatus;
    input: DsstatusInput;
  };
  dstenant: {
    select: Dstenant;
    input: DstenantInput;
  };
  dsuser: {
    select: Dsuser;
    input: DsuserInput;
  };
  ft_t_feiertage: {
    select: FtTFeiertage;
    input: FtTFeiertageInput;
  };
  ft_t_gedenktage: {
    select: FtTGedenktage;
    input: FtTGedenktageInput;
  };
  h_t_a_hilfetexte: {
    select: HTAHilfetexte;
    input: HTAHilfetexteInput;
  };
  h_t_anwendung: {
    select: HTAnwendung;
    input: HTAnwendungInput;
  };
  inv_kat_bereich: {
    select: InvKatBereich;
    input: InvKatBereichInput;
  };
  inv_kat_kategorie: {
    select: InvKatKategorie;
    input: InvKatKategorieInput;
  };
  inv_kat_unterkategorie: {
    select: InvKatUnterkategorie;
    input: InvKatUnterkategorieInput;
  };
  inv_t_inventar: {
    select: InvTInventar;
    input: InvTInventarInput;
  };
  is_ad_settings: {
    select: IsAdSettings;
    input: IsAdSettingsInput;
  };
  is_advertising: {
    select: IsAdvertising;
    input: IsAdvertisingInput;
  };
  is_advertising_department: {
    select: IsAdvertisingDepartment;
    input: IsAdvertisingDepartmentInput;
  };
  is_advertising_file: {
    select: IsAdvertisingFile;
    input: IsAdvertisingFileInput;
  };
  is_advertising_interest: {
    select: IsAdvertisingInterest;
    input: IsAdvertisingInterestInput;
  };
  is_advertising_language: {
    select: IsAdvertisingLanguage;
    input: IsAdvertisingLanguageInput;
  };
  is_advertising_skill: {
    select: IsAdvertisingSkill;
    input: IsAdvertisingSkillInput;
  };
  is_categories: {
    select: IsCategories;
    input: IsCategoriesInput;
  };
  is_comment: {
    select: IsComment;
    input: IsCommentInput;
  };
  is_comment_file: {
    select: IsCommentFile;
    input: IsCommentFileInput;
  };
  is_comment_like: {
    select: IsCommentLike;
    input: IsCommentLikeInput;
  };
  is_contact: {
    select: IsContact;
    input: IsContactInput;
  };
  is_event: {
    select: IsEvent;
    input: IsEventInput;
  };
  is_event_img: {
    select: IsEventImg;
    input: IsEventImgInput;
  };
  is_event_participant: {
    select: IsEventParticipant;
    input: IsEventParticipantInput;
  };
  is_feed: {
    select: IsFeed;
    input: IsFeedInput;
  };
  is_feed_recipient: {
    select: IsFeedRecipient;
    input: IsFeedRecipientInput;
  };
  is_feed_setting: {
    select: IsFeedSetting;
    input: IsFeedSettingInput;
  };
  is_feedpk: {
    select: IsFeedpk;
    input: IsFeedpkInput;
  };
  is_file_shelf: {
    select: IsFileShelf;
    input: IsFileShelfInput;
  };
  is_file_shelf_file: {
    select: IsFileShelfFile;
    input: IsFileShelfFileInput;
  };
  is_file_shelf_folder: {
    select: IsFileShelfFolder;
    input: IsFileShelfFolderInput;
  };
  is_file_shelf_folderperm: {
    select: IsFileShelfFolderperm;
    input: IsFileShelfFolderpermInput;
  };
  is_group: {
    select: IsGroup;
    input: IsGroupInput;
  };
  is_group_bid: {
    select: IsGroupBid;
    input: IsGroupBidInput;
  };
  is_group_img: {
    select: IsGroupImg;
    input: IsGroupImgInput;
  };
  is_group_member: {
    select: IsGroupMember;
    input: IsGroupMemberInput;
  };
  is_interest: {
    select: IsInterest;
    input: IsInterestInput;
  };
  is_mailsetting: {
    select: IsMailsetting;
    input: IsMailsettingInput;
  };
  is_message: {
    select: IsMessage;
    input: IsMessageInput;
  };
  is_message_member: {
    select: IsMessageMember;
    input: IsMessageMemberInput;
  };
  is_modules: {
    select: IsModules;
    input: IsModulesInput;
  };
  is_photo: {
    select: IsPhoto;
    input: IsPhotoInput;
  };
  is_photo_file: {
    select: IsPhotoFile;
    input: IsPhotoFileInput;
  };
  is_photoalbum: {
    select: IsPhotoalbum;
    input: IsPhotoalbumInput;
  };
  is_photoalbum_preview_img: {
    select: IsPhotoalbumPreviewImg;
    input: IsPhotoalbumPreviewImgInput;
  };
  is_photoalbum_recipient: {
    select: IsPhotoalbumRecipient;
    input: IsPhotoalbumRecipientInput;
  };
  is_poke: {
    select: IsPoke;
    input: IsPokeInput;
  };
  is_post: {
    select: IsPost;
    input: IsPostInput;
  };
  is_post_file: {
    select: IsPostFile;
    input: IsPostFileInput;
  };
  is_post_img: {
    select: IsPostImg;
    input: IsPostImgInput;
  };
  is_profile: {
    select: IsProfile;
    input: IsProfileInput;
  };
  is_profile_img: {
    select: IsProfileImg;
    input: IsProfileImgInput;
  };
  is_profile_mailsetting: {
    select: IsProfileMailsetting;
    input: IsProfileMailsettingInput;
  };
  is_profile_nav: {
    select: IsProfileNav;
    input: IsProfileNavInput;
  };
  is_profile_pushsetting: {
    select: IsProfilePushsetting;
    input: IsProfilePushsettingInput;
  };
  is_profile_setting: {
    select: IsProfileSetting;
    input: IsProfileSettingInput;
  };
  is_pushnotificationsetting: {
    select: IsPushnotificationsetting;
    input: IsPushnotificationsettingInput;
  };
  is_systemmessage: {
    select: IsSystemmessage;
    input: IsSystemmessageInput;
  };
  is_systemmessage_rcpt: {
    select: IsSystemmessageRcpt;
    input: IsSystemmessageRcptInput;
  };
  is_systemmessage_reference: {
    select: IsSystemmessageReference;
    input: IsSystemmessageReferenceInput;
  };
  is_userplugin: {
    select: IsUserplugin;
    input: IsUserpluginInput;
  };
  ix_basic_datagroup: {
    select: IxBasicDatagroup;
    input: IxBasicDatagroupInput;
  };
  ix_doc_category: {
    select: IxDocCategory;
    input: IxDocCategoryInput;
  };
  ix_doc_document: {
    select: IxDocDocument;
    input: IxDocDocumentInput;
  };
  katalog_bezirke: {
    select: KatalogBezirke;
    input: KatalogBezirkeInput;
  };
  katalog_schulen: {
    select: KatalogSchulen;
    input: KatalogSchulenInput;
  };
  katalog_standorte: {
    select: KatalogStandorte;
    input: KatalogStandorteInput;
  };
  kb_kat_boardstatus: {
    select: KbKatBoardstatus;
    input: KbKatBoardstatusInput;
  };
  kb_t_b_besitzer: {
    select: KbTBBesitzer;
    input: KbTBBesitzerInput;
  };
  kb_t_b_favoriten: {
    select: KbTBFavoriten;
    input: KbTBFavoritenInput;
  };
  kb_t_b_k_beobachten: {
    select: KbTBKBeobachten;
    input: KbTBKBeobachtenInput;
  };
  kb_t_b_k_c_mitglieder: {
    select: KbTBKCMitglieder;
    input: KbTBKCMitgliederInput;
  };
  kb_t_b_k_checkliste: {
    select: KbTBKCheckliste;
    input: KbTBKChecklisteInput;
  };
  kb_t_b_k_connections: {
    select: KbTBKConnections;
    input: KbTBKConnectionsInput;
  };
  kb_t_b_k_journal: {
    select: KbTBKJournal;
    input: KbTBKJournalInput;
  };
  kb_t_b_k_k_journal: {
    select: KbTBKKJournal;
    input: KbTBKKJournalInput;
  };
  kb_t_b_k_kommentare: {
    select: KbTBKKommentare;
    input: KbTBKKommentareInput;
  };
  kb_t_b_k_labels: {
    select: KbTBKLabels;
    input: KbTBKLabelsInput;
  };
  kb_t_b_k_m_mitglieder: {
    select: KbTBKMMitglieder;
    input: KbTBKMMitgliederInput;
  };
  kb_t_b_k_mitglieder: {
    select: KbTBKMitglieder;
    input: KbTBKMitgliederInput;
  };
  kb_t_b_k_nachrichten: {
    select: KbTBKNachrichten;
    input: KbTBKNachrichtenInput;
  };
  kb_t_b_karte: {
    select: KbTBKarte;
    input: KbTBKarteInput;
  };
  kb_t_b_kategorie: {
    select: KbTBKategorie;
    input: KbTBKategorieInput;
  };
  kb_t_b_labels: {
    select: KbTBLabels;
    input: KbTBLabelsInput;
  };
  kb_t_b_mitglieder: {
    select: KbTBMitglieder;
    input: KbTBMitgliederInput;
  };
  kb_t_b_personal_settings: {
    select: KbTBPersonalSettings;
    input: KbTBPersonalSettingsInput;
  };
  kb_t_b_prioritaet: {
    select: KbTBPrioritaet;
    input: KbTBPrioritaetInput;
  };
  kb_t_b_spalte: {
    select: KbTBSpalte;
    input: KbTBSpalteInput;
  };
  kb_t_b_status: {
    select: KbTBStatus;
    input: KbTBStatusInput;
  };
  kb_t_backup: {
    select: KbTBackup;
    input: KbTBackupInput;
  };
  kb_t_board: {
    select: KbTBoard;
    input: KbTBoardInput;
  };
  kb_t_boardgruppe: {
    select: KbTBoardgruppe;
    input: KbTBoardgruppeInput;
  };
  kb_t_bu_besitzer: {
    select: KbTBuBesitzer;
    input: KbTBuBesitzerInput;
  };
  kb_t_emailtemplates: {
    select: KbTEmailtemplates;
    input: KbTEmailtemplatesInput;
  };
  kb_t_personal_settings: {
    select: KbTPersonalSettings;
    input: KbTPersonalSettingsInput;
  };
  kb_t_serientermine: {
    select: KbTSerientermine;
    input: KbTSerientermineInput;
  };
  lcapikey: {
    select: Lcapikey;
    input: LcapikeyInput;
  };
  lcapikeyrole: {
    select: Lcapikeyrole;
    input: LcapikeyroleInput;
  };
  lcapiperm: {
    select: Lcapiperm;
    input: LcapipermInput;
  };
  lcapirole: {
    select: Lcapirole;
    input: LcapiroleInput;
  };
  lcapp: {
    select: Lcapp;
    input: LcappInput;
  };
  lcappaction: {
    select: Lcappaction;
    input: LcappactionInput;
  };
  lcappchildcontrol: {
    select: Lcappchildcontrol;
    input: LcappchildcontrolInput;
  };
  lcappchildcontroltitle: {
    select: Lcappchildcontroltitle;
    input: LcappchildcontroltitleInput;
  };
  lcappcontrol: {
    select: Lcappcontrol;
    input: LcappcontrolInput;
  };
  lcappcontroldr: {
    select: Lcappcontroldr;
    input: LcappcontroldrInput;
  };
  lcappcontroldrtitle: {
    select: Lcappcontroldrtitle;
    input: LcappcontroldrtitleInput;
  };
  lcappcontroltitle: {
    select: Lcappcontroltitle;
    input: LcappcontroltitleInput;
  };
  lcappdatapick: {
    select: Lcappdatapick;
    input: LcappdatapickInput;
  };
  lcappdatapickchild: {
    select: Lcappdatapickchild;
    input: LcappdatapickchildInput;
  };
  lcappdg: {
    select: Lcappdg;
    input: LcappdgInput;
  };
  lcappdgtitle: {
    select: Lcappdgtitle;
    input: LcappdgtitleInput;
  };
  lcappfield: {
    select: Lcappfield;
    input: LcappfieldInput;
  };
  lcappfieldtitle: {
    select: Lcappfieldtitle;
    input: LcappfieldtitleInput;
  };
  lcappfilter: {
    select: Lcappfilter;
    input: LcappfilterInput;
  };
  lcappform: {
    select: Lcappform;
    input: LcappformInput;
  };
  lcappfup: {
    select: Lcappfup;
    input: LcappfupInput;
  };
  lcappfupdg: {
    select: Lcappfupdg;
    input: LcappfupdgInput;
  };
  lcappfuptitle: {
    select: Lcappfuptitle;
    input: LcappfuptitleInput;
  };
  lcappindex: {
    select: Lcappindex;
    input: LcappindexInput;
  };
  lcappindexcolumn: {
    select: Lcappindexcolumn;
    input: LcappindexcolumnInput;
  };
  lcapplink: {
    select: Lcapplink;
    input: LcapplinkInput;
  };
  lcappmail: {
    select: Lcappmail;
    input: LcappmailInput;
  };
  lcappmailrcp: {
    select: Lcappmailrcp;
    input: LcappmailrcpInput;
  };
  lcappmenuitem: {
    select: Lcappmenuitem;
    input: LcappmenuitemInput;
  };
  lcappprops: {
    select: Lcappprops;
    input: LcapppropsInput;
  };
  lcappref: {
    select: Lcappref;
    input: LcapprefInput;
  };
  lcapprefparam: {
    select: Lcapprefparam;
    input: LcapprefparamInput;
  };
  lcappreftitle: {
    select: Lcappreftitle;
    input: LcappreftitleInput;
  };
  lcappsearchconfig: {
    select: Lcappsearchconfig;
    input: LcappsearchconfigInput;
  };
  lcapptempl: {
    select: Lcapptempl;
    input: LcapptemplInput;
  };
  lcapptitle: {
    select: Lcapptitle;
    input: LcapptitleInput;
  };
  lccalrecu: {
    select: Lccalrecu;
    input: LccalrecuInput;
  };
  lccategory: {
    select: Lccategory;
    input: LccategoryInput;
  };
  lccategorytitle: {
    select: Lccategorytitle;
    input: LccategorytitleInput;
  };
  lcexport: {
    select: Lcexport;
    input: LcexportInput;
  };
  lcfwconn: {
    select: Lcfwconn;
    input: LcfwconnInput;
  };
  lclinkedelement: {
    select: Lclinkedelement;
    input: LclinkedelementInput;
  };
  lclinkedrecords: {
    select: Lclinkedrecords;
    input: LclinkedrecordsInput;
  };
  lclinkedrecordspk: {
    select: Lclinkedrecordspk;
    input: LclinkedrecordspkInput;
  };
  lcmainportal: {
    select: Lcmainportal;
    input: LcmainportalInput;
  };
  lcmapapp: {
    select: Lcmapapp;
    input: LcmapappInput;
  };
  lcmenu: {
    select: Lcmenu;
    input: LcmenuInput;
  };
  lcmenucloud: {
    select: Lcmenucloud;
    input: LcmenucloudInput;
  };
  lcmenuprop: {
    select: Lcmenuprop;
    input: LcmenupropInput;
  };
  lcmenutitle: {
    select: Lcmenutitle;
    input: LcmenutitleInput;
  };
  lcmessages: {
    select: Lcmessages;
    input: LcmessagesInput;
  };
  lcpermclass: {
    select: Lcpermclass;
    input: LcpermclassInput;
  };
  lcpolicy: {
    select: Lcpolicy;
    input: LcpolicyInput;
  };
  lcprofile: {
    select: Lcprofile;
    input: LcprofileInput;
  };
  lcprtclass: {
    select: Lcprtclass;
    input: LcprtclassInput;
  };
  lcprtgrid: {
    select: Lcprtgrid;
    input: LcprtgridInput;
  };
  lcprtgridportlet: {
    select: Lcprtgridportlet;
    input: LcprtgridportletInput;
  };
  lcprtinstance: {
    select: Lcprtinstance;
    input: LcprtinstanceInput;
  };
  lcprtmetadata: {
    select: Lcprtmetadata;
    input: LcprtmetadataInput;
  };
  lcprtprop: {
    select: Lcprtprop;
    input: LcprtpropInput;
  };
  lcprtref: {
    select: Lcprtref;
    input: LcprtrefInput;
  };
  lcprtset: {
    select: Lcprtset;
    input: LcprtsetInput;
  };
  lcrdf: {
    select: Lcrdf;
    input: LcrdfInput;
  };
  lcrdfpredicate: {
    select: Lcrdfpredicate;
    input: LcrdfpredicateInput;
  };
  lcrdfuser: {
    select: Lcrdfuser;
    input: LcrdfuserInput;
  };
  lcrecipients: {
    select: Lcrecipients;
    input: LcrecipientsInput;
  };
  lcschedhistory: {
    select: Lcschedhistory;
    input: LcschedhistoryInput;
  };
  lcschedstatistics: {
    select: Lcschedstatistics;
    input: LcschedstatisticsInput;
  };
  lcsearchalternative: {
    select: Lcsearchalternative;
    input: LcsearchalternativeInput;
  };
  lctaggingposts: {
    select: Lctaggingposts;
    input: LctaggingpostsInput;
  };
  lctaggingtags: {
    select: Lctaggingtags;
    input: LctaggingtagsInput;
  };
  per_kat_art: {
    select: PerKatArt;
    input: PerKatArtInput;
  };
  per_kat_ausstattung: {
    select: PerKatAusstattung;
    input: PerKatAusstattungInput;
  };
  per_kat_ausstattung_kat: {
    select: PerKatAusstattungKat;
    input: PerKatAusstattungKatInput;
  };
  per_kat_buerol_ebene1: {
    select: PerKatBuerolEbene1;
    input: PerKatBuerolEbene1Input;
  };
  per_kat_bueroleitung: {
    select: PerKatBueroleitung;
    input: PerKatBueroleitungInput;
  };
  per_kat_funktion: {
    select: PerKatFunktion;
    input: PerKatFunktionInput;
  };
  per_kat_standorte: {
    select: PerKatStandorte;
    input: PerKatStandorteInput;
  };
  per_kat_zusatzfunktion: {
    select: PerKatZusatzfunktion;
    input: PerKatZusatzfunktionInput;
  };
  per_t_import_az: {
    select: PerTImportAz;
    input: PerTImportAzInput;
  };
  per_t_orga0: {
    select: PerTOrga0;
    input: PerTOrga0Input;
  };
  per_t_orga1: {
    select: PerTOrga1;
    input: PerTOrga1Input;
  };
  per_t_orga2: {
    select: PerTOrga2;
    input: PerTOrga2Input;
  };
  per_t_orga3: {
    select: PerTOrga3;
    input: PerTOrga3Input;
  };
  per_t_orga4: {
    select: PerTOrga4;
    input: PerTOrga4Input;
  };
  per_t_pers_azk: {
    select: PerTPersAzk;
    input: PerTPersAzkInput;
  };
  per_t_pers_journal: {
    select: PerTPersJournal;
    input: PerTPersJournalInput;
  };
  per_t_pers_profil: {
    select: PerTPersProfil;
    input: PerTPersProfilInput;
  };
  per_t_pers_uk: {
    select: PerTPersUk;
    input: PerTPersUkInput;
  };
  per_t_personal: {
    select: PerTPersonal;
    input: PerTPersonalInput;
  };
  per_t_personal_import: {
    select: PerTPersonalImport;
    input: PerTPersonalImportInput;
  };
  planner_event: {
    select: PlannerEvent;
    input: PlannerEventInput;
  };
  planner_member: {
    select: PlannerMember;
    input: PlannerMemberInput;
  };
  planner_owners: {
    select: PlannerOwners;
    input: PlannerOwnersInput;
  };
  planner_times: {
    select: PlannerTimes;
    input: PlannerTimesInput;
  };
  qu_categories: {
    select: QuCategories;
    input: QuCategoriesInput;
  };
  qu_comment: {
    select: QuComment;
    input: QuCommentInput;
  };
  qu_comment_files: {
    select: QuCommentFiles;
    input: QuCommentFilesInput;
  };
  qu_persons: {
    select: QuPersons;
    input: QuPersonsInput;
  };
  qu_question_answers: {
    select: QuQuestionAnswers;
    input: QuQuestionAnswersInput;
  };
  qu_question_cat: {
    select: QuQuestionCat;
    input: QuQuestionCatInput;
  };
  qu_question_tags: {
    select: QuQuestionTags;
    input: QuQuestionTagsInput;
  };
  qu_questions: {
    select: QuQuestions;
    input: QuQuestionsInput;
  };
  qu_questions_files: {
    select: QuQuestionsFiles;
    input: QuQuestionsFilesInput;
  };
  qu_tags: {
    select: QuTags;
    input: QuTagsInput;
  };
  qu_votes: {
    select: QuVotes;
    input: QuVotesInput;
  };
  scbau_imp_eckdaten: {
    select: ScbauImpEckdaten;
    input: ScbauImpEckdatenInput;
  };
  scbau_imp_eckdaten_daten: {
    select: ScbauImpEckdatenDaten;
    input: ScbauImpEckdatenDatenInput;
  };
  scbau_kat_aufgabentraeger: {
    select: ScbauKatAufgabentraeger;
    input: ScbauKatAufgabentraegerInput;
  };
  scbau_kat_bautyp: {
    select: ScbauKatBautyp;
    input: ScbauKatBautypInput;
  };
  scbau_kat_bedarfstraeger: {
    select: ScbauKatBedarfstraeger;
    input: ScbauKatBedarfstraegerInput;
  };
  scbau_kat_massnahmeart: {
    select: ScbauKatMassnahmeart;
    input: ScbauKatMassnahmeartInput;
  };
  scbau_kat_mittelherkunft: {
    select: ScbauKatMittelherkunft;
    input: ScbauKatMittelherkunftInput;
  };
  scbau_kat_phasen: {
    select: ScbauKatPhasen;
    input: ScbauKatPhasenInput;
  };
  scbau_kat_prioritaet: {
    select: ScbauKatPrioritaet;
    input: ScbauKatPrioritaetInput;
  };
  scbau_kat_schultraegertyp: {
    select: ScbauKatSchultraegertyp;
    input: ScbauKatSchultraegertypInput;
  };
  scbau_kat_schultyp: {
    select: ScbauKatSchultyp;
    input: ScbauKatSchultypInput;
  };
  scbau_kat_standardanpass: {
    select: ScbauKatStandardanpass;
    input: ScbauKatStandardanpassInput;
  };
  scbau_kat_verzoegerungen: {
    select: ScbauKatVerzoegerungen;
    input: ScbauKatVerzoegerungenInput;
  };
  scbau_kat_vorlage: {
    select: ScbauKatVorlage;
    input: ScbauKatVorlageInput;
  };
  scbau_t_berichte: {
    select: ScbauTBerichte;
    input: ScbauTBerichteInput;
  };
  scbau_t_berichtswesen: {
    select: ScbauTBerichtswesen;
    input: ScbauTBerichtswesenInput;
  };
  scbau_t_import: {
    select: ScbauTImport;
    input: ScbauTImportInput;
  };
  scbau_t_m_abfragen: {
    select: ScbauTMAbfragen;
    input: ScbauTMAbfragenInput;
  };
  scbau_t_massnahmen_drittm: {
    select: ScbauTMassnahmenDrittm;
    input: ScbauTMassnahmenDrittmInput;
  };
  scbau_t_massnahmen_finanz: {
    select: ScbauTMassnahmenFinanz;
    input: ScbauTMassnahmenFinanzInput;
  };
  scbau_t_massnahmen_kapa: {
    select: ScbauTMassnahmenKapa;
    input: ScbauTMassnahmenKapaInput;
  };
  scbau_t_massnahmen_mittela: {
    select: ScbauTMassnahmenMittela;
    input: ScbauTMassnahmenMittelaInput;
  };
  scbau_t_massnahmen_phase: {
    select: ScbauTMassnahmenPhase;
    input: ScbauTMassnahmenPhaseInput;
  };
  scbau_t_massnahmen_vermerk: {
    select: ScbauTMassnahmenVermerk;
    input: ScbauTMassnahmenVermerkInput;
  };
  scbau_t_massnamen: {
    select: ScbauTMassnamen;
    input: ScbauTMassnamenInput;
  };
  scbau_t_schulstatistik: {
    select: ScbauTSchulstatistik;
    input: ScbauTSchulstatistikInput;
  };
  sf_t_schulferien: {
    select: SfTSchulferien;
    input: SfTSchulferienInput;
  };
  t_bilder: {
    select: TBilder;
    input: TBilderInput;
  };
  t_smapp: {
    select: TSmapp;
    input: TSmappInput;
  };
  t_smapp_absatz: {
    select: TSmappAbsatz;
    input: TSmappAbsatzInput;
  };
  t_smapp_asp: {
    select: TSmappAsp;
    input: TSmappAspInput;
  };
  t_smapp_dokumente: {
    select: TSmappDokumente;
    input: TSmappDokumenteInput;
  };
  t_smapp_seite: {
    select: TSmappSeite;
    input: TSmappSeiteInput;
  };
  t_smapp_seite_kapitel: {
    select: TSmappSeiteKapitel;
    input: TSmappSeiteKapitelInput;
  };
  tsk_categories: {
    select: TskCategories;
    input: TskCategoriesInput;
  };
  tsk_history: {
    select: TskHistory;
    input: TskHistoryInput;
  };
  tsk_projectmember: {
    select: TskProjectmember;
    input: TskProjectmemberInput;
  };
  tsk_task: {
    select: TskTask;
    input: TskTaskInput;
  };
  val_kat_standorte: {
    select: ValKatStandorte;
    input: ValKatStandorteInput;
  };
  vbluser: {
    select: Vbluser;
    input: VbluserInput;
  };
  vdscontainer: {
    select: Vdscontainer;
    input: VdscontainerInput;
  };
  vdscountry: {
    select: Vdscountry;
    input: VdscountryInput;
  };
  vdsdistlist: {
    select: Vdsdistlist;
    input: VdsdistlistInput;
  };
  vdsgroup: {
    select: Vdsgroup;
    input: VdsgroupInput;
  };
  vdslocality: {
    select: Vdslocality;
    input: VdslocalityInput;
  };
  vdsobject: {
    select: Vdsobject;
    input: VdsobjectInput;
  };
  vdsorganization: {
    select: Vdsorganization;
    input: VdsorganizationInput;
  };
  vdsorgunit: {
    select: Vdsorgunit;
    input: VdsorgunitInput;
  };
  vdsrole: {
    select: Vdsrole;
    input: VdsroleInput;
  };
  vdsset: {
    select: Vdsset;
    input: VdssetInput;
  };
  vdstenant: {
    select: Vdstenant;
    input: VdstenantInput;
  };
  vdsuser: {
    select: Vdsuser;
    input: VdsuserInput;
  };
  xcalendarrule: {
    select: Xcalendarrule;
    input: XcalendarruleInput;
  };
  xcalpersonal: {
    select: Xcalpersonal;
    input: XcalpersonalInput;
  };
  xcalpersonal_categoryddb: {
    select: XcalpersonalCategoryddb;
    input: XcalpersonalCategoryddbInput;
  };
  xcalrule12: {
    select: Xcalrule12;
    input: Xcalrule12Input;
  };
  xdatagroup72f3902c: {
    select: Xdatagroup72f3902c;
    input: Xdatagroup72f3902cInput;
  };
  xdatagroup931228fd: {
    select: Xdatagroup931228fd;
    input: Xdatagroup931228fdInput;
  };
  xdatagroup97e2428e: {
    select: Xdatagroup97e2428e;
    input: Xdatagroup97e2428eInput;
  };
  xdatagroup9c4ca29b: {
    select: Xdatagroup9c4ca29b;
    input: Xdatagroup9c4ca29bInput;
  };
  xdatagroup9d1d5e1a: {
    select: Xdatagroup9d1d5e1a;
    input: Xdatagroup9d1d5e1aInput;
  };
  xfiledatagroup: {
    select: Xfiledatagroup;
    input: XfiledatagroupInput;
  };
  xfiledatagroup1: {
    select: Xfiledatagroup1;
    input: Xfiledatagroup1Input;
  };
  xfiledatagroup10: {
    select: Xfiledatagroup10;
    input: Xfiledatagroup10Input;
  };
  xfiledatagroup11: {
    select: Xfiledatagroup11;
    input: Xfiledatagroup11Input;
  };
  xfiledatagroup111: {
    select: Xfiledatagroup111;
    input: Xfiledatagroup111Input;
  };
  xfiledatagroup12: {
    select: Xfiledatagroup12;
    input: Xfiledatagroup12Input;
  };
  xfiledatagroup123: {
    select: Xfiledatagroup123;
    input: Xfiledatagroup123Input;
  };
  xfiledatagroup1234: {
    select: Xfiledatagroup1234;
    input: Xfiledatagroup1234Input;
  };
  xfiledatagroup12345: {
    select: Xfiledatagroup12345;
    input: Xfiledatagroup12345Input;
  };
  xfiledatagroup13: {
    select: Xfiledatagroup13;
    input: Xfiledatagroup13Input;
  };
  xfiledatagroup14: {
    select: Xfiledatagroup14;
    input: Xfiledatagroup14Input;
  };
  xfiledatagroup15: {
    select: Xfiledatagroup15;
    input: Xfiledatagroup15Input;
  };
  xfiledatagroup151: {
    select: Xfiledatagroup151;
    input: Xfiledatagroup151Input;
  };
  xfiledatagroup1512: {
    select: Xfiledatagroup1512;
    input: Xfiledatagroup1512Input;
  };
  xfiledatagroup161: {
    select: Xfiledatagroup161;
    input: Xfiledatagroup161Input;
  };
  xfiledatagroup18: {
    select: Xfiledatagroup18;
    input: Xfiledatagroup18Input;
  };
  xfiledatagroup191: {
    select: Xfiledatagroup191;
    input: Xfiledatagroup191Input;
  };
  xfiledatagroup2: {
    select: Xfiledatagroup2;
    input: Xfiledatagroup2Input;
  };
  xfiledatagroup21: {
    select: Xfiledatagroup21;
    input: Xfiledatagroup21Input;
  };
  xfiledatagroup221: {
    select: Xfiledatagroup221;
    input: Xfiledatagroup221Input;
  };
  xfiledatagroup2212: {
    select: Xfiledatagroup2212;
    input: Xfiledatagroup2212Input;
  };
  xfiledatagroup231: {
    select: Xfiledatagroup231;
    input: Xfiledatagroup231Input;
  };
  xfiledatagroup232: {
    select: Xfiledatagroup232;
    input: Xfiledatagroup232Input;
  };
  xfiledatagroup241: {
    select: Xfiledatagroup241;
    input: Xfiledatagroup241Input;
  };
  xfiledatagroup244b4cdd: {
    select: Xfiledatagroup244b4cdd;
    input: Xfiledatagroup244b4cddInput;
  };
  xfiledatagroup25: {
    select: Xfiledatagroup25;
    input: Xfiledatagroup25Input;
  };
  xfiledatagroup26: {
    select: Xfiledatagroup26;
    input: Xfiledatagroup26Input;
  };
  xfiledatagroup27: {
    select: Xfiledatagroup27;
    input: Xfiledatagroup27Input;
  };
  xfiledatagroup272: {
    select: Xfiledatagroup272;
    input: Xfiledatagroup272Input;
  };
  xfiledatagroup292: {
    select: Xfiledatagroup292;
    input: Xfiledatagroup292Input;
  };
  xfiledatagroup3: {
    select: Xfiledatagroup3;
    input: Xfiledatagroup3Input;
  };
  xfiledatagroup30: {
    select: Xfiledatagroup30;
    input: Xfiledatagroup30Input;
  };
  xfiledatagroup31: {
    select: Xfiledatagroup31;
    input: Xfiledatagroup31Input;
  };
  xfiledatagroup3123: {
    select: Xfiledatagroup3123;
    input: Xfiledatagroup3123Input;
  };
  xfiledatagroup33: {
    select: Xfiledatagroup33;
    input: Xfiledatagroup33Input;
  };
  xfiledatagroup331: {
    select: Xfiledatagroup331;
    input: Xfiledatagroup331Input;
  };
  xfiledatagroup341: {
    select: Xfiledatagroup341;
    input: Xfiledatagroup341Input;
  };
  xfiledatagroup38: {
    select: Xfiledatagroup38;
    input: Xfiledatagroup38Input;
  };
  xfiledatagroup39: {
    select: Xfiledatagroup39;
    input: Xfiledatagroup39Input;
  };
  xfiledatagroup4: {
    select: Xfiledatagroup4;
    input: Xfiledatagroup4Input;
  };
  xfiledatagroup40: {
    select: Xfiledatagroup40;
    input: Xfiledatagroup40Input;
  };
  xfiledatagroup421: {
    select: Xfiledatagroup421;
    input: Xfiledatagroup421Input;
  };
  xfiledatagroup43: {
    select: Xfiledatagroup43;
    input: Xfiledatagroup43Input;
  };
  xfiledatagroup5: {
    select: Xfiledatagroup5;
    input: Xfiledatagroup5Input;
  };
  xfiledatagroup54e9853f: {
    select: Xfiledatagroup54e9853f;
    input: Xfiledatagroup54e9853fInput;
  };
  xfiledatagroup6: {
    select: Xfiledatagroup6;
    input: Xfiledatagroup6Input;
  };
  xfiledatagroup61: {
    select: Xfiledatagroup61;
    input: Xfiledatagroup61Input;
  };
  xfiledatagroup7: {
    select: Xfiledatagroup7;
    input: Xfiledatagroup7Input;
  };
  xfiledatagroup7111: {
    select: Xfiledatagroup7111;
    input: Xfiledatagroup7111Input;
  };
  xfiledatagroup79a09da0: {
    select: Xfiledatagroup79a09da0;
    input: Xfiledatagroup79a09da0Input;
  };
  xfiledatagroup8: {
    select: Xfiledatagroup8;
    input: Xfiledatagroup8Input;
  };
  xfiledatagroup81: {
    select: Xfiledatagroup81;
    input: Xfiledatagroup81Input;
  };
  xfiledatagroup9: {
    select: Xfiledatagroup9;
    input: Xfiledatagroup9Input;
  };
  xfiledatagroup_ch1: {
    select: XfiledatagroupCh1;
    input: XfiledatagroupCh1Input;
  };
  xpoll353cde18: {
    select: Xpoll353cde18;
    input: Xpoll353cde18Input;
  };
  xpoll_categorycac0fc67: {
    select: XpollCategorycac0fc67;
    input: XpollCategorycac0fc67Input;
  };
  xpoll_distributor: {
    select: XpollDistributor;
    input: XpollDistributorInput;
  };
  xpoll_option94d01acc: {
    select: XpollOption94d01acc;
    input: XpollOption94d01accInput;
  };
  xpoll_vote00bb5bc6: {
    select: XpollVote00bb5bc6;
    input: XpollVote00bb5bc6Input;
  };
  ze_kat_buchungsart: {
    select: ZeKatBuchungsart;
    input: ZeKatBuchungsartInput;
  };
  ze_kat_einstellungen: {
    select: ZeKatEinstellungen;
    input: ZeKatEinstellungenInput;
  };
  ze_kat_erfassungsstatus: {
    select: ZeKatErfassungsstatus;
    input: ZeKatErfassungsstatusInput;
  };
  ze_kat_freigabestatus: {
    select: ZeKatFreigabestatus;
    input: ZeKatFreigabestatusInput;
  };
  ze_kat_kostenstellen: {
    select: ZeKatKostenstellen;
    input: ZeKatKostenstellenInput;
  };
  ze_kat_pausen: {
    select: ZeKatPausen;
    input: ZeKatPausenInput;
  };
  ze_kat_saldenkontrolle: {
    select: ZeKatSaldenkontrolle;
    input: ZeKatSaldenkontrolleInput;
  };
  ze_kat_zeittyp: {
    select: ZeKatZeittyp;
    input: ZeKatZeittypInput;
  };
  ze_t_m_d_zeiten: {
    select: ZeTMDZeiten;
    input: ZeTMDZeitenInput;
  };
  ze_t_m_datum: {
    select: ZeTMDatum;
    input: ZeTMDatumInput;
  };
  ze_t_m_journal: {
    select: ZeTMJournal;
    input: ZeTMJournalInput;
  };
  ze_t_m_massnahmen: {
    select: ZeTMMassnahmen;
    input: ZeTMMassnahmenInput;
  };
  ze_t_monat: {
    select: ZeTMonat;
    input: ZeTMonatInput;
  };
  ze_t_perssettings: {
    select: ZeTPerssettings;
    input: ZeTPerssettingsInput;
  };
  ze_t_perssettings_art: {
    select: ZeTPerssettingsArt;
    input: ZeTPerssettingsArtInput;
  };
  ze_t_quartalsbericht: {
    select: ZeTQuartalsbericht;
    input: ZeTQuartalsberichtInput;
  };
}

export const tables = {
  abp_kat_freigabestatus,
  abp_kat_kategorie,
  abp_kat_planungsstatus,
  abp_kat_zustimmungsstatus,
  abp_t_abp,
  abp_t_abp_ma,
  abp_t_abp_ma_details,
  abp_t_abp_status,
  abp_t_abp_zstatus,
  abw_kat_abwesenheitsart,
  abw_kat_antragsstatus,
  abw_kat_planungsprozess,
  abw_t_antrag,
  abw_t_antrag_abwesenheit,
  benv_t_u_apps,
  benv_t_u_gruppen,
  benv_t_u_zusatzdaten,
  bixv_kat_matching,
  bixv_kat_matching_metadat,
  bixv_kat_settings,
  bixv_kat_status,
  bixv_kat_vismetadaten,
  bixv_t_archiv,
  bixv_t_archiv2,
  bixv_t_inbox,
  bixv_t_inbox_md,
  bixv_t_journal,
  bixv_t_log,
  bixv_t_suchtrefferakten,
  cal_kat_bestuhlung,
  cal_kat_kategorien,
  cal_kat_status,
  cal_kat_veranstaltungsart,
  cal_kat_zusatzleistungen,
  cal_set_personal,
  cal_t_externe_verwalter,
  cal_t_ressource_standard,
  cal_t_ressourcen,
  cal_t_ressourcen_bestuhl,
  cal_t_ressourcen_equipment,
  cal_t_termine,
  cal_t_termine_journal,
  cal_t_termine_nachrichten,
  cal_t_termine_reservierer,
  chat,
  chat_document,
  chat_message,
  chat_recipient,
  chat_reffiles,
  chat_usersettings,
  dsattribute,
  dsattributetitle,
  dsclass,
  dsclasstitle,
  dscontainer,
  dscountry,
  dsdistlist,
  dsgroup,
  dslocality,
  dsmember,
  dsobject,
  dsorganization,
  dsorgunit,
  dspasswordhistory,
  dsrole,
  dsset,
  dsstatus,
  dstenant,
  dsuser,
  ft_t_feiertage,
  ft_t_gedenktage,
  h_t_a_hilfetexte,
  h_t_anwendung,
  inv_kat_bereich,
  inv_kat_kategorie,
  inv_kat_unterkategorie,
  inv_t_inventar,
  is_ad_settings,
  is_advertising,
  is_advertising_department,
  is_advertising_file,
  is_advertising_interest,
  is_advertising_language,
  is_advertising_skill,
  is_categories,
  is_comment,
  is_comment_file,
  is_comment_like,
  is_contact,
  is_event,
  is_event_img,
  is_event_participant,
  is_feed,
  is_feed_recipient,
  is_feed_setting,
  is_feedpk,
  is_file_shelf,
  is_file_shelf_file,
  is_file_shelf_folder,
  is_file_shelf_folderperm,
  is_group,
  is_group_bid,
  is_group_img,
  is_group_member,
  is_interest,
  is_mailsetting,
  is_message,
  is_message_member,
  is_modules,
  is_photo,
  is_photo_file,
  is_photoalbum,
  is_photoalbum_preview_img,
  is_photoalbum_recipient,
  is_poke,
  is_post,
  is_post_file,
  is_post_img,
  is_profile,
  is_profile_img,
  is_profile_mailsetting,
  is_profile_nav,
  is_profile_pushsetting,
  is_profile_setting,
  is_pushnotificationsetting,
  is_systemmessage,
  is_systemmessage_rcpt,
  is_systemmessage_reference,
  is_userplugin,
  ix_basic_datagroup,
  ix_doc_category,
  ix_doc_document,
  katalog_bezirke,
  katalog_schulen,
  katalog_standorte,
  kb_kat_boardstatus,
  kb_t_b_besitzer,
  kb_t_b_favoriten,
  kb_t_b_k_beobachten,
  kb_t_b_k_c_mitglieder,
  kb_t_b_k_checkliste,
  kb_t_b_k_connections,
  kb_t_b_k_journal,
  kb_t_b_k_k_journal,
  kb_t_b_k_kommentare,
  kb_t_b_k_labels,
  kb_t_b_k_m_mitglieder,
  kb_t_b_k_mitglieder,
  kb_t_b_k_nachrichten,
  kb_t_b_karte,
  kb_t_b_kategorie,
  kb_t_b_labels,
  kb_t_b_mitglieder,
  kb_t_b_personal_settings,
  kb_t_b_prioritaet,
  kb_t_b_spalte,
  kb_t_b_status,
  kb_t_backup,
  kb_t_board,
  kb_t_boardgruppe,
  kb_t_bu_besitzer,
  kb_t_emailtemplates,
  kb_t_personal_settings,
  kb_t_serientermine,
  lcapikey,
  lcapikeyrole,
  lcapiperm,
  lcapirole,
  lcapp,
  lcappaction,
  lcappchildcontrol,
  lcappchildcontroltitle,
  lcappcontrol,
  lcappcontroldr,
  lcappcontroldrtitle,
  lcappcontroltitle,
  lcappdatapick,
  lcappdatapickchild,
  lcappdg,
  lcappdgtitle,
  lcappfield,
  lcappfieldtitle,
  lcappfilter,
  lcappform,
  lcappfup,
  lcappfupdg,
  lcappfuptitle,
  lcappindex,
  lcappindexcolumn,
  lcapplink,
  lcappmail,
  lcappmailrcp,
  lcappmenuitem,
  lcappprops,
  lcappref,
  lcapprefparam,
  lcappreftitle,
  lcappsearchconfig,
  lcapptempl,
  lcapptitle,
  lccalrecu,
  lccategory,
  lccategorytitle,
  lcexport,
  lcfwconn,
  lclinkedelement,
  lclinkedrecords,
  lclinkedrecordspk,
  lcmainportal,
  lcmapapp,
  lcmenu,
  lcmenucloud,
  lcmenuprop,
  lcmenutitle,
  lcmessages,
  lcpermclass,
  lcpolicy,
  lcprofile,
  lcprtclass,
  lcprtgrid,
  lcprtgridportlet,
  lcprtinstance,
  lcprtmetadata,
  lcprtprop,
  lcprtref,
  lcprtset,
  lcrdf,
  lcrdfpredicate,
  lcrdfuser,
  lcrecipients,
  lcschedhistory,
  lcschedstatistics,
  lcsearchalternative,
  lctaggingposts,
  lctaggingtags,
  per_kat_art,
  per_kat_ausstattung,
  per_kat_ausstattung_kat,
  per_kat_buerol_ebene1,
  per_kat_bueroleitung,
  per_kat_funktion,
  per_kat_standorte,
  per_kat_zusatzfunktion,
  per_t_import_az,
  per_t_orga0,
  per_t_orga1,
  per_t_orga2,
  per_t_orga3,
  per_t_orga4,
  per_t_pers_azk,
  per_t_pers_journal,
  per_t_pers_profil,
  per_t_pers_uk,
  per_t_personal,
  per_t_personal_import,
  planner_event,
  planner_member,
  planner_owners,
  planner_times,
  qu_categories,
  qu_comment,
  qu_comment_files,
  qu_persons,
  qu_question_answers,
  qu_question_cat,
  qu_question_tags,
  qu_questions,
  qu_questions_files,
  qu_tags,
  qu_votes,
  scbau_imp_eckdaten,
  scbau_imp_eckdaten_daten,
  scbau_kat_aufgabentraeger,
  scbau_kat_bautyp,
  scbau_kat_bedarfstraeger,
  scbau_kat_massnahmeart,
  scbau_kat_mittelherkunft,
  scbau_kat_phasen,
  scbau_kat_prioritaet,
  scbau_kat_schultraegertyp,
  scbau_kat_schultyp,
  scbau_kat_standardanpass,
  scbau_kat_verzoegerungen,
  scbau_kat_vorlage,
  scbau_t_berichte,
  scbau_t_berichtswesen,
  scbau_t_import,
  scbau_t_m_abfragen,
  scbau_t_massnahmen_drittm,
  scbau_t_massnahmen_finanz,
  scbau_t_massnahmen_kapa,
  scbau_t_massnahmen_mittela,
  scbau_t_massnahmen_phase,
  scbau_t_massnahmen_vermerk,
  scbau_t_massnamen,
  scbau_t_schulstatistik,
  sf_t_schulferien,
  t_bilder,
  t_smapp,
  t_smapp_absatz,
  t_smapp_asp,
  t_smapp_dokumente,
  t_smapp_seite,
  t_smapp_seite_kapitel,
  tsk_categories,
  tsk_history,
  tsk_projectmember,
  tsk_task,
  val_kat_standorte,
  vbluser,
  vdscontainer,
  vdscountry,
  vdsdistlist,
  vdsgroup,
  vdslocality,
  vdsobject,
  vdsorganization,
  vdsorgunit,
  vdsrole,
  vdsset,
  vdstenant,
  vdsuser,
  xcalendarrule,
  xcalpersonal,
  xcalpersonal_categoryddb,
  xcalrule12,
  xdatagroup72f3902c,
  xdatagroup931228fd,
  xdatagroup97e2428e,
  xdatagroup9c4ca29b,
  xdatagroup9d1d5e1a,
  xfiledatagroup,
  xfiledatagroup1,
  xfiledatagroup10,
  xfiledatagroup11,
  xfiledatagroup111,
  xfiledatagroup12,
  xfiledatagroup123,
  xfiledatagroup1234,
  xfiledatagroup12345,
  xfiledatagroup13,
  xfiledatagroup14,
  xfiledatagroup15,
  xfiledatagroup151,
  xfiledatagroup1512,
  xfiledatagroup161,
  xfiledatagroup18,
  xfiledatagroup191,
  xfiledatagroup2,
  xfiledatagroup21,
  xfiledatagroup221,
  xfiledatagroup2212,
  xfiledatagroup231,
  xfiledatagroup232,
  xfiledatagroup241,
  xfiledatagroup244b4cdd,
  xfiledatagroup25,
  xfiledatagroup26,
  xfiledatagroup27,
  xfiledatagroup272,
  xfiledatagroup292,
  xfiledatagroup3,
  xfiledatagroup30,
  xfiledatagroup31,
  xfiledatagroup3123,
  xfiledatagroup33,
  xfiledatagroup331,
  xfiledatagroup341,
  xfiledatagroup38,
  xfiledatagroup39,
  xfiledatagroup4,
  xfiledatagroup40,
  xfiledatagroup421,
  xfiledatagroup43,
  xfiledatagroup5,
  xfiledatagroup54e9853f,
  xfiledatagroup6,
  xfiledatagroup61,
  xfiledatagroup7,
  xfiledatagroup7111,
  xfiledatagroup79a09da0,
  xfiledatagroup8,
  xfiledatagroup81,
  xfiledatagroup9,
  xfiledatagroup_ch1,
  xpoll353cde18,
  xpoll_categorycac0fc67,
  xpoll_distributor,
  xpoll_option94d01acc,
  xpoll_vote00bb5bc6,
  ze_kat_buchungsart,
  ze_kat_einstellungen,
  ze_kat_erfassungsstatus,
  ze_kat_freigabestatus,
  ze_kat_kostenstellen,
  ze_kat_pausen,
  ze_kat_saldenkontrolle,
  ze_kat_zeittyp,
  ze_t_m_d_zeiten,
  ze_t_m_datum,
  ze_t_m_journal,
  ze_t_m_massnahmen,
  ze_t_monat,
  ze_t_perssettings,
  ze_t_perssettings_art,
  ze_t_quartalsbericht,
}
